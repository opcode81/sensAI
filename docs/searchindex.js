Search.setIndex({"docnames": ["1-supervised-learning/1-vector-models", "2-notebooks/0_intro", "2-notebooks/1-classification", "2-notebooks/2-neural_networks", "index", "sensai/catboost", "sensai/clustering/clustering_base", "sensai/clustering/greedy_clustering", "sensai/clustering/index", "sensai/clustering/sklearn_clustering", "sensai/columngen", "sensai/data/dataset", "sensai/data/index", "sensai/data/io_data", "sensai/data_transformation/dft", "sensai/data_transformation/index", "sensai/data_transformation/sklearn_transformer", "sensai/data_transformation/value_transformation", "sensai/distance_metric", "sensai/ensemble/ensemble_base", "sensai/ensemble/index", "sensai/ensemble/models", "sensai/evaluation/crossval", "sensai/evaluation/eval_stats/eval_stats_base", "sensai/evaluation/eval_stats/eval_stats_classification", "sensai/evaluation/eval_stats/eval_stats_clustering", "sensai/evaluation/eval_stats/eval_stats_regression", "sensai/evaluation/eval_stats/index", "sensai/evaluation/eval_util", "sensai/evaluation/evaluator", "sensai/evaluation/evaluator_clustering", "sensai/evaluation/index", "sensai/evaluation/metric_computation", "sensai/evaluation/result_set", "sensai/feature_importance", "sensai/feature_selection/index", "sensai/feature_selection/rfe", "sensai/featuregen/feature_generator", "sensai/featuregen/feature_generator_registry", "sensai/featuregen/index", "sensai/geoanalytics/geo_clustering", "sensai/geoanalytics/geo_coords", "sensai/geoanalytics/geopandas/coordinate_clustering", "sensai/geoanalytics/geopandas/coordinate_clustering_ground_truth", "sensai/geoanalytics/geopandas/coordinates", "sensai/geoanalytics/geopandas/geometry", "sensai/geoanalytics/geopandas/graph", "sensai/geoanalytics/geopandas/index", "sensai/geoanalytics/index", "sensai/geoanalytics/local_coords", "sensai/geoanalytics/map_tiles", "sensai/hyperopt", "sensai/index", "sensai/lightgbm", "sensai/local_search", "sensai/minizinc", "sensai/multi_model", "sensai/naive_bayes", "sensai/nearest_neighbors", "sensai/normalisation", "sensai/pytorch_lightning/index", "sensai/pytorch_lightning/pl_models", "sensai/sklearn/index", "sensai/sklearn/sklearn_base", "sensai/sklearn/sklearn_classification", "sensai/sklearn/sklearn_regression", "sensai/sklearn_quantile", "sensai/tensor_model", "sensai/tensorflow/index", "sensai/tensorflow/tf_base", "sensai/tensorflow/tf_mlp", "sensai/torch/index", "sensai/torch/torch_base", "sensai/torch/torch_data", "sensai/torch/torch_enums", "sensai/torch/torch_eval_util", "sensai/torch/torch_models/index", "sensai/torch/torch_models/lstnet/index", "sensai/torch/torch_models/lstnet/lstnet_models", "sensai/torch/torch_models/lstnet/lstnet_modules", "sensai/torch/torch_models/mlp/index", "sensai/torch/torch_models/mlp/mlp_models", "sensai/torch/torch_models/mlp/mlp_modules", "sensai/torch/torch_models/residualffn/index", "sensai/torch/torch_models/residualffn/residualffn_models", "sensai/torch/torch_models/residualffn/residualffn_modules", "sensai/torch/torch_models/seq/index", "sensai/torch/torch_models/seq/seq_models", "sensai/torch/torch_models/seq/seq_modules", "sensai/torch/torch_modules", "sensai/torch/torch_opt", "sensai/torch/torchtext", "sensai/tracking/azure_tracking", "sensai/tracking/clearml_tracking", "sensai/tracking/index", "sensai/tracking/mlflow_tracking", "sensai/tracking/tracking_base", "sensai/util/aggregation", "sensai/util/cache", "sensai/util/cache_azure", "sensai/util/cache_mysql", "sensai/util/datastruct", "sensai/util/deprecation", "sensai/util/dtype", "sensai/util/hash", "sensai/util/helper", "sensai/util/index", "sensai/util/io", "sensai/util/jscode", "sensai/util/logging", "sensai/util/math", "sensai/util/multiprocessing", "sensai/util/pandas", "sensai/util/pickle", "sensai/util/plot", "sensai/util/profiling", "sensai/util/sequences", "sensai/util/string", "sensai/util/test", "sensai/util/time", "sensai/util/typing", "sensai/util/version", "sensai/vector_model", "sensai/vectoriser", "sensai/xgboost"], "filenames": ["1-supervised-learning/1-vector-models.ipynb", "2-notebooks/0_intro.md", "2-notebooks/1-classification.ipynb", "2-notebooks/2-neural_networks.ipynb", "index.rst", "sensai/catboost.rst", "sensai/clustering/clustering_base.rst", "sensai/clustering/greedy_clustering.rst", "sensai/clustering/index.rst", "sensai/clustering/sklearn_clustering.rst", "sensai/columngen.rst", "sensai/data/dataset.rst", "sensai/data/index.rst", "sensai/data/io_data.rst", "sensai/data_transformation/dft.rst", "sensai/data_transformation/index.rst", "sensai/data_transformation/sklearn_transformer.rst", "sensai/data_transformation/value_transformation.rst", "sensai/distance_metric.rst", "sensai/ensemble/ensemble_base.rst", "sensai/ensemble/index.rst", "sensai/ensemble/models.rst", "sensai/evaluation/crossval.rst", "sensai/evaluation/eval_stats/eval_stats_base.rst", "sensai/evaluation/eval_stats/eval_stats_classification.rst", "sensai/evaluation/eval_stats/eval_stats_clustering.rst", "sensai/evaluation/eval_stats/eval_stats_regression.rst", "sensai/evaluation/eval_stats/index.rst", "sensai/evaluation/eval_util.rst", "sensai/evaluation/evaluator.rst", "sensai/evaluation/evaluator_clustering.rst", "sensai/evaluation/index.rst", "sensai/evaluation/metric_computation.rst", "sensai/evaluation/result_set.rst", "sensai/feature_importance.rst", "sensai/feature_selection/index.rst", "sensai/feature_selection/rfe.rst", "sensai/featuregen/feature_generator.rst", "sensai/featuregen/feature_generator_registry.rst", "sensai/featuregen/index.rst", "sensai/geoanalytics/geo_clustering.rst", "sensai/geoanalytics/geo_coords.rst", "sensai/geoanalytics/geopandas/coordinate_clustering.rst", "sensai/geoanalytics/geopandas/coordinate_clustering_ground_truth.rst", "sensai/geoanalytics/geopandas/coordinates.rst", "sensai/geoanalytics/geopandas/geometry.rst", "sensai/geoanalytics/geopandas/graph.rst", "sensai/geoanalytics/geopandas/index.rst", "sensai/geoanalytics/index.rst", "sensai/geoanalytics/local_coords.rst", "sensai/geoanalytics/map_tiles.rst", "sensai/hyperopt.rst", "sensai/index.rst", "sensai/lightgbm.rst", "sensai/local_search.rst", "sensai/minizinc.rst", "sensai/multi_model.rst", "sensai/naive_bayes.rst", "sensai/nearest_neighbors.rst", "sensai/normalisation.rst", "sensai/pytorch_lightning/index.rst", "sensai/pytorch_lightning/pl_models.rst", "sensai/sklearn/index.rst", "sensai/sklearn/sklearn_base.rst", "sensai/sklearn/sklearn_classification.rst", "sensai/sklearn/sklearn_regression.rst", "sensai/sklearn_quantile.rst", "sensai/tensor_model.rst", "sensai/tensorflow/index.rst", "sensai/tensorflow/tf_base.rst", "sensai/tensorflow/tf_mlp.rst", "sensai/torch/index.rst", "sensai/torch/torch_base.rst", "sensai/torch/torch_data.rst", "sensai/torch/torch_enums.rst", "sensai/torch/torch_eval_util.rst", "sensai/torch/torch_models/index.rst", "sensai/torch/torch_models/lstnet/index.rst", "sensai/torch/torch_models/lstnet/lstnet_models.rst", "sensai/torch/torch_models/lstnet/lstnet_modules.rst", "sensai/torch/torch_models/mlp/index.rst", "sensai/torch/torch_models/mlp/mlp_models.rst", "sensai/torch/torch_models/mlp/mlp_modules.rst", "sensai/torch/torch_models/residualffn/index.rst", "sensai/torch/torch_models/residualffn/residualffn_models.rst", "sensai/torch/torch_models/residualffn/residualffn_modules.rst", "sensai/torch/torch_models/seq/index.rst", "sensai/torch/torch_models/seq/seq_models.rst", "sensai/torch/torch_models/seq/seq_modules.rst", "sensai/torch/torch_modules.rst", "sensai/torch/torch_opt.rst", "sensai/torch/torchtext.rst", "sensai/tracking/azure_tracking.rst", "sensai/tracking/clearml_tracking.rst", "sensai/tracking/index.rst", "sensai/tracking/mlflow_tracking.rst", "sensai/tracking/tracking_base.rst", "sensai/util/aggregation.rst", "sensai/util/cache.rst", "sensai/util/cache_azure.rst", "sensai/util/cache_mysql.rst", "sensai/util/datastruct.rst", "sensai/util/deprecation.rst", "sensai/util/dtype.rst", "sensai/util/hash.rst", "sensai/util/helper.rst", "sensai/util/index.rst", "sensai/util/io.rst", "sensai/util/jscode.rst", "sensai/util/logging.rst", "sensai/util/math.rst", "sensai/util/multiprocessing.rst", "sensai/util/pandas.rst", "sensai/util/pickle.rst", "sensai/util/plot.rst", "sensai/util/profiling.rst", "sensai/util/sequences.rst", "sensai/util/string.rst", "sensai/util/test.rst", "sensai/util/time.rst", "sensai/util/typing.rst", "sensai/util/version.rst", "sensai/vector_model.rst", "sensai/vectoriser.rst", "sensai/xgboost.rst"], "titles": ["Models with Modular Data Pipelines", "Notebook Tutorials", "Introduction to sensAI: Supervised Learning with VectorModels", "Neural Networks", "Welcome to sensAI!", "catboost", "clustering_base", "greedy_clustering", "clustering", "sklearn_clustering", "columngen", "dataset", "data", "io_data", "dft", "data_transformation", "sklearn_transformer", "value_transformation", "distance_metric", "ensemble_base", "ensemble", "models", "crossval", "eval_stats_base", "eval_stats_classification", "eval_stats_clustering", "eval_stats_regression", "eval_stats", "eval_util", "evaluator", "evaluator_clustering", "evaluation", "metric_computation", "result_set", "feature_importance", "feature_selection", "rfe", "feature_generator", "feature_generator_registry", "featuregen", "geo_clustering", "geo_coords", "coordinate_clustering", "coordinate_clustering_ground_truth", "coordinates", "geometry", "graph", "geopandas", "geoanalytics", "local_coords", "map_tiles", "hyperopt", "API Reference", "lightgbm", "local_search", "minizinc", "multi_model", "naive_bayes", "nearest_neighbors", "normalisation", "pytorch_lightning", "pl_models", "sklearn", "sklearn_base", "sklearn_classification", "sklearn_regression", "sklearn_quantile", "tensor_model", "tensorflow", "tf_base", "tf_mlp", "torch", "torch_base", "torch_data", "torch_enums", "torch_eval_util", "torch_models", "lstnet", "lstnet_models", "lstnet_modules", "mlp", "mlp_models", "mlp_modules", "residualffn", "residualffn_models", "residualffn_modules", "seq", "seq_models", "seq_modules", "torch_modules", "torch_opt", "torchtext", "azure_tracking", "clearml_tracking", "tracking", "mlflow_tracking", "tracking_base", "aggregation", "cache", "cache_azure", "cache_mysql", "datastruct", "deprecation", "dtype", "hash", "helper", "util", "io", "jscode", "logging", "math", "multiprocessing", "pandas", "pickle", "plot", "profiling", "sequences", "string", "test", "time", "typing", "version", "vector_model", "vectoriser", "xgboost"], "terms": {"load_ext": [0, 2, 3], "autoreload": [0, 2, 3], "2": [0, 2, 3, 11, 13, 24, 26, 28, 37, 43, 45, 54, 66, 69, 78, 85, 88, 99, 112, 122, 123], "import": [0, 2, 3, 28, 34, 36, 37, 43, 53, 63, 112, 113, 122], "sy": [0, 2, 3, 109], "path": [0, 2, 3, 42, 43, 51, 55, 65, 78, 79, 85, 98, 107, 109, 113, 114], "append": [0, 2, 14, 37, 98, 99, 107, 109, 123], "src": [0, 2, 3], "sensai": [0, 3, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "xgboost": [0, 2, 4, 52, 63, 64], "torch": [0, 52, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91], "panda": [0, 2, 3, 6, 29, 37, 58, 69, 91, 101, 106, 109, 118, 122], "pd": [0, 2, 3, 10, 13, 14, 37, 101, 107, 109, 112, 114, 119], "backbon": 0, "supervis": 0, "learn": [0, 3, 4, 13, 14, 34, 36, 37, 40, 63, 64, 65, 72, 85, 90, 122], "abstract": [0, 2, 3, 4, 7, 11, 13, 14, 18, 19, 22, 23, 25, 26, 28, 30, 32, 34, 40, 44, 51, 54, 55, 58, 63, 69, 72, 73, 88, 90, 96, 98, 99, 101, 108, 117, 122, 123], "It": [0, 2, 3, 13, 14, 37, 42, 54, 72, 79, 85, 88, 96, 105, 109, 112], "so": [0, 2, 3, 7, 13, 72, 79, 85, 109, 113], "name": [0, 2, 5, 10, 11, 13, 14, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 51, 53, 54, 55, 58, 63, 64, 65, 66, 74, 78, 81, 87, 90, 91, 92, 93, 95, 96, 98, 99, 101, 104, 105, 109, 113, 114, 115, 117, 122, 123], "becaus": [0, 3, 14, 36, 51, 72, 101, 117, 122], "comput": [0, 2, 3, 7, 10, 18, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 40, 41, 45, 46, 51, 53, 54, 58, 63, 64, 90, 97, 98, 101, 104, 113, 122, 123], "scienc": [0, 2], "vector": [0, 2, 3, 14, 29, 37, 41, 69, 79, 87, 88, 90, 122, 123], "correspond": [0, 10, 13, 16, 23, 26, 33, 37, 51, 54, 63, 64, 67, 72, 73, 79, 85, 90, 91, 99, 101, 112, 113, 116, 117, 122], "an": [0, 2, 4, 7, 9, 10, 11, 13, 14, 17, 23, 24, 26, 28, 29, 33, 36, 37, 38, 40, 41, 42, 43, 51, 54, 55, 58, 59, 63, 65, 66, 67, 69, 72, 73, 74, 78, 79, 85, 88, 90, 91, 95, 97, 98, 99, 100, 101, 105, 107, 109, 112, 113, 114, 116, 117, 118, 122, 123], "arrai": [0, 2, 3, 14, 17, 36, 42, 43, 44, 55, 66, 67, 72, 99, 112, 116, 118, 122, 123], "map": [0, 14, 16, 23, 24, 25, 26, 28, 29, 34, 40, 46, 51, 54, 63, 69, 85, 88, 91, 97, 105, 113, 114, 117, 118, 123], "desir": [0, 4, 13, 30, 73, 78, 88, 122, 123], "output": [0, 2, 10, 13, 14, 22, 25, 28, 29, 37, 55, 56, 58, 61, 63, 64, 65, 67, 69, 72, 73, 78, 79, 81, 84, 85, 88, 90, 91, 109, 112, 115, 122, 123], "i": [0, 3, 7, 13, 14, 18, 24, 34, 36, 37, 49, 51, 54, 61, 65, 66, 67, 72, 73, 78, 79, 90, 91, 95, 96, 98, 99, 101, 107, 109, 114, 116, 117, 121, 122, 123], "e": [0, 2, 3, 4, 6, 7, 13, 14, 18, 22, 23, 24, 28, 29, 33, 34, 36, 37, 38, 49, 51, 54, 61, 65, 66, 67, 72, 78, 79, 85, 90, 91, 93, 95, 96, 98, 99, 101, 107, 109, 112, 114, 116, 117, 121, 122, 123], "regress": [0, 2, 3, 13, 26, 28, 29, 34, 37, 56, 61, 67, 72, 79, 85, 90, 114, 124], "target": [0, 2, 3, 13, 26, 28, 37, 61, 67, 72, 79, 87, 88, 122, 123], "note": [0, 2, 3, 14, 24, 28, 33, 36, 37, 51, 54, 63, 64, 72, 87, 90, 101, 112, 117, 122, 123], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 22, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 42, 43, 45, 51, 54, 61, 63, 64, 67, 72, 73, 75, 78, 79, 81, 84, 85, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 103, 105, 107, 109, 112, 113, 116, 117, 120, 121, 122, 123], "doe": [0, 3, 14, 26, 37, 51, 54, 79, 85, 98, 101, 105, 113, 117, 122], "limit": [0, 2, 23, 24, 37, 53, 55, 109, 117], "tabular": [0, 4], "within": [0, 2, 3, 4, 13, 14, 18, 37, 40, 43, 72, 73, 85, 87, 95, 98, 99, 101, 108, 117, 122], "can": [0, 1, 2, 3, 4, 7, 10, 13, 14, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 37, 38, 49, 51, 54, 58, 61, 66, 67, 72, 73, 74, 78, 79, 85, 87, 88, 90, 91, 95, 96, 98, 101, 102, 105, 108, 109, 112, 113, 117, 122, 123], "take": [0, 2, 3, 14, 23, 24, 25, 26, 37, 61, 66, 67, 72, 73, 78, 87, 88, 98, 99, 109, 122, 123], "arbitrari": [0, 2, 3, 14, 37, 51, 54], "form": [0, 2, 7, 13, 40, 51, 67, 105, 117, 122, 123], "contrast": [0, 45], "thei": [0, 2, 3, 4, 13, 14, 37, 61, 67, 72, 73, 113, 116, 122], "ar": [0, 2, 3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 34, 36, 37, 38, 40, 49, 51, 53, 54, 56, 58, 66, 67, 72, 73, 78, 79, 85, 87, 88, 90, 91, 95, 97, 98, 99, 101, 105, 107, 108, 109, 112, 113, 114, 116, 117, 122, 123], "defin": [0, 2, 3, 7, 13, 14, 16, 22, 23, 26, 29, 41, 58, 64, 65, 72, 84, 88, 90, 101, 109, 116, 117, 122], "mathemat": [0, 2, 122], "everi": [0, 2, 3, 28, 49, 51, 78, 79, 96, 98, 112, 114, 115, 117, 122], "element": [0, 2, 37, 51, 79, 88, 112, 116, 117], "could": [0, 2, 3, 36, 51, 73, 91, 112], "itself": [0, 2, 7, 28, 33, 67, 99, 105, 109, 112, 122], "complex": [0, 2, 4, 78, 79, 98, 117, 122], "most": [0, 2, 14, 24, 34, 37, 38, 54, 121], "sens": [0, 2, 122], "ani": [0, 2, 3, 13, 14, 16, 17, 22, 23, 24, 28, 29, 36, 37, 40, 51, 63, 72, 73, 75, 78, 79, 82, 85, 87, 88, 90, 91, 95, 96, 98, 99, 101, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 122, 123], "kind": [0, 95], "object": [0, 2, 6, 7, 9, 10, 13, 14, 16, 17, 22, 23, 24, 26, 28, 29, 32, 33, 34, 36, 37, 38, 40, 41, 42, 46, 49, 50, 51, 54, 55, 58, 59, 61, 63, 69, 72, 73, 88, 89, 90, 92, 95, 96, 97, 98, 99, 101, 104, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123], "from": [0, 2, 3, 4, 10, 13, 14, 16, 22, 23, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 42, 43, 51, 53, 54, 55, 63, 64, 67, 72, 73, 74, 78, 79, 81, 87, 88, 90, 91, 98, 99, 101, 107, 112, 113, 114, 115, 116, 117, 122, 123], "classif": [0, 2, 5, 24, 26, 28, 29, 34, 37, 61, 67, 72, 78, 79, 81, 84, 90, 124], "vectorclassificationmodel": [0, 2, 22, 28, 32, 36, 57, 58, 63, 67, 72, 122], "vectorregressionmodel": [0, 2, 21, 22, 26, 28, 32, 36, 56, 58, 63, 66, 67, 69, 72, 122], "deriv": [0, 3, 4, 51, 54, 107, 115, 117], "And": 0, "we": [0, 2, 3, 5, 7, 26, 40, 45, 63, 64, 67, 72, 78, 88, 95, 96, 97, 112, 122, 123], "furthermor": [0, 37, 96], "provid": [0, 2, 3, 6, 10, 13, 14, 18, 22, 23, 28, 29, 34, 36, 37, 42, 43, 51, 54, 58, 72, 73, 81, 84, 85, 88, 90, 91, 93, 96, 98, 99, 101, 117, 123], "rule": [0, 14, 28, 29, 37, 38, 56, 58, 72, 73, 75, 99, 117, 122], "facilit": [0, 2, 3, 11, 28, 38, 114, 117], "do": [0, 2, 3, 4, 9, 14, 37, 38, 51, 73, 88, 90, 98, 99, 105, 109, 116, 117, 122], "requir": [0, 2, 3, 7, 14, 22, 29, 33, 37, 61, 63, 64, 67, 72, 73, 78, 79, 90, 101, 109, 112, 117, 122], "rulebasedvectorclassificationmodel": [0, 122], "rulebasedvectorregressionmodel": [0, 56, 122], "These": [0, 37, 43, 56, 122], "turn": [0, 2], "specialis": [0, 2, 91], "order": [0, 2, 3, 4, 13, 14, 22, 24, 28, 29, 34, 36, 37, 51, 54, 57, 58, 72, 79, 90, 98, 99, 109, 114, 121, 122, 123], "direct": [0, 23, 24, 79, 88, 101], "access": [0, 36, 98], "wide": [0, 4], "us": [0, 3, 4, 5, 7, 9, 10, 11, 13, 14, 18, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 49, 51, 53, 54, 58, 61, 63, 64, 65, 66, 67, 69, 72, 73, 75, 78, 79, 81, 85, 87, 88, 90, 91, 95, 96, 98, 99, 100, 101, 105, 107, 109, 112, 113, 114, 115, 116, 117, 120, 122, 123, 124], "machin": [0, 2, 4], "librari": [0, 2, 4, 109], "scikit": [0, 2, 3, 4, 13, 34, 40, 63, 64, 65], "pytorch": [0, 2, 3, 4], "etc": [0, 2, 34, 90, 117, 121], "your": [0, 2, 4, 7, 72, 122], "id": [0, 2, 38, 117, 123], "s": [0, 2, 3, 4, 7, 10, 11, 13, 14, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 42, 51, 52, 53, 54, 58, 63, 66, 67, 72, 73, 78, 79, 88, 90, 95, 96, 98, 101, 104, 107, 108, 109, 110, 112, 114, 117, 122, 123, 124], "view": [0, 3, 13, 99], "inspect": [0, 2, 3, 33], "them": [0, 1, 2, 3, 7, 13, 14, 28, 37, 55, 61, 67, 87, 98, 102, 117, 122, 123], "fundment": 0, "structur": [0, 52, 99, 101, 117], "row": [0, 3, 13, 14, 29, 33, 42, 49, 51, 72, 99, 112, 122], "frame": [0, 3, 10, 13, 14, 23, 24, 28, 29, 33, 34, 37, 38, 51, 58, 61, 67, 72, 73, 78, 81, 84, 87, 91, 98, 99, 112, 122], "entir": [0, 2, 14, 28, 36, 78, 79, 88, 90, 122], "thu": [0, 2, 3, 16, 29, 51, 72, 79, 88, 90, 112, 117, 122, 123], "batch": [0, 64, 65, 72, 73, 85, 90, 91, 99, 112], "good": [0, 14, 34, 117], "represent": [0, 2, 3, 4, 29, 51, 54, 58, 63, 79, 88, 95, 96, 98, 99, 104, 109, 112, 114, 117, 118], "rudimentari": [0, 3], "meta": [0, 2, 11, 37, 38, 72, 90, 122], "column": [0, 2, 3, 5, 10, 11, 13, 14, 18, 23, 24, 28, 29, 34, 37, 38, 49, 51, 53, 61, 67, 72, 78, 81, 84, 87, 91, 99, 112, 122], "avoid": [0, 3, 4, 7, 37, 51, 57, 58, 96], "ambigu": [0, 3], "contain": [0, 1, 2, 3, 4, 6, 7, 11, 13, 14, 22, 23, 24, 25, 26, 28, 29, 34, 36, 37, 40, 42, 43, 46, 51, 53, 54, 55, 66, 67, 72, 73, 81, 84, 87, 88, 98, 99, 101, 103, 105, 109, 116, 117, 119, 121, 122, 123], "arbitrarili": [0, 93, 95, 96, 122], "yet": [0, 2, 3, 34, 85, 98], "simplest": 0, "case": [0, 2, 3, 5, 10, 14, 16, 22, 23, 24, 26, 28, 29, 33, 34, 36, 37, 38, 53, 54, 61, 63, 67, 69, 73, 79, 85, 87, 88, 90, 91, 95, 96, 98, 101, 105, 109, 112, 113, 114, 116, 117, 122, 123], "directli": [0, 1, 2, 28, 51, 72, 79, 88, 98, 101], "matrix": [0, 2, 40, 78, 79, 114], "2d": [0, 3, 72, 85], "process": [0, 2, 3, 4, 14, 28, 36, 37, 51, 54, 72, 73, 78, 79, 87, 88, 90, 101, 122], "fit": [0, 2, 3, 6, 9, 14, 16, 17, 22, 28, 29, 30, 37, 40, 42, 53, 61, 67, 72, 73, 87, 90, 99, 122, 123], "predict": [0, 2, 11, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 61, 63, 65, 66, 67, 72, 79, 87, 88, 96, 122], "method": [0, 2, 3, 7, 25, 28, 29, 33, 34, 36, 37, 42, 46, 53, 72, 73, 90, 96, 99, 109, 113, 117, 122, 123], "latter": [0, 54, 79, 105, 123], "return": [0, 3, 6, 7, 10, 13, 14, 16, 18, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 49, 51, 54, 55, 63, 66, 67, 72, 73, 74, 78, 79, 81, 84, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123], "its": [0, 2, 3, 4, 14, 51, 54, 58, 66, 88, 98, 101, 109, 110, 114, 117], "scope": [0, 109], "appli": [0, 2, 4, 7, 10, 13, 14, 16, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 46, 51, 54, 63, 64, 65, 67, 72, 73, 74, 78, 79, 81, 84, 90, 98, 109, 117, 122, 123], "one": [0, 2, 3, 5, 13, 14, 17, 23, 24, 26, 28, 29, 30, 34, 36, 37, 38, 40, 41, 42, 49, 51, 53, 54, 61, 63, 64, 65, 66, 67, 72, 73, 78, 79, 87, 88, 90, 96, 98, 101, 105, 107, 109, 112, 114, 122, 123], "kei": [0, 2, 3, 4, 10, 18, 28, 29, 34, 38, 51, 58, 90, 91, 97, 98, 99, 100, 101, 105, 108, 114, 116, 117], "principl": [0, 2, 3, 4, 117], "mai": [0, 2, 5, 7, 14, 22, 23, 24, 28, 29, 34, 37, 40, 41, 51, 53, 54, 63, 64, 66, 72, 73, 87, 88, 90, 91, 98, 99, 107, 113, 117, 122, 123], "specif": [0, 2, 3, 4, 14, 16, 26, 33, 42, 46, 51, 54, 64, 65, 88, 96, 98, 101, 114, 117], "origin": [0, 2, 5, 7, 13, 14, 26, 34, 37, 49, 53, 55, 63, 64, 72, 85, 88, 90, 114, 122, 123], "g": [0, 2, 4, 6, 14, 22, 23, 24, 28, 29, 33, 34, 37, 38, 51, 54, 61, 67, 72, 79, 85, 93, 95, 96, 98, 99, 101, 109, 112, 114, 117, 122, 123], "convers": [0, 26, 40, 49, 72, 98, 103, 117, 123], "more": [0, 2, 3, 14, 24, 37, 54, 63, 72, 73, 79, 85, 87, 96, 98, 114, 117, 122, 123], "tensor": [0, 3, 4, 61, 67, 72, 73, 74, 79, 81, 85, 88, 90, 91], "neural": [0, 4, 72, 73], "network": [0, 4, 72, 73, 79, 85, 88], "shall": [0, 2, 3, 7, 14, 17, 22, 26, 28, 36, 37, 38, 40, 51, 54, 55, 58, 64, 65, 67, 72, 73, 78, 87, 90, 96, 98, 105, 109, 113, 114, 117, 122, 123], "see": [0, 2, 5, 13, 14, 23, 24, 26, 28, 34, 37, 40, 49, 51, 53, 54, 58, 64, 65, 75, 79, 85, 88, 90, 98, 99, 124], "below": [0, 6, 9, 22, 26, 42, 51, 54], "here": [0, 2, 3, 29, 37, 45, 52, 54, 105], "particularli": [0, 2, 3, 58, 63, 64, 117], "iri": [0, 2], "flower": [0, 2], "speci": 0, "where": [0, 2, 3, 7, 10, 13, 14, 16, 17, 22, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 46, 49, 51, 54, 58, 63, 66, 67, 69, 72, 73, 78, 79, 85, 88, 90, 91, 95, 96, 98, 99, 101, 105, 112, 113, 114, 116, 117, 122, 123], "measur": [0, 2], "petal": [0, 2], "sepal": [0, 2], "datasetclassificationiri": [0, 11], "io_data": [0, 12, 26, 28, 29, 34, 36, 66, 75, 122], "load_io_data": [0, 11], "to_df": [0, 13], "sampl": [0, 2, 3, 11, 26, 33, 40, 72, 88, 115], "8": [0, 2, 3, 13, 26, 54, 117], "length": [0, 2, 3, 14, 17, 24, 42, 46, 67, 72, 73, 87, 88, 98, 99, 112, 123], "cm": [0, 2], "width": [0, 2, 112, 114], "25": [0, 2, 16, 85], "5": [0, 2, 3, 13, 16, 22, 24, 34, 45, 51, 54, 70, 78, 81, 85, 98, 112, 113, 114], "0": [0, 2, 3, 11, 13, 14, 16, 18, 24, 25, 26, 28, 36, 37, 41, 45, 49, 51, 53, 54, 57, 58, 61, 63, 64, 65, 67, 69, 72, 78, 79, 88, 90, 97, 98, 99, 100, 109, 110, 114, 116, 117, 119, 120, 122, 123], "3": [0, 2, 3, 11, 13, 37, 85, 112], "1": [0, 2, 3, 6, 9, 11, 13, 14, 16, 18, 19, 21, 24, 25, 26, 28, 30, 34, 36, 37, 42, 43, 46, 49, 51, 53, 54, 57, 61, 63, 64, 65, 67, 72, 79, 84, 85, 88, 90, 97, 98, 99, 100, 110, 112, 114, 116, 117, 123], "6": [0, 2, 13, 78, 118], "setosa": [0, 2], "49": 0, "4": [0, 2, 3, 13, 37, 85, 112], "106": [0, 2], "9": [0, 2, 3, 99, 114], "7": [0, 2, 13], "virginica": [0, 2], "119": 0, "62": [0, 99], "versicolor": [0, 2], "121": [0, 2], "instanc": [0, 2, 13, 14, 16, 22, 24, 28, 29, 30, 33, 37, 38, 42, 43, 46, 51, 54, 72, 74, 81, 84, 88, 90, 91, 93, 95, 96, 98, 99, 101, 107, 108, 109, 113, 117, 120, 122, 123], "inputoutputdata": [0, 2, 3, 11, 13, 22, 26, 28, 29, 34, 36, 66, 75, 122], "which": [0, 2, 3, 7, 10, 11, 13, 14, 16, 17, 18, 22, 23, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 43, 51, 53, 54, 58, 63, 64, 65, 67, 69, 72, 73, 75, 78, 79, 81, 84, 85, 87, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123], "two": [0, 2, 3, 7, 14, 26, 34, 40, 41, 46, 49, 73, 79, 85, 90, 91, 98, 101, 109, 114, 116, 117], "merg": [0, 7, 40], "easier": 0, "visualis": [0, 23, 24, 28, 29, 49], "let": [0, 2, 3], "split": [0, 2, 3, 13, 22, 28, 29, 36, 49, 53, 72, 73, 75, 78], "load": [0, 2, 3, 42, 98, 99], "splitter": [0, 13, 22, 29, 72], "datasplitterfract": [0, 2, 13], "train_io_data": 0, "test_io_data": [0, 2, 28, 75], "train": [0, 3, 14, 22, 28, 29, 36, 37, 53, 56, 61, 63, 64, 65, 67, 72, 73, 75, 78, 79, 81, 84, 85, 90, 91, 93, 122, 123], "sklearn": [0, 2, 3, 9, 13, 14, 16, 34, 36, 38, 40, 42, 52, 63, 64, 65, 117, 123], "sklearnrandomforestvectorclassificationmodel": [0, 2, 3, 64], "n_estim": [0, 3, 53, 64, 65], "15": [0, 2, 109], "fit_input_output_data": [0, 2, 122], "make": [0, 2, 4, 14, 37, 41, 51, 54, 72, 73, 79, 87, 88, 98, 117, 122], "just": [0, 7, 26, 28, 40, 67, 72, 95], "conveni": [0, 14, 29, 38, 42, 72, 95, 96, 99, 101, 109, 117, 122], "pass": [0, 2, 3, 5, 14, 22, 23, 26, 28, 29, 38, 40, 42, 51, 53, 58, 63, 64, 65, 66, 67, 72, 88, 90, 95, 96, 97, 98, 105, 107, 109, 112, 113, 114, 117, 122, 123], "instead": [0, 2, 4, 14, 17, 23, 28, 29, 34, 37, 38, 51, 67, 98, 116, 117, 122], "equival": [0, 2, 13, 51, 58, 118], "separ": [0, 3, 13, 14, 26, 34, 37, 61, 67, 78, 79, 90, 98], "now": [0, 2, 3, 67], "compar": [0, 3, 28], "ground": [0, 2, 23, 24, 25, 29, 43, 61, 66, 67, 73, 90, 122], "truth": [0, 2, 23, 24, 25, 29, 43, 61, 67, 73, 90, 122], "some": [0, 2, 3, 4, 14, 25, 28, 33, 51, 54, 63, 64, 73, 85, 91, 109, 112, 117, 122, 123], "concat": [0, 2, 37, 73, 123], "axi": [0, 2, 14, 23, 26, 114], "99": [0, 2], "87": [0, 2], "58": [0, 2], "102": [0, 2], "144": [0, 2], "116": 0, "20": [0, 3, 53, 58], "124": [0, 2], "straightforward": [0, 2], "own": [0, 2, 72], "simpli": [0, 2, 3, 7, 10, 28, 37, 72, 87], "subclass": [0, 2, 3, 7, 13, 33, 109, 117], "appropri": [0, 2, 14, 29, 54, 72, 90, 109, 113, 118], "depend": [0, 2, 79, 88, 90, 101, 117], "type": [0, 2, 3, 9, 14, 23, 24, 28, 29, 34, 43, 46, 53, 58, 63, 64, 88, 98, 99, 101, 103, 105, 106, 112, 118, 122, 123], "you": [0, 1, 2, 3, 14, 28, 30, 51, 72, 113, 122, 123], "want": [0, 2, 3, 14, 28, 95, 96, 117, 123], "For": [0, 2, 3, 4, 7, 10, 13, 23, 26, 28, 29, 34, 36, 37, 49, 54, 58, 61, 67, 72, 73, 75, 78, 79, 84, 88, 98, 116, 117, 122], "classifi": [0, 2, 3, 25, 28, 53, 67, 122], "alwai": [0, 2, 10, 14, 28, 37, 58, 64, 65, 73, 91, 97, 109, 117, 122, 123], "priori": 0, "probabl": [0, 2, 23, 24, 29, 37, 51, 54, 67, 72, 74, 78, 79, 81, 85, 114, 122], "each": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 22, 23, 26, 28, 29, 34, 36, 37, 38, 40, 49, 51, 52, 54, 57, 58, 63, 64, 73, 78, 79, 81, 85, 87, 88, 90, 91, 92, 95, 96, 98, 99, 107, 112, 114, 117, 122, 123], "ignor": [0, 3, 7, 14, 17, 24, 28, 40, 88, 117, 122], "inherit": [0, 2, 3, 98], "priorprobabilityvectorclassificationmodel": 0, "def": [0, 3], "_fit_classifi": [0, 2], "self": [0, 3, 49, 63, 72, 114, 122], "x": [0, 3, 9, 13, 19, 23, 24, 28, 37, 49, 61, 66, 67, 72, 73, 79, 82, 85, 88, 90, 110, 111, 114, 117, 122], "y": [0, 13, 23, 24, 28, 29, 37, 49, 61, 67, 72, 73, 90, 111, 114, 122, 123], "_prior_prob": 0, "iloc": [0, 3], "value_count": [0, 14], "normal": [0, 2, 24, 28, 45, 85, 114, 122], "true": [0, 2, 10, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 43, 51, 54, 55, 61, 63, 65, 66, 67, 69, 72, 73, 78, 81, 84, 85, 90, 91, 96, 98, 100, 101, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 122, 123], "to_dict": 0, "_predict_class_prob": 0, "valu": [0, 2, 3, 10, 13, 14, 16, 17, 18, 23, 24, 25, 26, 28, 29, 34, 36, 37, 40, 45, 51, 54, 55, 58, 59, 63, 65, 66, 72, 73, 74, 79, 88, 90, 91, 92, 96, 97, 98, 99, 100, 101, 105, 108, 110, 112, 113, 114, 116, 117, 122, 123], "cl": [0, 14, 113, 122], "get_class_label": [0, 122], "len": [0, 13, 116], "index": [0, 4, 7, 10, 18, 23, 37, 40, 41, 42, 43, 58, 63, 64, 67, 90, 99, 101, 107, 112, 114, 116, 120, 122], "adapt": [0, 4, 54, 79, 88], "anoth": [0, 2, 3, 14, 36, 37, 51, 54, 123], "typic": [0, 2, 7, 29, 37, 56, 72, 79, 109, 122], "few": [0, 2], "line": [0, 2, 26, 41, 51, 63, 72, 107, 114, 117], "adher": 0, "apart": [0, 79], "paramet": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 49, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124], "construct": [0, 2, 3, 7, 14, 26, 29, 37, 54, 58, 72, 98, 99, 101, 107, 109, 123], "question": [0, 49, 122], "all": [0, 2, 3, 4, 6, 7, 13, 14, 16, 17, 18, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 42, 43, 51, 53, 54, 58, 61, 63, 64, 67, 79, 81, 85, 88, 90, 95, 97, 98, 99, 105, 109, 112, 114, 117, 122, 123], "flexibl": [0, 4], "via": [0, 2, 3, 5, 7, 14, 28, 29, 34, 37, 38, 51, 53, 54, 72, 79, 87, 90, 96, 98, 99, 109, 113, 114, 117, 123], "call": [0, 2, 16, 28, 29, 37, 51, 54, 72, 79, 85, 96, 98, 99, 102, 109, 113, 117, 122, 123], "post": [0, 3, 122, 123], "have": [0, 2, 3, 5, 7, 10, 13, 14, 23, 28, 34, 36, 37, 38, 51, 53, 54, 61, 66, 67, 72, 78, 88, 96, 97, 98, 99, 101, 105, 107, 112, 114, 116, 117, 122, 123], "with_": 0, "prefix": [0, 28, 78, 95, 98, 99, 107], "indic": [0, 7, 13, 14, 17, 18, 22, 24, 26, 37, 40, 41, 49, 51, 54, 58, 72, 78, 88, 98, 99, 100, 102, 114, 116], "akin": 0, "builder": [0, 117], "pattern": [0, 14], "allow": [0, 2, 3, 37, 40, 72, 88, 99, 109, 123], "chain": [0, 14, 37, 54, 122], "singl": [0, 2, 4, 7, 10, 14, 22, 23, 24, 28, 29, 33, 37, 42, 53, 56, 61, 63, 67, 72, 73, 75, 87, 88, 90, 92, 112, 117, 122, 123], "statement": [0, 95, 96, 109], "relev": [0, 2, 4, 14, 28, 37, 54, 72, 97, 107], "with_nam": [0, 2, 3, 14, 122], "report": [0, 28, 34, 72, 81, 84, 105, 117], "purpos": [0, 3, 28, 49, 51, 54, 75, 117, 122], "with_raw_input_transform": [0, 122], "ad": [0, 2, 3, 24, 26, 28, 29, 34, 37, 38, 46, 58, 65, 72, 85, 97, 98, 99, 105, 107, 113, 117, 122], "initi": [0, 4, 7, 34, 40, 51, 54, 88, 90, 101, 109, 112, 113, 117], "with_feature_gener": [0, 122], "with_feature_collector": [0, 122], "specifi": [0, 3, 4, 5, 13, 14, 23, 25, 26, 28, 29, 33, 37, 38, 51, 53, 66, 72, 73, 75, 81, 85, 90, 98, 107, 109, 112, 113], "how": [0, 2, 4, 7, 26, 54, 88, 98, 122, 123], "with_feature_transform": [0, 122], "three": [0, 2, 112], "point": [0, 2, 7, 13, 22, 23, 24, 25, 26, 28, 29, 36, 37, 40, 41, 42, 43, 45, 46, 52, 53, 54, 58, 63, 64, 67, 72, 73, 90, 91, 112, 114, 119, 122], "essenti": [0, 2], "address": [0, 2, 85], "detail": [0, 28], "option": [0, 3, 5, 6, 7, 9, 10, 13, 14, 16, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 40, 42, 43, 51, 53, 54, 58, 63, 64, 65, 66, 67, 72, 73, 74, 75, 78, 79, 81, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 105, 107, 109, 112, 113, 114, 115, 116, 117, 122, 123, 124], "fulli": [0, 3, 4, 85, 114, 117], "reflect": [0, 28, 51, 54, 66], "string": [0, 14, 26, 29, 38, 53, 58, 63, 95, 96, 98, 99, 104, 106, 109, 112, 113, 123], "pretti": [0, 117], "print": [0, 2, 115, 117], "pprint": [0, 117], "str": [0, 5, 6, 10, 13, 14, 18, 22, 23, 24, 25, 26, 28, 29, 33, 34, 36, 37, 38, 42, 43, 46, 51, 53, 55, 58, 63, 64, 65, 66, 74, 75, 78, 81, 87, 90, 91, 92, 93, 95, 96, 98, 99, 101, 104, 105, 107, 108, 109, 112, 113, 114, 115, 117, 120, 122], "randomforest": [0, 2, 3, 34], "featuregener": [0, 2, 5, 14, 37, 38, 53, 122], "none": [0, 2, 5, 6, 7, 9, 10, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 40, 41, 42, 43, 49, 50, 51, 53, 54, 55, 58, 59, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 78, 81, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123, 124], "rawinputtransformerchain": [0, 2], "dataframetransformerchain": [0, 2, 14, 122], "dataframetransform": [0, 2, 14, 29, 37, 122], "featuretransformerchain": [0, 2], "fitarg": [0, 2], "usebalancedclassweight": [0, 2], "fals": [0, 2, 3, 7, 10, 11, 13, 14, 17, 18, 22, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 42, 51, 53, 54, 55, 58, 63, 64, 65, 72, 73, 84, 90, 91, 95, 96, 98, 99, 100, 101, 104, 105, 107, 109, 110, 112, 113, 114, 115, 116, 119, 121, 122, 123, 124], "uselabelencod": [0, 2], "randomforestclassifi": [0, 2], "random_st": [0, 2, 5, 34, 51, 53, 64, 65, 66, 124], "42": [0, 2, 5, 13, 22, 29, 34, 51, 53, 54, 64, 65, 66, 124], "A": [0, 2, 3, 4, 14, 16, 17, 18, 22, 26, 33, 37, 38, 49, 54, 58, 72, 73, 78, 85, 87, 88, 90, 91, 96, 98, 99, 109, 112, 113, 122, 123], "strongli": [0, 4], "associ": [0, 2, 4, 6, 7, 9, 14, 28, 42, 43, 51, 54, 98, 114], "critic": 0, "sever": [0, 2, 14, 22, 28, 56, 63, 98, 114, 123], "heterogen": [0, 4], "same": [0, 2, 4, 10, 13, 14, 23, 24, 28, 29, 37, 40, 51, 52, 54, 58, 61, 63, 67, 72, 73, 78, 79, 88, 95, 98, 101, 112, 114, 116, 122, 123], "ha": [0, 10, 14, 29, 37, 38, 43, 51, 52, 54, 58, 61, 67, 69, 72, 73, 79, 85, 91, 96, 98, 101, 109, 112, 113, 114, 122, 123], "differ": [0, 2, 3, 28, 36, 41, 45, 51, 85, 88, 90, 114, 117, 118, 122], "regard": [0, 2], "optim": [0, 38, 90], "mean": [0, 2, 23, 26, 34, 40, 43, 45, 51, 53, 54, 65, 66, 72, 88, 90, 97, 110, 122], "compos": [0, 4, 114], "reusabl": 0, "user": [0, 2, 13, 37, 51, 54, 100, 117], "compon": [0, 2, 3, 51, 58, 73, 78, 79, 87, 88, 98, 117, 121], "serv": [0, 2, 3, 55, 73, 91, 122], "answer": 0, "follow": [0, 2, 3, 7, 14, 78, 79, 85, 90], "pre": [0, 3, 4, 73, 85, 87], "might": [0, 2, 3], "necessari": [0, 2, 3, 14, 72, 90, 93, 122], "befor": [0, 13, 22, 28, 29, 30, 37, 72, 85, 90, 98, 109, 114, 122, 123], "extract": [0, 2, 43, 44, 112], "need": [0, 2, 3, 5, 14, 28, 51, 53, 54, 72, 88, 90, 98, 99, 109], "filter": [0, 14, 112], "clean": [0, 63], "establish": [0, 4, 114], "usabl": 0, "convert": [0, 14, 26, 54, 55, 67, 72, 87, 108, 112, 117, 118, 122], "date": [0, 109], "proper": [0, 117], "infer": [0, 5, 14, 53, 72, 114, 122], "imput": 0, "miss": [0, 2, 37], "task": [0, 2, 4, 93], "suggest": [0, 28], "non": [0, 4, 7, 24, 28, 29, 40, 43, 54, 61, 67, 72, 85, 98, 99, 105, 113, 117, 122], "dft": [0, 3, 15, 37, 58, 73], "easili": [0, 3], "discov": 0, "through": [0, 4, 7, 109, 122], "auto": [0, 2, 23, 26, 64, 65, 79, 114], "complet": [0, 2, 36, 54, 79, 90, 109, 113, 114], "what": [0, 2, 3, 4, 7, 79, 81, 105, 114], "set": [0, 3, 6, 7, 13, 14, 16, 18, 22, 23, 24, 26, 28, 29, 30, 33, 36, 37, 38, 40, 43, 45, 51, 53, 58, 61, 64, 65, 67, 69, 72, 73, 75, 78, 79, 81, 84, 87, 90, 91, 98, 99, 100, 101, 109, 112, 113, 114, 117, 122, 123], "moreov": [0, 105, 112], "hold": [0, 2, 3, 13, 14, 26, 28, 51, 90, 98, 101, 117, 122], "respect": [0, 2, 3, 4, 13, 16, 22, 24, 28, 37, 41, 53, 72, 95, 98, 105, 109, 117, 121], "leverag": [0, 37], "downstream": [0, 2, 29], "In": [0, 2, 3, 5, 16, 36, 45, 53, 61, 67, 87, 112, 117, 123], "repres": [0, 2, 3, 4, 7, 25, 26, 38, 41, 43, 49, 51, 54, 72, 73, 88, 98, 99, 101, 109, 122, 123], "numer": [0, 2, 3, 14, 38, 54, 122, 123], "categor": [0, 2, 5, 10, 14, 17, 37, 38, 53, 57], "encod": [0, 5, 14, 17, 37, 38, 53, 61, 63, 64, 67, 79, 87, 88, 117, 123], "while": [0, 3, 13, 79, 98], "other": [0, 3, 4, 7, 13, 14, 23, 24, 28, 37, 40, 54, 64, 65, 73, 78, 79, 107, 109, 112, 117, 119], "work": [0, 2, 3, 7, 28, 37, 67, 69, 88], "better": [0, 3, 51, 98], "normalis": [0, 2, 3, 14, 24, 37, 38, 52, 54, 63, 72, 73, 81, 84, 85, 90, 114, 123], "scale": [0, 14, 16, 55, 63, 64, 65, 72, 73, 78, 90, 110], "certain": [0, 61, 67, 85, 95, 98], "wai": [0, 4, 14, 61, 67, 72, 99], "onc": [0, 36, 72, 101, 117, 119, 123], "again": [0, 3], "stage": [0, 2, 72, 78, 79, 88], "present": [0, 13, 29, 37, 51, 58, 96, 98, 107, 112, 113, 116, 117], "abov": [0, 2, 3, 6, 9, 26, 29, 42, 54, 90, 117], "remain": [0, 13, 36, 43, 58], "unmodifi": [0, 2, 28], "If": [0, 2, 3, 10, 13, 14, 23, 25, 26, 28, 29, 34, 37, 38, 42, 51, 53, 54, 58, 67, 69, 72, 73, 78, 79, 85, 88, 90, 91, 96, 98, 99, 101, 109, 113, 116, 117, 122, 123], "given": [0, 2, 3, 7, 10, 13, 14, 18, 22, 24, 26, 28, 29, 33, 34, 36, 37, 38, 40, 41, 46, 49, 51, 53, 54, 55, 58, 66, 67, 72, 73, 74, 88, 90, 91, 96, 97, 98, 101, 104, 105, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123], "full": [0, 2, 3, 28, 29, 34, 88, 96, 98, 107, 117], "consid": [0, 7, 23, 24, 26, 36, 37, 40, 43, 51, 58, 78, 79, 90, 97, 98, 117, 118, 122], "well": [0, 2, 3, 4, 28, 38, 67, 98, 109, 113, 117, 118], "known": [0, 38, 56, 73, 85, 91, 122], "passeng": [0, 11], "potenti": [0, 2, 7, 40, 58, 79, 88, 98], "pclass": [0, 11], "ticket": [0, 11], "integ": [0, 2, 3, 11, 49, 55, 67, 98, 114, 123], "first": [0, 2, 3, 11, 13, 24, 33, 34, 36, 37, 41, 43, 51, 66, 73, 88, 90, 91, 99, 101, 112, 116, 122], "second": [0, 2, 11, 13, 26, 41, 54, 55, 66, 90, 98, 109, 114, 115, 119], "third": [0, 11], "sex": [0, 11], "male": [0, 11], "femal": [0, 11], "ag": [0, 11], "year": [0, 11], "frequent": [0, 2], "sibsp": [0, 11], "number": [0, 2, 3, 5, 11, 13, 14, 17, 22, 23, 34, 36, 37, 40, 45, 51, 53, 54, 55, 58, 64, 65, 72, 73, 78, 79, 81, 84, 85, 87, 88, 90, 91, 98, 99, 105, 112, 114, 118, 119, 120, 121, 123], "sibl": [0, 11], "spous": [0, 11], "parch": [0, 11], "parent": [0, 3, 11, 40, 87, 113], "children": [0, 11], "fare": [0, 11], "price": 0, "paid": [0, 11], "embark": [0, 11], "port": [0, 11], "c": [0, 11, 37, 85, 114], "cherbourg": [0, 11], "q": [0, 11, 66], "queenstown": [0, 11], "southampton": [0, 11], "further": [0, 2, 3, 7, 14, 24, 26, 34, 37, 49, 85, 98], "cabin": [0, 11], "goal": 0, "whether": [0, 4, 7, 10, 11, 13, 14, 16, 17, 22, 23, 24, 26, 28, 29, 30, 34, 36, 37, 38, 40, 42, 51, 53, 54, 55, 58, 61, 63, 64, 65, 67, 69, 72, 73, 81, 85, 87, 88, 90, 91, 95, 96, 97, 98, 107, 108, 109, 112, 113, 114, 116, 117, 122, 123], "datasetclassificationtitanicsurviv": [0, 11], "passengerid": [0, 11], "braund": 0, "mr": 0, "owen": 0, "harri": 0, "22": [0, 85], "21171": 0, "2500": 0, "nan": [0, 14, 37, 105], "cume": 0, "john": 0, "bradlei": 0, "florenc": 0, "brigg": 0, "th": [0, 72, 90], "38": 0, "pc": 0, "17599": 0, "71": 0, "2833": 0, "c85": 0, "heikkinen": 0, "laina": 0, "26": [0, 2], "ston": 0, "o2": 0, "3101282": 0, "9250": 0, "futrel": 0, "jacqu": 0, "heath": 0, "lili": 0, "peel": 0, "35": 0, "113803": 0, "53": 0, "1000": [0, 65, 69, 90, 114], "c123": 0, "allen": 0, "william": 0, "henri": 0, "373450": 0, "0500": 0, "evalu": [0, 3, 4, 7, 22, 23, 24, 25, 26, 28, 30, 32, 33, 36, 40, 43, 51, 52, 61, 67, 72, 75, 78, 79, 90, 92, 95, 114], "perform": [0, 2, 3, 13, 14, 36, 38, 67, 72, 90, 96, 109, 112, 116, 122, 123], "later": [0, 2, 14, 37, 51, 54, 105], "evaluator_param": [0, 2, 3, 22, 28, 75], "classificationevaluatorparam": [0, 2, 3, 22, 28, 29], "fractional_split_test_fract": [0, 3, 29], "titanic_evalu": 0, "classificationmodelevalu": [0, 2, 3, 28], "add": [0, 2, 10, 13, 23, 26, 28, 34, 42, 51, 54, 57, 72, 95, 97, 98, 99, 107, 108, 109, 113, 114, 117, 122], "straightforwardli": [0, 3, 4], "deal": [0, 2, 3], "doesn": [0, 3], "t": [0, 2, 3, 13, 14, 22, 37, 45, 54, 73, 96, 98, 105, 109, 116, 117, 119, 123], "realli": [0, 2, 3], "get": [0, 2, 7, 13, 18, 23, 24, 26, 34, 37, 38, 40, 41, 49, 51, 54, 63, 73, 74, 78, 90, 98, 99, 100, 109, 122, 123], "rid": 0, "useless": 0, "ensur": [0, 13, 37, 63, 64, 72, 98, 109, 113, 122], "treat": [0, 24, 88], "dfttitanicdropmetadatacolumn": 0, "data_transform": [0, 14, 16, 17, 52, 58], "dftcolumnfilt": [0, 14], "__init__": [0, 3], "super": [0, 3, 58, 113, 117], "drop": [0, 2, 11, 14, 54, 108, 117], "col_nam": [0, 11, 14], "col_cabin": [0, 11], "col_ticket": [0, 11], "dfttitanictransformpassengerclass": 0, "dftmodifycolumn": [0, 14], "col_passenger_class": [0, 11], "column_transform": [0, 14], "lambda": [0, 72, 84], "n": [0, 2, 3, 14, 24, 36, 37, 58, 66, 72, 78, 85, 90, 112], "xgb_model": 0, "xgbgradientboostedvectorclassificationmodel": [0, 124], "our": [0, 2, 3, 85], "aforement": [0, 117], "opt": [0, 3], "reus": [0, 58, 72, 123], "compute_model_input": [0, 122], "sinc": [0, 3, 18, 72, 78, 85, 98, 99, 100, 122], "neither": [0, 14, 107], "addition": [0, 2, 3, 23, 24, 25, 26, 28, 114, 117], "alreadi": [0, 2, 3, 14, 30, 37, 38, 51, 65, 98, 107, 109, 113, 114, 123], "prepar": [0, 2], "actual": [0, 3, 5, 14, 34, 36, 74, 78, 88, 90, 95, 96, 98, 99, 105, 109, 113, 117, 122], "anyth": 0, "onli": [0, 2, 3, 6, 7, 9, 10, 13, 14, 18, 22, 23, 24, 26, 28, 29, 36, 37, 38, 42, 43, 49, 51, 54, 65, 66, 67, 72, 73, 85, 87, 88, 89, 90, 91, 93, 97, 98, 99, 101, 105, 107, 109, 112, 117, 120, 122], "featuregeneratortakecolumn": [0, 37], "over": [0, 3, 34, 37, 43, 51, 73, 91, 98], "featuregeneratortitanical": 0, "featuregen": [0, 14, 37, 38, 52], "categorical_feature_nam": [0, 5, 14, 37, 53, 58], "col_sex": [0, 11], "col_port_embark": [0, 11], "normalisation_rule_templ": [0, 10, 14, 37], "dftnormalis": [0, 3, 10, 14, 37, 38, 58], "ruletempl": [0, 10, 14, 37], "transformer_factori": [0, 14], "sklearntransformerfactoryfactori": [0, 14, 16, 38], "standardscal": [0, 14, 16, 38], "independent_column": [0, 14], "suppli": [0, 2, 37, 123], "both": [0, 2, 3, 13, 16, 18, 29, 72, 88, 90, 101, 105, 112], "subset": [0, 4, 7, 14], "still": [0, 3, 13, 63, 64, 67, 98, 117, 122], "hot": [0, 5, 14, 17, 37, 38, 53, 61, 67], "To": [0, 2, 3, 7, 37, 38, 54, 99, 117], "achiev": [0, 4, 24, 26, 63, 64], "feature_gener": [0, 39, 122], "dftonehotencod": [0, 14], "get_categorical_feature_name_regex": [0, 37, 38], "ignore_unknown": [0, 14, 17, 38], "exceptcolumn": 0, "verifycolumnnam": 0, "139706259416304": 0, "keep": [0, 13, 14, 55, 58, 112, 123], "columntransform": [0, 14], "function": [0, 2, 3, 14, 16, 23, 28, 34, 37, 41, 46, 50, 51, 54, 64, 65, 72, 74, 78, 79, 81, 84, 85, 90, 98, 102, 103, 105, 108, 109, 113, 114, 115, 117, 123], "local": [0, 1, 40, 49, 72, 84, 95], "0x7f0fe5f8e670": 0, "onehotencod": 0, "inplac": [0, 14, 38, 112], "arrayvaluedresult": 0, "handleunknown": 0, "featuregeneratornam": 0, "modelconstructor": 0, "xgbclassifi": [0, 124], "when": [0, 2, 10, 13, 14, 16, 28, 37, 38, 40, 51, 54, 75, 79, 98, 102, 105, 109, 113, 117, 118, 122, 123], "than": [0, 2, 3, 4, 14, 28, 29, 34, 37, 49, 54, 55, 61, 63, 67, 72, 73, 90, 91, 96, 98, 101, 109, 114, 116, 122, 123], "combin": [0, 2, 3, 23, 24, 26, 28, 51, 56, 58, 78, 79, 88, 99, 112, 114, 122], "multifeaturegener": [0, 14, 37, 38, 122], "simplifi": [0, 88], "creation": [0, 14, 28, 38, 54, 58, 72, 87, 88, 98], "featurecollector": [0, 14, 38, 122], "feature_collector": [0, 122], "share": [0, 14, 122], "create_feature_transformer_one_hot_encod": [0, 38], "either": [0, 13, 14, 23, 28, 34, 37, 51, 54, 63, 72, 73, 74, 88, 91, 98, 105, 108, 113, 114, 123], "learnt": [0, 3, 16], "look": [0, 3, 37, 122], "receiv": [0, 3, 14, 37, 88, 98, 113, 122], "pclass_0": 0, "pclass_1": 0, "pclass_2": 0, "sex_0": 0, "sex_1": 0, "embarked_0": 0, "embarked_1": 0, "embarked_2": 0, "expect": [0, 2, 13, 67, 79, 112], "readi": [0, 2, 3], "result": [0, 2, 3, 4, 10, 14, 16, 17, 22, 24, 25, 26, 28, 29, 33, 36, 37, 38, 42, 45, 51, 53, 54, 67, 72, 85, 88, 90, 96, 98, 107, 109, 112, 113, 114, 117, 122, 123], "perform_simple_evalu": [0, 2, 3, 28], "get_data_fram": [0, 29, 34, 51], "accuraci": [0, 2, 3, 24, 34, 66], "balancedaccuraci": [0, 2, 3, 24], "precis": [0, 2, 24, 29, 55, 85, 118], "recal": [0, 2, 24, 29], "f1": [0, 24], "predictedvar": 0, "826816": 0, "817746": 0, "75": [0, 16, 90], "784615": 0, "766917": 0, "demonstr": 0, "definit": [0, 45, 116, 117], "wa": [0, 2, 3, 29, 30, 36, 37, 38, 41, 43, 51, 54, 67, 69, 97, 98, 105, 107, 122, 123], "spread": [0, 43], "out": [0, 2, 4, 29, 73, 78], "across": [0, 2, 3, 4, 14, 23, 28, 36], "cell": [0, 2, 14, 49, 122], "increment": [0, 51, 97], "explain": 0, "practic": [0, 2, 37, 117], "monolith": 0, "re": [0, 2, 51, 90, 99], "slightli": 0, "torch_mlp_model": [0, 3], "multilayerperceptronvectorclassificationmodel": [0, 3, 81], "hid_activation_funct": [0, 81], "relu": [0, 3, 64, 65, 74, 85, 88], "hidden_dim": [0, 3, 70, 81, 84, 85, 88], "10": [0, 2, 3, 54, 64, 65, 85, 90, 109], "cuda": [0, 3, 72, 73, 78, 81, 84, 87, 90, 91], "p_dropout": [0, 3, 81, 84, 85, 88], "nn_optimiser_param": [0, 3, 72, 78, 81, 84, 87, 90], "nnoptimiserparam": [0, 3, 72, 78, 81, 84, 87, 90], "early_stopping_epoch": [0, 3, 90], "mlp": [0, 3, 76, 81, 82], "col_age_year": [0, 11], "create_dft_normalis": [0, 38], "compare_model": [0, 2, 3, 28], "results_df": [0, 2, 3, 28], "home": 0, "runner": 0, "tox": 0, "py_latest_depend": 0, "lib": 0, "python3": 0, "site": [0, 4], "packag": [0, 52, 109, 121], "torch_bas": [0, 71], "py": [0, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "futurewarn": 0, "weights_onli": 0, "current": [0, 26, 28, 51, 99, 109, 118, 122], "default": [0, 2, 3, 5, 14, 16, 22, 24, 25, 26, 28, 29, 37, 38, 42, 46, 51, 53, 66, 69, 72, 81, 84, 85, 90, 99, 101, 107, 109, 113, 114, 115, 117, 123], "pickl": [0, 10, 72, 89, 98, 99, 106], "modul": [0, 2, 4, 11, 13, 28, 34, 40, 43, 64, 65, 67, 72, 81, 84, 85, 87, 88, 89, 90, 105, 109, 122], "implicitli": 0, "possibl": [0, 2, 3, 14, 24, 28, 51, 88, 90, 101, 122], "malici": 0, "execut": [0, 1, 37, 95, 98, 99, 109, 111, 115], "code": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "dure": [0, 2, 3, 14, 17, 28, 36, 37, 38, 51, 54, 61, 67, 72, 78, 79, 84, 85, 90, 98, 99, 109, 122], "unpickl": [0, 98, 113], "http": [0, 5, 11, 13, 23, 34, 37, 40, 49, 53, 64, 65, 85, 99, 124], "github": [0, 4], "com": [0, 11, 49, 99], "blob": [0, 99, 100], "main": [0, 4, 10, 105, 109], "secur": 0, "md": 0, "untrust": 0, "futur": [0, 23, 88, 113], "releas": 0, "flip": 0, "longer": [0, 2, 113], "mode": [0, 3, 51, 72, 73, 79, 81, 84, 88, 107, 117, 123], "unless": [0, 14, 34, 73, 98, 107, 117], "explicitli": [0, 4, 117], "allowlist": 0, "serial": [0, 51], "add_safe_glob": 0, "recommend": [0, 2, 38, 54, 67, 102], "start": [0, 2, 7, 33, 40, 51, 54, 78, 90, 101, 109, 112, 117, 119], "don": [0, 2, 45], "control": [0, 3, 65, 69], "file": [0, 2, 4, 28, 42, 51, 55, 65, 93, 95, 96, 98, 99, 107, 109, 115, 117], "pleas": [0, 4], "open": [0, 55, 117], "issu": [0, 102], "relat": 0, "experiment": [0, 4], "model_fil": 0, "like": [0, 2, 4, 14, 24, 36, 37, 42, 67, 72, 109, 113, 118, 122], "correctli": [0, 28, 72, 78], "maximum": [0, 3, 5, 7, 23, 24, 25, 26, 40, 41, 49, 53, 66, 73, 90, 91, 98, 110, 118, 123], "ab": [0, 2, 85], "937743": 0, "model_nam": [0, 2, 3, 22, 28, 29], "821229": 0, "790216": 0, "80": 0, "676923": 0, "733333": 0, "notic": [0, 3], "pure": 0, "declar": [0, 2, 4], "inject": [0, 88], "multi": [0, 3, 23, 38, 51, 63, 72, 79, 88, 90, 122], "layer": [0, 3, 64, 65, 79, 81, 85, 88], "perceptron": [0, 3, 88], "notabl": 0, "addit": [0, 2, 7, 23, 28, 29, 37, 40, 42, 46, 54, 58, 64, 65, 72, 92, 96, 98, 109, 113, 117, 123], "cannot": [0, 14, 23, 24, 26, 28, 37, 49, 67, 72, 84, 99, 105, 113, 122], "cope": 0, "sometim": 0, "undefin": [0, 101, 108], "best": [0, 2, 3, 36, 51, 54, 90], "standard": [0, 2, 26, 45, 72, 90, 110, 114], "scaler": [0, 16, 72, 73, 78], "section": 1, "collect": [1, 2, 23, 26, 28, 38, 51, 54, 90, 113, 114, 123], "format": [1, 109, 117], "run": [1, 2, 34, 36, 51, 54, 92, 95, 96, 109], "colab": 1, "download": 1, "numpi": [2, 3, 14, 42, 43, 44, 46, 72, 99, 112, 118], "np": [2, 3, 13], "activi": 2, "inform": [2, 3, 6, 26, 33, 37, 38, 46, 51, 90, 95, 96, 98, 122], "about": [2, 3, 6, 46, 51, 95, 96], "ongo": [2, 122], "therefor": [2, 3, 54, 79, 85, 96, 101, 122, 123], "highli": [2, 4, 87], "enabl": [2, 3, 22, 29, 34, 38, 51, 54, 64, 65, 81, 90, 95, 96, 107, 109, 113, 114, 117], "includ": [2, 3, 6, 23, 28, 30, 42, 58, 90, 93, 95, 96, 101, 107, 113, 116, 117, 118, 122], "python": [2, 4, 5, 99, 108, 109, 121, 123, 124], "configurelog": 2, "configur": [2, 3, 4, 51, 58, 69, 72, 85, 109], "info": [2, 14, 37, 55, 113, 115, 117], "write": [2, 3, 28, 55, 96, 99, 107], "add_file_logg": [2, 109], "The": [2, 3, 7, 10, 13, 14, 23, 24, 26, 28, 29, 33, 36, 37, 38, 42, 43, 46, 51, 52, 54, 58, 61, 67, 72, 73, 79, 85, 87, 88, 90, 95, 96, 97, 98, 105, 112, 113, 114, 117, 122], "central": [2, 26, 49, 122], "base": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124], "class": [2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124], "problem": [2, 3, 13, 22, 24, 37, 55, 72, 78, 79, 85, 113, 117, 118], "oper": [2, 7, 14, 51, 54, 101], "reprsent": 2, "understood": [2, 85, 114], "arbitaririli": 2, "tupl": [2, 7, 13, 16, 18, 22, 23, 24, 25, 26, 28, 29, 34, 37, 40, 41, 43, 49, 50, 51, 54, 58, 66, 67, 72, 73, 78, 90, 91, 98, 101, 105, 107, 113, 114, 117, 120, 123], "abl": [2, 73, 91], "time": [2, 3, 14, 22, 34, 37, 41, 53, 55, 56, 61, 67, 72, 78, 79, 88, 98, 99, 101, 106, 109, 115, 122], "should": [2, 3, 5, 7, 10, 18, 23, 24, 28, 34, 37, 40, 43, 55, 61, 67, 72, 73, 88, 91, 93, 95, 96, 98, 99, 100, 105, 114, 117, 122], "sequenc": [2, 3, 5, 7, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 34, 37, 43, 51, 53, 54, 55, 58, 64, 65, 72, 73, 81, 84, 87, 88, 90, 99, 101, 105, 106, 107, 112, 114, 117, 122, 123], "datafram": [2, 3, 6, 10, 13, 14, 18, 19, 21, 23, 24, 26, 28, 29, 33, 34, 37, 51, 58, 59, 66, 67, 69, 72, 73, 78, 87, 91, 99, 103, 107, 111, 112, 118, 122], "primit": [2, 117], "larg": [2, 4, 29, 36, 72, 98], "input": [2, 4, 5, 10, 13, 14, 17, 28, 29, 34, 36, 37, 53, 61, 63, 65, 66, 67, 69, 72, 73, 78, 79, 81, 84, 85, 87, 88, 90, 91, 117, 122, 123], "also": [2, 3, 26, 28, 43, 54, 67, 85, 90, 109, 114, 117, 123], "least": [2, 24, 36, 54, 55, 65, 98, 109, 114, 119, 121], "lose": [2, 4], "track": [2, 4, 22, 28, 29, 52, 92, 93, 95, 96, 112, 123], "lot": 2, "advanc": 2, "tutori": [2, 3], "variou": [2, 30, 103, 105], "framework": [2, 4], "creat": [2, 5, 10, 13, 14, 22, 23, 24, 26, 28, 29, 33, 36, 37, 38, 41, 51, 53, 54, 63, 65, 69, 72, 75, 84, 85, 90, 95, 98, 101, 107, 109, 114, 117, 120, 123], "As": [2, 3, 79, 117], "interfac": [2, 4, 14, 34, 72, 73, 88, 90, 105, 122], "implement": [2, 3, 4, 7, 14, 34, 36, 37, 38, 45, 63, 64, 72, 90, 105, 109, 113, 117], "justa": 2, "intermedi": [2, 14, 88], "abstractsklearnvectorclassificationmodel": [2, 5, 53, 63, 64, 124], "protocol": [2, 9, 16, 88, 98, 113], "dataset": [2, 3, 12, 28, 29, 30, 73, 75, 91, 112], "experi": [2, 3, 4, 22, 28, 29, 36, 92, 93, 95, 96], "exampl": [2, 3, 5, 7, 13, 28, 29, 33, 34, 37, 53, 67, 72, 73, 79, 91, 98, 112, 117], "differenti": [2, 98], "iris_data": 2, "load_iri": 2, "iris_input_df": 2, "feature_nam": [2, 37], "reset_index": 2, "iris_output_df": 2, "target_nam": 2, "idx": [2, 7, 40, 101], "iris_combined_df": 2, "43": 2, "61": 2, "98": 2, "52": 2, "47": 2, "104": 2, "128": 2, "18": 2, "iris_io_data": 2, "datasplitt": [2, 13, 29, 124], "test": [2, 3, 5, 11, 28, 29, 58, 75, 88, 99, 106, 113], "data_splitt": [2, 29], "shuffl": [2, 13, 22, 29, 34, 61, 73, 90, 91], "training_io_data": 2, "random": [2, 3, 5, 22, 29, 34, 42, 51, 53, 54, 64, 65, 124], "forest": [2, 124], "sort": [2, 14, 28, 34, 36, 51, 54, 63, 64, 101, 112, 116], "lightgbm": [2, 34, 52], "catboost": [2, 52], "tensorflow": [2, 3, 52, 69, 70], "wrapper": [2, 7, 9, 37, 42, 46, 88, 95, 96, 99], "common": [2, 88, 114], "random_forest_model": [2, 3], "min_samples_leaf": [2, 3, 64, 65], "suppport": 2, "support": [2, 3, 4, 6, 10, 13, 14, 26, 29, 38, 53, 63, 64, 67, 72, 97, 98, 101, 104, 105, 108, 113, 114, 118, 122, 123], "minimum": [2, 7, 23, 24, 25, 26, 40, 49, 53, 66, 109], "must": [2, 7, 13, 14, 24, 28, 29, 34, 37, 38, 40, 54, 67, 72, 73, 78, 79, 87, 97, 98, 99, 113, 117, 121, 123], "end": [2, 3, 13, 28, 51, 54, 78, 79, 90, 96, 98, 101, 109, 112, 119, 122], "up": [2, 13, 37, 41, 58, 117, 122, 123], "leaf": [2, 53], "fitinputoutputdata": 2, "analog": [2, 24], "argument": [2, 16, 40, 51, 63, 64, 65, 66, 74, 90, 98, 105, 108, 109, 114, 123], "2024": 2, "11": 2, "29": 2, "24": [2, 119], "463": 2, "vector_model": [2, 14, 37, 52, 111], "359": 2, "464": 2, "sklearn_bas": [2, 62], "314": 2, "558": 2, "388": 2, "09": 2, "140592569113472": 2, "reserv": 2, "predicted_outputs_df": 2, "head": [2, 3], "91": 2, "41": 2, "90": 2, "48": 2, "renam": [2, 29, 113], "predictedclass": 2, "37": 2, "140": 2, "88": 2, "metric": [2, 18, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 36, 51, 58, 66, 69, 70, 90, 92, 96], "interest": 2, "analys": [2, 3, 29, 33], "read": [2, 4, 28, 91, 98, 99, 107], "instanti": [2, 3, 9, 28, 37, 42, 72, 75, 98], "vectorclassificationmodelevalu": [2, 28, 29], "instruct": 2, "handl": [2, 3, 37, 42, 55, 72, 88, 98, 113, 117], "compute_prob": [2, 28, 29], "param": [2, 7, 22, 28, 29, 40, 49, 51, 54, 63, 73, 90, 96, 98, 99, 114, 115], "fit_model": [2, 3, 28, 29, 67, 122], "eval_data": [2, 3, 28, 33], "eval_model": [2, 22, 29, 30, 92], "657": 2, "658": 2, "750": 2, "particular": [2, 4, 14, 22, 29, 33, 38, 51, 117, 118, 123], "evalstat": [2, 23, 24, 25, 26, 28], "qualiti": [2, 90, 114], "mani": [2, 3, 26, 29, 33, 34, 79, 98, 117], "eval_stat": [2, 23, 24, 25, 26, 28, 31, 33], "get_eval_stat": [2, 29], "classificationevalstat": [2, 22, 24, 28, 29], "140592568791440": 2, "9666666666666667": 2, "9722222222222222": 2, "geomeantrueclassprob": [2, 24], "8890980234758366": 2, "30": 2, "dictionari": [2, 6, 14, 22, 23, 24, 25, 28, 29, 34, 37, 40, 46, 51, 63, 90, 97, 98, 101, 105, 113, 114, 117], "metrics_dict": [2, 23, 24, 25], "compute_metric_valu": [2, 23, 26, 32], "among": [2, 7, 54], "top": [2, 51], "eval_stats_classif": [2, 27], "classificationmetrictopnaccuraci": [2, 24], "confus": 2, "binari": [2, 3, 24, 26, 29, 61, 67, 101], "plot_confusion_matrix": [2, 24], "thing": 2, "step": [2, 3, 4, 36, 54, 64, 65, 72, 78, 79, 85], "assist": [2, 3, 117, 121], "seek": 2, "carri": 2, "evaluatorparam": [2, 29], "additional_metr": [2, 23, 24, 25, 26, 29], "cross_validator_param": [2, 28, 36, 75], "crossval": [2, 31], "vectormodelcrossvalidatorparam": [2, 22, 28, 36, 75], "fold": [2, 22, 28, 36], "eval_util": [2, 3, 31], "usual": [2, 14, 25, 28, 36, 54, 75, 112, 117], "save": [2, 18, 29, 34, 42, 51, 72, 96, 98, 107, 114], "result_writ": [2, 28], "written": [2, 3, 28, 51, 107, 109], "notebook": [2, 33], "shown": [2, 33, 85, 114], "show_plot": [2, 28], "193": [2, 85], "287": 2, "0x7fde42073820": 2, "194": 2, "195": 2, "289": 2, "301": 2, "gather_result": 2, "295": 2, "top2accuraci": 2, "vectorclassificationmodelevaluationdata": [2, 22, 28, 29], "0x7fde803fddf0": 2, "decid": [2, 51], "disabl": [2, 10, 14, 61, 67, 79, 96, 98, 109, 113, 122], "eval_stats_plot_collector": [2, 28], "get_enabled_plot": [2, 28], "rel": [2, 13, 24, 26, 49, 66, 97], "threshold": [2, 7, 24, 72], "count": [2, 14, 23, 24, 57, 63, 64, 97, 105], "activ": [2, 17, 64, 65, 74, 78, 79, 81, 85, 88], "disable_plot": [2, 28], "new": [2, 10, 14, 26, 37, 38, 51, 69, 90, 98, 99, 102, 107, 109, 113, 114, 120, 123], "classificationevalstatsplot": [2, 24], "collector": [2, 28, 38, 122], "whenev": [2, 3, 29, 72, 113], "similarli": [2, 3, 28, 34], "produc": [2, 3, 16, 29, 37, 56, 72, 79, 87, 88, 90, 122], "perform_cross_valid": [2, 28], "851": 2, "192": 2, "852": 2, "853": 2, "948": 2, "963": 2, "201": 2, "9553599022560102": 2, "964": 2, "965": 2, "966": 2, "060": 2, "072": 2, "9734228107223192": 2, "073": 2, "075": 2, "169": 2, "182": 2, "976458969438705": 2, "183": 2, "184": 2, "278": 2, "9333333333333333": 2, "9333333333333332": 2, "9411926691126593": 2, "290": 2, "291": 2, "385": 2, "398": 2, "9298964965102043": 2, "399": 2, "401": 2, "495": 2, "508": 2, "8666666666666667": 2, "8888888888888888": 2, "6379522029160006": 2, "509": 2, "510": 2, "511": 2, "605": 2, "616": 2, "8611111111111112": 2, "8099785263057822": 2, "617": 2, "618": 2, "619": 2, "714": 2, "726": 2, "9657414983648998": 2, "727": 2, "728": 2, "822": 2, "837": 2, "9560552426688266": 2, "838": 2, "839": 2, "933": 2, "944": 2, "9523809523809524": 2, "841736920530503": 2, "958": 2, "350": 2, "std": [2, 23, 110], "96": 2, "053333": 2, "963571": 2, "050077": 2, "89878": 2, "10223": 2, "vectorclassificationmodelcrossvalidationdata": [2, 22, 28], "0x7fde41c55a30": 2, "earlier": [2, 3, 72, 89], "being": [2, 3, 7, 10, 14, 16, 23, 24, 28, 29, 36, 51, 72, 78, 79, 90, 98, 99, 107, 113, 117, 122], "veri": [2, 3, 28, 29, 101], "sai": [2, 3], "been": [2, 3, 7, 14, 34, 36, 37, 38, 51, 54, 69, 85, 97, 98, 101, 107, 122, 123], "far": [2, 3, 16], "decis": [2, 3, 24], "tree": [2, 3, 4, 5, 46, 53, 124], "sklearndecisiontreevectorclassificationmodel": [2, 64], "decisiontre": 2, "use_cross_valid": [2, 28, 32], "27": 2, "223": 2, "227": 2, "228": 2, "229": 2, "322": 2, "337": 2, "338": 2, "339": 2, "433": 2, "446": 2, "447": 2, "448": 2, "449": 2, "546": 2, "559": 2, "560": 2, "561": 2, "669": 2, "670": 2, "672": 2, "770": 2, "782": 2, "783": 2, "784": 2, "785": [2, 3], "885": 2, "898": 2, "899": 2, "900": 2, "28": [2, 3], "003": 2, "014": 2, "015": 2, "017": 2, "117": 2, "133": 2, "134": 2, "135": 2, "232": 2, "246": 2, "247": 2, "249": 2, "342": 2, "354": 2, "368": 2, "451": 2, "452": 2, "453": 2, "454": 2, "decisiontreeclassifi": 2, "457": 2, "00": 2, "465": 2, "466": 2, "467": 2, "470": 2, "477": 2, "478": 2, "479": 2, "482": 2, "489": 2, "490": 2, "492": 2, "502": 2, "6141303814089187": 2, "503": 2, "504": 2, "507": 2, "514": 2, "9548416039104165": 2, "515": 2, "516": 2, "520": 2, "526": 2, "39810717055349726": 2, "527": 2, "528": 2, "529": 2, "532": 2, "539": 2, "540": 2, "542": 2, "545": 2, "551": 2, "9444444444444445": 2, "552": 2, "553": 2, "556": 2, "562": 2, "563": 2, "564": 2, "567": 2, "573": 2, "6309573444801932": 2, "587": 2, "94": 2, "046667": 2, "944683": 2, "04441": 2, "756512": 2, "238693": 2, "685": 2, "468": 2, "comparison": [2, 3, 28], "aggreg": [2, 14, 28, 34, 36, 90, 106], "898780": 2, "102230": 2, "044410": 2, "distribut": [2, 16, 23, 28, 37, 85, 110, 114], "displai": [2, 33], "esc_random_forest": 2, "result_by_model_nam": 2, "cross_validation_data": [2, 28], "get_eval_stats_collect": [2, 22, 28, 29], "plot_distribut": [2, 23], "bin": [2, 23, 26, 37, 114], "linspac": 2, "21": 2, "stat": [2, 23, 24, 26, 28, 33, 54, 114], "kde": [2, 23, 114], "list": [2, 3, 5, 7, 11, 13, 14, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 40, 41, 50, 51, 54, 55, 58, 63, 64, 67, 72, 73, 78, 85, 87, 90, 98, 99, 105, 107, 109, 112, 113, 114, 116, 117, 122, 123], "agg_metrics_dict": [2, 23], "agg_fn": [2, 23, 34], "max": [2, 3, 16, 28, 88], "min": [2, 16, 28, 64, 65], "amax": 2, "amin": 2, "get_valu": [2, 23], "often": [2, 14], "cater": [2, 3, 88], "technic": [2, 117], "multipl": [2, 3, 14, 26, 34, 37, 38, 58, 61, 63, 65, 67, 88, 90, 114, 122, 123], "pipelin": [2, 4, 37], "focus": 2, "concis": [2, 95], "semant": [2, 4, 61, 67, 117, 122], "mechan": [2, 22, 28, 72, 85, 98, 99, 117, 123], "themselv": 2, "essenc": 2, "raw": [2, 11, 34, 122], "obtain": [2, 4, 14, 22, 26, 28, 29, 34, 38, 51, 54, 72, 90, 91, 98, 114, 122, 123], "domain": [2, 3], "situat": 2, "affect": [2, 37, 122], "locat": 2, "reason": [2, 3, 29, 36, 63, 64, 102], "fed": [2, 3, 34, 122], "Or": 2, "observ": [2, 51, 54, 112, 122], "sensor": 2, "real": 2, "scenario": 2, "would": [2, 51, 54, 67, 72, 73, 107, 113, 117, 122], "certainli": 2, "closer": [2, 54], "isn": [2, 96], "world": 2, "whatev": [2, 109, 122], "extrac": 2, "natur": [2, 3, 72], "piec": 2, "hand": [2, 3, 4, 122], "aspect": 2, "crititc": 2, "decoupl": 2, "becom": [2, 3, 110], "part": [2, 10, 79, 117, 123], "jointli": [2, 37, 72], "deploy": 2, "unit": [2, 13, 49, 88, 90], "store": [2, 7, 10, 18, 28, 51, 55, 58, 72, 98, 99, 100], "choos": [2, 51, 54], "oftentim": 2, "pricipl": 2, "albeit": 2, "concret": [2, 51, 54], "sequenti": [2, 114], "descript": [2, 29, 95, 96], "categori": [2, 5, 14, 17, 37, 38, 53], "float": [2, 3, 7, 13, 14, 16, 18, 21, 22, 23, 24, 25, 26, 29, 32, 34, 36, 37, 40, 41, 46, 49, 50, 51, 54, 55, 58, 63, 66, 72, 73, 81, 84, 88, 90, 91, 96, 97, 98, 105, 108, 109, 110, 114, 115, 118, 119, 123], "suitabl": [2, 4, 14, 28, 45, 51, 54, 79], "idiosynchrasi": 2, "even": [2, 3, 87, 88, 96, 117], "rang": [2, 3, 16, 37, 49], "discret": [2, 54], "arbitari": 2, "power": [3, 54], "especi": [3, 38, 123], "low": [3, 122], "level": [3, 4, 13, 28, 36, 37, 55, 109, 113, 115, 117, 118, 122], "pixel": 3, "audio": 3, "text": [3, 28, 93, 95, 96, 107], "data": [3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 40, 42, 46, 49, 51, 52, 53, 54, 58, 59, 61, 63, 64, 65, 66, 67, 72, 73, 75, 78, 79, 81, 84, 87, 90, 91, 97, 98, 99, 101, 103, 112, 114, 118, 122, 123], "mainli": 3, "captur": 3, "extend": [3, 14, 28, 101, 117], "config": 3, "warn": [3, 5, 7, 10, 37, 51, 53, 54, 55, 58, 63, 72, 90, 102, 107, 109, 123], "functool": [3, 99], "cfg": 3, "get_config": 3, "filterwarn": 3, "util": [3, 28, 41, 43, 50, 51, 52, 58, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "log": [3, 4, 5, 7, 10, 28, 37, 51, 53, 54, 55, 58, 63, 72, 90, 92, 93, 95, 96, 98, 106, 107, 113, 115, 117, 123], "solv": [3, 55], "digit": [3, 55, 78, 118], "mnist": 3, "greyscal": 3, "colour": [3, 26, 114], "28x28": 3, "size": [3, 6, 9, 13, 42, 45, 64, 65, 66, 72, 73, 78, 79, 88, 90, 91, 99, 112, 114], "mnist_df": 3, "read_csv": 3, "datafile_path": 3, "mnist_train": 3, "csv": [3, 11, 28, 51], "zip": 3, "bit": 3, "255": [3, 98], "label": [3, 6, 9, 14, 23, 24, 25, 26, 28, 29, 30, 37, 42, 43, 61, 63, 64, 67, 114, 122], "1x1": 3, "1x2": 3, "1x3": 3, "1x4": 3, "1x5": 3, "1x6": 3, "1x7": 3, "1x8": 3, "1x9": 3, "28x19": 3, "28x20": 3, "28x21": 3, "28x22": 3, "28x23": 3, "28x24": 3, "28x25": 3, "28x26": 3, "28x27": 3, "o": [3, 73, 91, 104, 118], "mnistiodata": 3, "from_data_fram": [3, 13], "restor": 3, "matplotlib": [3, 114], "pyplot": 3, "plt": [3, 26, 107, 114], "reshape_2d_imag": 3, "seri": [3, 10, 13, 14, 22, 23, 24, 26, 29, 54, 58, 67, 78, 79, 90, 101, 112, 114, 118, 122], "reshap": 3, "fig": [3, 28, 93, 95, 96, 107], "ax": [3, 26, 114], "subplot": 3, "nrow": 3, "ncol": 3, "figsiz": [3, 65, 114], "imshow": [3, 26, 114], "cmap": [3, 26, 114], "randomli": [3, 29, 51, 54], "One": [3, 14], "try": [3, 29, 51], "simpl": [3, 17, 28, 69, 75, 98, 112], "acceler": [3, 81, 85], "nvidia": 3, "gpu": [3, 81, 90], "stick": 3, "cpu": 3, "batch_siz": [3, 13, 61, 64, 65, 69, 70, 73, 79, 88, 90, 91, 99], "54": 3, "50": [3, 13, 109], "normalisation_mod": [3, 59, 69, 70, 72, 73, 81, 84], "normalisationmod": [3, 59, 69, 70, 72, 73, 81, 84], "max_al": [3, 59], "basic": [3, 72], "transform": [3, 4, 10, 14, 16, 17, 29, 34, 36, 37, 38, 49, 54, 63, 67, 72, 73, 90, 112, 114, 122, 123], "divid": [3, 114], "found": [3, 10, 18, 24, 41, 42, 51, 54, 98, 99, 100, 101], "elabor": 3, "dftsklearntransform": [3, 14, 73], "algorithm": [3, 6, 7, 9, 25, 40, 43, 46, 54, 90, 104], "earli": [3, 64, 65, 90, 122], "stop": [3, 64, 65, 90, 109, 122], "involv": [3, 72], "check": [3, 24, 61, 67, 72, 98, 105, 121, 122], "regular": [3, 14, 23, 28, 34, 37, 38, 72, 117], "interv": [3, 13, 54, 66, 119], "valid": [3, 22, 28, 36, 40, 46, 51, 72, 73, 75, 90, 91, 98, 107, 112, 122], "ultim": [3, 7, 40, 79, 90, 98, 122], "select": [3, 4, 14, 36, 73, 90, 117], "loss": [3, 69, 70, 72, 79, 90, 122], "nnlossevalu": [3, 90], "dataframesplitt": [3, 13, 72, 73], "torchdatasetprovid": [3, 72, 73, 90, 91], "vectoris": [3, 14, 52, 72, 87], "accept": [3, 14, 51, 54, 67, 72, 73], "against": [3, 121], "rather": [3, 4, 14, 28, 29, 34, 37, 55, 72, 73, 90, 91, 98, 122], "recognit": [3, 85], "sensibl": [3, 4], "convolut": [3, 78, 79], "patch": [3, 121, 124], "gener": [3, 4, 5, 6, 10, 13, 14, 18, 22, 23, 24, 26, 28, 29, 30, 34, 36, 37, 38, 40, 42, 50, 51, 53, 54, 58, 63, 64, 65, 67, 72, 73, 87, 88, 91, 96, 98, 99, 101, 108, 109, 113, 117, 122, 123], "high": [3, 4, 122], "featur": [3, 4, 5, 10, 14, 28, 34, 36, 37, 38, 42, 53, 57, 58, 63, 65, 67, 72, 78, 79, 87, 88, 122, 123], "pool": [3, 109], "fundament": [3, 122], "torchvectorclassificationmodel": [3, 72, 78, 81], "torchvectorregressionmodel": [3, 72, 81, 84, 87], "had": [3, 7], "vectormodel": [3, 10, 14, 19, 22, 28, 29, 34, 36, 37, 51, 67, 72, 92, 111, 122], "describ": [3, 28, 34, 54, 85], "mnistcnnmodul": 3, "image_dim": 3, "int": [3, 6, 7, 9, 13, 18, 22, 24, 25, 26, 30, 33, 34, 37, 40, 41, 42, 43, 49, 50, 51, 54, 55, 58, 63, 64, 65, 72, 73, 78, 79, 81, 84, 87, 88, 90, 91, 98, 99, 101, 105, 108, 109, 110, 114, 116, 120, 121, 123, 124], "output_dim": [3, 13, 72, 73, 81, 84, 85, 88], "num_conv": 3, "kernel_s": 3, "pooling_kernel_s": 3, "mlp_hidden_dim": 3, "output_activation_fn": [3, 88], "activationfunct": [3, 74, 78, 81, 88], "k": [3, 63, 64, 65, 78, 79, 110], "p": [3, 37, 54, 72], "conv2d": 3, "maxpool2d": 3, "dropout": [3, 72, 78, 79, 81, 85, 88], "reduced_dim": 3, "rais": [3, 14, 37, 38, 67, 101, 105, 109, 116, 122], "valueerror": [3, 105], "f": [3, 55, 74, 105, 110, 118, 123], "kernel": [3, 23, 79, 114], "divisor": 3, "dimens": [3, 23, 26, 37, 63, 66, 67, 72, 73, 78, 79, 81, 84, 85, 87, 88, 90, 112, 114, 123], "multilayerperceptron": [3, 82], "get_torch_funct": [3, 74], "hid_activation_fn": [3, 88], "forward": [3, 14, 72, 79, 82, 85, 88], "unsqueez": 3, "shape": [3, 13, 18, 23, 42, 43, 44, 45, 49, 54, 61, 66, 67, 72, 79, 85, 88, 90, 112], "tensoris": [3, 72, 73, 87], "equal": [3, 13, 16, 43, 63, 64, 85, 99, 101, 112, 116], "luckili": 3, "imagereshapinginputtensoris": 3, "rulebasedtensoris": [3, 72, 73], "_tensoris": 3, "df": [3, 10, 13, 14, 28, 33, 37, 51, 67, 73, 87, 91, 99, 107, 112, 122], "union": [3, 5, 6, 7, 13, 14, 16, 18, 22, 23, 24, 26, 28, 29, 32, 34, 36, 37, 38, 42, 43, 44, 45, 49, 51, 53, 59, 64, 65, 72, 73, 74, 75, 78, 81, 84, 88, 90, 91, 98, 99, 103, 105, 108, 113, 114, 117, 120, 122, 123], "_": [3, 37, 58, 117], "iterrow": 3, "stack": 3, "took": 3, "care": 3, "cnn_modul": 3, "32": [3, 61], "200": [3, 64, 65], "log_softmax": [3, 74, 78, 81], "optimis": [3, 4, 14, 22, 29, 36, 51, 54, 69, 70, 72, 87, 90], "adamw": [3, 90], "optimiser_lr": [3, 90], "01": [3, 49], "1024": 3, "cnn_model_from_modul": 3, "from_modul": [3, 72], "classificationoutputmod": [3, 72, 74, 90], "log_prob": [3, 74], "with_input_tensoris": [3, 72], "approach": [3, 54, 102], "encapsul": [3, 72, 84], "hyperparamet": [3, 22, 29], "hard": 3, "though": [3, 117], "determin": [3, 7, 16, 36, 37, 40, 54, 65, 72, 73, 78, 81, 87, 90, 101, 114, 122, 123], "engin": 3, "automat": [3, 4, 5, 28, 51, 53, 54, 92, 98, 114], "edit": 3, "chang": [3, 4, 28, 37, 49, 51, 54, 90, 109, 112, 122], "design": [3, 4, 33, 85, 101, 117], "late": [3, 101], "underli": [3, 29, 37, 72, 122, 123], "delai": [3, 98], "necessit": [3, 58, 109], "factori": [3, 14, 26, 28, 36, 37, 38, 51, 54, 58, 72, 84, 87, 88, 90, 98, 123], "indirect": 3, "realm": [3, 55], "begin": [3, 54, 90, 95, 96, 109, 117], "cnnmodel": 3, "bool": [3, 5, 6, 7, 10, 11, 13, 14, 18, 22, 23, 24, 26, 28, 29, 32, 33, 36, 37, 38, 40, 42, 51, 53, 63, 64, 65, 67, 72, 73, 81, 84, 87, 90, 91, 96, 98, 101, 105, 107, 108, 109, 112, 117, 119, 122, 123, 124], "for_activation_fn": [3, 74], "torch_model_factori": [3, 72, 84], "partial": [3, 99], "vectortorchmodel": [3, 72, 81, 84], "_parent": 3, "create_torch_module_for_dim": [3, 72, 81, 84], "input_dim": [3, 13, 72, 73, 78, 81, 84, 85, 88, 91], "sqrt": 3, "insignificantli": 3, "previou": [3, 79, 99], "outer": [3, 116], "inner": [3, 101], "cnn_model": 3, "improv": [3, 64, 65, 85, 90, 105, 122], "upon": [3, 51, 63, 109, 113, 117], "comparison_data": 3, "962250": 3, "961897": 3, "978333": 3, "978435": 3, "977167": 3, "977261": 3, "946667": 3, "945917": 3, "between": [3, 40, 41, 97, 98, 112, 114, 122], "due": [3, 99], "initialis": [3, 7, 40, 113], "ident": [3, 64, 65, 85, 123], "went": 3, "wrong": 3, "misclassifi": [3, 29], "get_misclassified_triples_pred_true_input": [3, 29], "predclass": 3, "trueclass": 3, "enumer": [3, 59, 74, 79, 90, 98, 100, 101, 123], "set_titl": 3, "tight_layout": 3, "inde": 3, "room": 3, "document": [4, 52], "ai": [4, 5], "toolkit": 4, "focu": 4, "rapid": 4, "applic": [4, 7, 14, 23, 24, 26, 51, 54, 61, 67, 72, 98, 123], "integr": [4, 28], "minimis": [4, 36, 51, 54], "overhead": 4, "whilst": [4, 55], "retain": [4, 14, 37, 58, 117], "degre": [4, 54], "custom": [4, 26, 72, 117, 123], "solut": 4, "benefit": 4, "unifi": [4, 114], "varieti": 4, "model": [4, 5, 11, 14, 19, 20, 22, 23, 24, 26, 28, 29, 30, 32, 34, 36, 37, 38, 42, 51, 53, 56, 58, 61, 63, 64, 65, 66, 67, 69, 72, 73, 78, 79, 85, 87, 88, 90, 92, 95, 96, 99, 114, 122, 124], "ensembl": [4, 19, 21, 52, 122], "parametr": [4, 51], "ndash": 4, "without": [4, 10, 13, 14, 16, 24, 37, 51, 58, 64, 65, 85, 88, 90, 107, 109, 117], "abil": 4, "exploit": 4, "strength": [4, 65], "box": [4, 49, 98], "modularis": 4, "properti": [4, 6, 13, 22, 29, 37, 38, 45, 53, 72, 96, 99, 113, 117], "manual": [4, 16], "capabl": 4, "error": [4, 14, 26, 29, 37, 38, 113], "gain": [4, 53], "bridg": 4, "gap": 4, "product": [4, 78, 79], "along": [4, 41, 88, 117], "canon": 4, "awai": 4, "boilerpl": 4, "mlflow": 4, "eschew": 4, "notion": [4, 51], "extern": 4, "variat": [4, 90], "minim": [4, 99], "extens": [4, 93, 95, 96, 98, 107], "quick": 4, "overview": 4, "refer": [4, 37, 49, 54, 85, 99, 109, 112, 114, 122], "readm": 4, "search": [4, 41, 51, 101, 116], "page": [4, 52], "sourc": [5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "catboostvectorregressionmodel": 5, "num_leav": [5, 53], "31": [5, 53], "model_arg": [5, 53, 63, 64, 65, 124], "abstractsklearnmultipleonedimvectorregressionmodel": [5, 53, 63, 65, 66, 124], "dtype": [5, 14, 37, 53, 106, 112], "prefer": [5, 14, 53, 96], "seed": [5, 22, 29, 34, 53, 54, 64, 65], "leav": [5, 37, 53, 90, 114], "doc": [5, 37, 99], "concept": 5, "reference_paramet": 5, "html": [5, 13, 23, 34, 37, 40, 53, 64, 65, 115, 124], "logger": [5, 7, 10, 37, 51, 53, 54, 55, 58, 63, 72, 90, 107, 109, 123], "is_sample_weight_support": [5, 53, 63, 64, 65, 124], "catboostvectorclassificationmodel": 5, "never": [5, 24, 37, 90], "behaviour": [5, 26, 85, 109, 113], "successfulli": 5, "cluster": [6, 7, 9, 25, 30, 40, 42, 43, 44, 45, 52], "euclideancluster": [6, 9, 25, 30, 42], "noise_label": [6, 9, 25, 30, 42, 43], "min_cluster_s": [6, 9, 40, 42], "max_cluster_s": [6, 9, 42], "pickleloadsavemixin": [6, 98, 122], "abc": [6, 7, 10, 11, 13, 14, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 37, 40, 44, 51, 54, 55, 58, 63, 66, 67, 69, 72, 73, 88, 90, 96, 98, 99, 101, 108, 109, 112, 117, 122, 123], "nois": [6, 9, 25, 30, 42, 43], "relabel": [6, 42], "identifi": [6, 11, 18, 42, 43, 58, 95, 105, 123], "datapoint": [6, 25, 30, 46], "ndarrai": [6, 9, 13, 14, 16, 17, 23, 24, 25, 26, 36, 40, 42, 43, 44, 45, 46, 59, 61, 66, 72, 73, 90, 99, 103, 114, 123], "centroid": 6, "radiu": [6, 49], "summary_dict": [6, 46], "coars": [6, 46], "num_memb": 6, "condit": [6, 14, 24, 33, 37, 42, 95, 96, 112, 117], "callabl": [6, 14, 16, 28, 29, 32, 33, 36, 38, 42, 46, 51, 54, 58, 72, 74, 81, 90, 98, 99, 109, 113, 114, 115, 117, 123], "iter": [6, 7, 28, 40, 41, 42, 45, 58, 64, 65, 72, 73, 91, 98, 105, 113, 117, 123], "fulfil": [6, 42], "noise_clust": [6, 42], "summary_df": 6, "is_fit": [6, 14, 37, 122, 123], "cluster_identifi": 6, "get_clust": [6, 42], "cluster_id": [6, 42], "num_clust": [6, 25], "greedyagglomerativeclust": [7, 40], "merge_candidate_determination_strategi": 7, "mergecandidatedeterminationstrategi": [7, 40], "greedi": 7, "agglom": 7, "unnecessari": 7, "recomput": [7, 58], "cost": [7, 40, 51, 54, 55], "manag": [7, 54, 95, 96, 99, 109], "prioriti": [7, 99], "queue": [7, 99], "success": [7, 112], "lowest": [7, 36, 116], "until": [7, 36, 98, 99, 123], "admiss": [7, 40, 41, 65, 69, 98, 114], "mutat": 7, "modifi": [7, 14, 29, 112, 113, 114], "cartesian": [7, 49], "coordin": [7, 40, 41, 42, 43, 45, 46, 47, 49, 50], "system": [7, 40, 49, 95], "distanc": [7, 18, 40, 41, 58, 101, 116], "pair": [7, 10, 18, 23, 24, 28, 29, 40, 41, 49, 51, 72, 73, 91, 101, 123], "exceed": 7, "concaten": [7, 37, 42, 56, 88, 123], "agglomer": 7, "larger": [7, 38, 43, 45, 54, 61, 67, 114], "merge_cost": [7, 40], "neg": [7, 40, 54], "math": [7, 40, 41, 106], "inf": [7, 13, 37, 40], "inadmiss": [7, 40, 51], "apply_clust": 7, "wrappedclust": [7, 40], "intern": [7, 38, 85, 90, 98, 117], "is_merg": 7, "get_cluster_associ": 7, "wrap": [7, 10, 40, 53, 58, 72, 99, 115], "remove_merg": 7, "compute_merg": 7, "merged_cluster_indic": [7, 40], "clustermerg": 7, "c1": [7, 40], "c2": [7, 40], "set_cluster": [7, 40], "strategi": [7, 40, 65, 72], "iter_candidate_indic": [7, 40], "wc": [7, 40], "candid": [7, 40], "were": [7, 13, 25, 28, 36, 37, 40, 72, 89, 112], "join": [7, 40, 117], "updat": [7, 40, 51, 54, 98, 99, 105], "partner": [7, 40], "mergecandidatedeterminationstrategydefault": 7, "clustering_bas": 8, "sklearn_clust": 8, "greedy_clust": 8, "sklearnclustererprotocol": [9, 42], "arg": [9, 13, 16, 18, 23, 24, 26, 29, 30, 44, 72, 79, 82, 85, 88, 91, 98, 101, 105, 108, 123], "kwarg": [9, 16, 23, 26, 29, 30, 40, 42, 43, 44, 58, 63, 66, 70, 72, 79, 82, 85, 88, 91, 105, 114], "hint": 9, "labels_": 9, "sklearneuclideancluster": 9, "around": [9, 42, 46, 95, 96, 114, 117], "compat": [9, 34, 42, 55, 63, 64, 89, 105, 118], "api": [9, 14, 37, 38, 42, 99], "columngener": [10, 14, 37], "generated_column_nam": 10, "generate_column": 10, "to_feature_gener": [10, 14], "take_input_column_if_pres": [10, 37], "is_categor": [10, 37], "whose": [10, 14, 16, 17, 24, 37, 49, 51, 55, 67, 90, 97, 98, 109, 114, 115, 122], "exist": [10, 37, 38, 40, 51, 89, 90, 98, 99, 109, 113, 116, 122], "copi": [10, 22, 29, 37], "templat": [10, 14, 37], "indexcachedcolumngener": 10, "column_gener": [10, 14], "cach": [10, 18, 37, 51, 58, 99, 100, 106, 123], "keyvaluecach": [10, 18, 37, 58, 98], "decor": [10, 18, 98, 102, 115], "entri": [10, 14, 28, 37, 46, 61, 67, 90, 98, 101, 112, 114, 117], "columngeneratorcachedbyindex": 10, "encourag": 10, "persist_cach": [10, 18, 98], "independ": [10, 14, 34, 36, 37, 38, 63, 78, 79, 122], "persist": [10, 18, 51, 72, 98, 113], "develop": 11, "tostringmixin": [11, 13, 14, 23, 29, 34, 37, 41, 72, 88, 90, 97, 101, 110, 117, 122, 123], "drop_metadata_column": 11, "generalis": 11, "url": 11, "githubusercont": 11, "datasciencedojo": 11, "master": 11, "titan": 11, "col_index": 11, "uniqu": [11, 13, 14, 114, 123], "col_surviv": 11, "surviv": 11, "No": [11, 14], "ye": 11, "col_siblings_spous": 11, "aboard": 11, "col_parents_children": 11, "col_fare_pric": 11, "amount": [11, 114], "monei": 11, "avail": [11, 37, 90, 109], "cols_metadata": 11, "baseinputoutputdata": 13, "__len__": 13, "filter_indic": 13, "inputoutputarrai": 13, "to_torch_data_load": 13, "64": [13, 61, 69, 90], "weight": [13, 18, 21, 23, 26, 46, 51, 53, 54, 58, 63, 64, 67, 90, 97, 122], "datapointweight": 13, "classmethod": [13, 24, 25, 26, 29, 33, 41, 42, 66, 69, 72, 74, 90, 98, 101, 108, 109, 113, 123], "output_column": 13, "to_data_fram": [13, 23, 29, 33], "add_weight": 13, "weights_col_nam": 13, "filter_index": 13, "index_el": 13, "compute_input_output_correl": 13, "apply_weight": 13, "kwd": [13, 23, 24, 26, 30, 98, 101, 123], "tinputoutputdata": 13, "fractional_size_of_first_set": [13, 73, 78, 91], "random_se": [13, 22, 28, 34, 51, 54], "split_with_indic": 13, "datasplitterfromdataframesplitt": 13, "data_frame_splitt": [13, 72, 73], "apply_to_input": 13, "fraction": [13, 28, 29, 73, 78, 90, 91], "datasplitterfromsklearnsplitt": 13, "sklearn_splitt": 13, "model_select": 13, "org": [13, 23, 34, 37, 40, 64, 65, 85], "stabl": [13, 34, 37, 40, 64, 65], "datasplitterstratifiedshufflesplit": 13, "static": [13, 16, 22, 25, 26, 33, 41, 51, 54, 66, 79, 96, 108], "is_applic": [13, 23, 26], "compute_split_indic": 13, "indices_pair": 13, "dataframesplitterfract": 13, "dataframesplittercolumnequivalenceclass": 13, "togeth": [13, 23, 24], "item": [13, 34, 38, 73, 85, 87, 88, 98, 105, 123], "belong": [13, 14], "rest": [13, 99], "maintain": [13, 38, 55], "group": [13, 28, 34, 79], "boundari": [13, 23, 26, 37], "adjust": 13, "compute_weight": 13, "datapointweightingregressiontargetintervaltotalweight": 13, "intervals_weight": 13, "individu": [13, 17, 28, 42, 56, 90, 122, 123], "sum": [13, 28, 34, 63, 64, 90, 114], "satisfi": [13, 88], "total": [13, 53, 73, 79, 91, 109], "interval_weight": 13, "100": [13, 16, 53, 64, 65, 78, 99, 114], "foo": [13, 28, 34, 37, 112], "zero": [13, 14, 17, 24, 38, 67, 109, 123], "assert": 13, "isclos": 13, "tolist": 13, "6666666666666666": 13, "3333333333333333": 13, "upper_bound": 13, "rel_total_weight": 13, "upper": [13, 55, 66, 116], "bound": [13, 23, 24, 25, 26, 41, 49, 66, 101, 116], "lower_bound": 13, "preced": [13, 37], "b": [13, 16, 37, 73, 78, 91, 101, 112, 114], "weight_fract": 13, "place": [14, 29, 38, 65, 72, 73, 87, 98, 99, 118, 122, 123], "get_nam": [14, 37, 74, 122, 123], "set_nam": [14, 23, 37, 122, 123], "fit_appli": 14, "normalisation_rul": [14, 37, 58], "add_categorical_default_rul": [14, 37], "dftfromfeaturegener": 14, "fgen": [14, 37], "invertibledataframetransform": [14, 122], "apply_invers": 14, "get_invers": 14, "inversedataframetransform": 14, "invers": [14, 58, 73, 122], "rulebaseddataframetransform": 14, "logic": [14, 26], "invertible_dft": 14, "data_frame_transform": 14, "predecessor": 14, "find_first_transformer_by_typ": 14, "dftrenamecolumn": 14, "columns_map": 14, "dict": [14, 23, 24, 25, 28, 29, 34, 46, 51, 63, 72, 75, 78, 84, 90, 92, 96, 97, 99, 101, 103, 105, 113, 114, 117], "old": [14, 98, 105, 113], "dftconditionalrowfilteroncolumn": 14, "boolean": [14, 24, 55, 99], "dftinsetcomparisonrowfilteroncolumn": 14, "set_to_keep": 14, "settokeep": 14, "dftnotinsetcomparisonrowfilteroncolumn": 14, "set_to_drop": 14, "settodrop": 14, "dftvectorizedconditionalrowfilteroncolumn": 14, "vectorized_condit": 14, "dftrowfilt": 14, "ufunc": 14, "dftmodifycolumnvector": 14, "utilis": 14, "assign": [14, 54, 113], "whole": 14, "array_valued_result": 14, "variabl": [14, 22, 29, 33, 34, 54, 63, 65, 66, 72, 73, 78, 79, 87, 88, 96, 122], "regex": [14, 28, 34, 37, 53, 117], "match": [14, 28, 34, 37, 38, 53, 73, 79, 98, 99, 116, 122], "replac": [14, 63, 64, 99, 122], "usearrayvalu": 14, "unknown": [14, 17, 38, 101], "encount": [14, 38], "per": [14, 23, 28, 29, 37, 42, 51, 78, 79, 85, 88, 90, 99, 123], "dftkeepcolumn": 14, "dftdrowfilteronindex": 14, "default_transformer_factori": [14, 38, 123], "sklearntransformerprotocol": [14, 16], "require_all_handl": [14, 38], "context": [14, 28, 34, 37, 73, 87, 95, 96, 109, 117, 122], "idea": [14, 34], "Then": [14, 28, 36, 72], "get_normalisation_rul": [14, 37, 38], "preprocess": [14, 16, 38, 122, 123], "unmatch": [14, 38], "except": [14, 17, 28, 29, 37, 38, 67, 73, 91, 105, 109, 116, 117, 122], "skip": [14, 51, 78, 79, 85, 88, 107], "unsupport": [14, 37], "array_valu": 14, "otherwis": [14, 28, 98, 105, 113, 117, 119, 121, 122, 123], "flag": [14, 54, 72, 99, 113, 117], "trigger": [14, 72], "attempt": 14, "prevent": 14, "final": [14, 51, 88], "nor": [14, 107], "scalar": [14, 37, 54, 61, 67, 72, 90, 112, 123], "fix": [14, 28, 45, 49, 78, 88, 90, 113], "assum": [14, 23, 24, 29, 43, 51, 54, 58, 72, 88, 99, 105, 109, 112, 123], "effect": [14, 51, 96, 109, 117], "to_rul": 14, "express": [14, 28, 34, 38, 117], "to_placeholder_rul": 14, "placehold": [14, 98], "set_regex": 14, "matching_column": 14, "find_rul": 14, "dftfromcolumngener": 14, "dftcountentri": 14, "column_for_entry_count": 14, "column_name_for_resulting_count": 14, "version": [14, 37, 89, 98, 106, 109, 117], "appear": [14, 114, 123], "dftaggregationoncolumn": 14, "column_for_aggreg": 14, "dftroundfloat": 14, "decim": [14, 55, 110, 118], "sklearn_transform": [14, 15], "vari": [14, 24, 58, 88, 123], "dftsortcolumn": 14, "ascend": [14, 28, 34, 51], "dftfillna": [14, 37], "fill_valu": 14, "fill": [14, 18, 112], "na": 14, "dftcastcategoricalcolumn": 14, "cast": 14, "yield": [14, 36], "dftdropna": 14, "value_transform": 15, "to_2d_arrai": 16, "arr": [16, 116], "inverse_transform": 16, "manualscal": 16, "centr": [16, 40, 49, 65, 73], "subtract": 16, "after": [16, 28, 36, 37, 51, 54, 64, 65, 78, 79, 81, 90, 98, 107, 122], "remov": [16, 25, 36, 63, 107, 109, 112, 113, 117, 122], "maxabsscal": 16, "minmaxscal": 16, "with_mean": 16, "with_std": 16, "robustscal": 16, "quantile_rang": 16, "with_scal": 16, "with_cent": 16, "percentil": 16, "center": 16, "vb": 16, "va": 16, "symmetr": [16, 18, 54], "uniformli": 16, "median": [16, 26, 66], "valueonehotencod": 17, "seen": [17, 101], "throw": 17, "distancemetr": [18, 58], "named_tuple_a": 18, "pandasnamedtupl": [18, 22, 29, 58, 120], "named_tuple_b": 18, "singlecolumndistancemetr": 18, "distancematrixdfcach": 18, "pickle_path": [18, 98, 113], "save_on_upd": [18, 98], "deferred_save_delay_sec": [18, 98], "persistentkeyvaluecach": [18, 98, 99, 100], "tvalu": [18, 98, 101], "matric": [18, 78, 79], "under": [18, 28, 29, 34, 95, 98, 99, 100, 123], "absenc": [18, 98, 99, 100], "retriev": [18, 30, 34, 43, 72, 90, 98, 99, 100, 109, 116], "lookup": [18, 98, 99, 100, 116], "num_unfilled_entri": 18, "get_all_cach": 18, "cacheddistancemetr": 18, "key_value_cach": 18, "cachedvalueprovidermixin": [18, 98], "fill_cach": 18, "df_indexed_by_id": [18, 58], "member": [18, 26, 51, 114, 117], "linearcombinationdistancemetr": [18, 58], "hellingerdistancemetr": 18, "check_input": 18, "euclideandistancemetr": 18, "identitydistancemetr": 18, "relativebitwiseequalitydistancemetr": 18, "check_input_valu": 18, "input_valu": 18, "ensemblevectormodel": 19, "num_process": [19, 21, 51], "compute_all_predict": 19, "aggregate_predict": [19, 21], "predictions_data_fram": [19, 21], "ensembleregressionvectormodel": [19, 21], "is_regression_model": [19, 67, 122], "ensembleclassificationvectormodel": 19, "ensemble_bas": 20, "averagingvectorregressionmodel": 21, "vectormodelcrossvalidationdata": [22, 34], "trained_model": 22, "tmodel": [22, 28], "eval_data_list": 22, "tevaldata": [22, 28, 29], "predicted_var_nam": [22, 29, 33, 34, 63, 65, 96, 122], "test_indices_list": 22, "tevalstat": [22, 23, 28, 29], "tevalstatscollect": [22, 28], "iter_input_output_ground_truth_tupl": [22, 29], "track_metr": [22, 96], "tracking_context": [22, 28], "trackingcontext": [22, 28, 93, 95, 96], "crossvalidationsplitt": 22, "cross": [22, 28, 36, 51, 75], "create_fold": 22, "num_fold": 22, "numfold": 22, "crossvalidationsplitterdefault": 22, "num_split": 22, "crossvalidationsplitternest": 22, "test_fract": [22, 28], "nest": [22, 23, 117, 118], "return_trained_model": 22, "regressionevaluatorparam": [22, 28, 29, 75], "default_splitter_random_se": 22, "default_splitter_shuffl": 22, "deep": [22, 63, 85], "evalmodel": [22, 29], "randomse": [22, 29], "vectormodelcrossvalid": [22, 28], "metricsdictprovid": [22, 29, 30, 51, 92], "tcrossvaldata": [22, 28], "for_model": 22, "vectorclassificationmodelcrossvalid": [22, 28], "vectorregressionmodelcrossvalid": [22, 28], "create_metrics_dict_provid": [22, 29], "vectorregressionmodelcrossvalidationdata": [22, 28], "vectorregressionmodelevaluationdata": [22, 28, 29, 33], "regressionevalstat": [22, 26, 28, 29], "regressionevalstatscollect": [22, 26, 28], "classificationevalstatscollect": [22, 24, 28], "tmetric": [23, 24, 25], "add_metr": 23, "get_al": 23, "alia": [23, 38, 120], "metricsdict": 23, "deprec": [23, 106], "attribut": [23, 24, 25, 26, 58, 66, 98, 109, 113, 117, 121], "compute_value_for_eval_stat": [23, 24, 25, 26], "get_paired_metr": [23, 24], "plot": [23, 24, 26, 28, 29, 33, 34, 36, 42, 43, 44, 54, 65, 90, 106], "has_finite_bound": 23, "evalstatscollect": [23, 24, 26], "eval_stats_list": [23, 24, 26], "metric_nam": [23, 28, 36, 51], "get_metric_nam": 23, "get_metr": 23, "get_metric_by_nam": 23, "has_metr": 23, "mean_metrics_dict": 23, "subtitl": [23, 24, 26, 28, 34], "cdf": [23, 28, 114], "cdf_complementari": [23, 28, 114], "proport": [23, 54, 63, 64], "figur": [23, 24, 26, 28, 34, 36, 65, 90, 93, 95, 96, 107, 114], "histogram": [23, 28], "densiti": [23, 114], "estim": [23, 114], "cumul": [23, 28, 114], "complementari": [23, 28, 114], "statist": [23, 25, 29, 30, 90, 114], "percent": 23, "frequenc": [23, 24, 63, 64, 66, 97], "seaborn": 23, "histplot": [23, 114], "pydata": [23, 37], "plot_scatt": 23, "metric_name_x": 23, "metric_name_i": 23, "plot_heat_map": 23, "field": [23, 91, 120], "get_global_stat": 23, "getcombinedevalstat": 23, "get_combined_eval_stat": [23, 24, 26], "predictionevalstat": [23, 24, 26], "y_predict": [23, 24, 26, 29, 66], "y_true": [23, 24, 26, 29, 66], "dimension": [23, 45, 63, 73, 78, 79, 122, 123], "add_al": 23, "mean_stat": 23, "evalstatsplot": [23, 24, 26, 28], "create_figur": [23, 24, 26], "classificationmetr": [24, 29, 32], "requires_prob": 24, "compute_valu": [24, 25, 26, 66], "y_predicted_class_prob": 24, "classificationmetricaccuraci": 24, "classificationmetricbalancedaccuraci": 24, "classificationmetricaccuracywithoutlabel": 24, "probability_threshold": 24, "zero_valu": 24, "score": [24, 26, 34, 90], "ones": [24, 67, 117], "classificationmetricaccuracymaxprobabilitybeyondthreshold": 24, "countabl": 24, "beyond": [24, 90], "classificationmetricgeometricmeanoftrueclassprob": 24, "reach": [24, 36, 99, 123], "classificationmetricrelfreqmaxprobabilitybeyondthreshold": 24, "binaryclassificationmetr": [24, 26], "positive_class_label": 24, "binaryclassificationmetricprecis": 24, "binaryclassificationmetricrecal": 24, "binaryclassificationmetricf1scor": 24, "binaryclassificationmetricrecallforprecis": 24, "zerovalu": 24, "posit": [24, 26, 29, 41, 49, 54], "binaryclassificationmetricprecisionthreshold": 24, "denomin": [24, 97], "binaryclassificationmetricrecallthreshold": 24, "create_default_binary_classification_metr": 24, "binary_positive_label": [24, 29], "__guess": [24, 29], "default_multiclass_classification_metr": 24, "guess": [24, 29], "occurr": [24, 112], "binary_classification_positive_label_candid": 24, "regardless": [24, 96, 109, 117], "get_confusion_matrix": 24, "confusionmatrix": 24, "get_binary_classification_probability_threshold_variation_data": 24, "binaryclassificationprobabilitythresholdvariationdata": 24, "get_accuraci": 24, "get_misclassified_indic": 24, "title_add": [24, 26, 114], "plot_precision_recall_curv": 24, "binaryclassificationcount": 24, "is_positive_predict": 24, "is_positive_ground_truth": 24, "zero_denominator_metric_valu": 24, "from_probability_threshold": 24, "from_eval_stat": 24, "get_precis": 24, "get_recal": 24, "get_f1": 24, "get_rel_freq_posit": 24, "plot_precision_recal": 24, "plot_count": 24, "classificationevalstatsplotconfusionmatrix": 24, "classificationevalstatsplotprecisionrecal": 24, "classificationevalstatsplotprobabilitythresholdprecisionrecal": 24, "classificationevalstatsplotprobabilitythresholdcount": 24, "clusterlabelsevalstat": 25, "default_metr": 25, "numclust": 25, "av_siz": 25, "averageclusters": 25, "median_s": 25, "medianclusters": 25, "stddev_siz": 25, "clustersizestd": 25, "min_siz": 25, "minclusters": 25, "max_siz": [25, 66], "maxclusters": 25, "noise_s": 25, "noiseclusters": 25, "get_distribution_summari": 25, "clusteringunsupervisedmetr": 25, "clusteringunsupervisedevalstat": [25, 30], "removednoiseunsupervisedmetr": 25, "worstvalu": 25, "calinskiharabaszscor": 25, "daviesbouldinscor": 25, "silhouettescor": 25, "from_model": 25, "clustering_model": 25, "clusterlabelsmask": 25, "noiselabelsmask": 25, "clusteringsupervisedmetr": 25, "clusteringsupervisedevalstat": [25, 30], "removedcommonnoisesupervisedmetr": 25, "true_label": [25, 30], "vmeasurescor": 25, "adjustedrandscor": 25, "fowlkesmallowsscor": 25, "adjustedmutualinfoscor": 25, "labels_with_removed_common_nois": 25, "regressionmetr": [26, 29, 32, 66], "compute_error": 26, "compute_abs_error": 26, "regressionmetricma": 26, "mae": 26, "regressionmetricms": [26, 51], "mse": [26, 70], "regressionmetricrms": 26, "rmse": 26, "regressionmetricrrs": 26, "rrse": 26, "regressionmetricr2": 26, "r2": [26, 34], "regressionmetricpcc": 26, "pearson": 26, "correl": 26, "coeffici": 26, "aka": 26, "r": [26, 28, 34, 54, 112, 114], "pcc": 26, "regressionmetricstddeva": 26, "deviat": [26, 72, 110, 114], "absolut": [26, 41, 72, 97], "stddeva": 26, "regressionmetricmediana": 26, "mediana": 26, "regressionmetricfrombinaryclassificationmetr": 26, "classification_metr": 26, "class_gener": 26, "classgener": 26, "compute_class": 26, "predicted_valu": 26, "regressor": 26, "get_metric_qualifi": 26, "short": [26, 79, 88], "classgeneratorpositivebeyond": 26, "min_value_for_posit": 26, "heatmapcolormapfactori": 26, "create_color_map": 26, "min_sample_weight": 26, "total_weight": [26, 46], "num_quantization_level": 26, "heatmapcolormapfactorywhitetor": 26, "continu": [26, 37], "default_regression_metr": 26, "heatmap_colormap_factori": 26, "heatmap_diagonal_color": 26, "green": [26, 114], "heatmap_error_boundary_valu": 26, "heatmap_error_boundary_color": 26, "scatter_plot_point_color": 26, "05": [26, 114], "compute_ms": 26, "squar": [26, 41, 65], "compute_rrs": 26, "root": [26, 107, 109], "compute_pcc": 26, "compute_r2": 26, "compute_ma": 26, "compute_rms": 26, "compute_std_dev_a": 26, "create_eval_stats_collect": 26, "plot_error_distribut": 26, "histogramplot": [26, 114], "titl": [26, 114], "plot_scatter_ground_truth_predict": 26, "scatter": [26, 28], "plot_heatmap_ground_truth_predict": 26, "60": [26, 28, 114], "error_boundari": 26, "throughout": 26, "heatmap": 26, "diagon": [26, 114], "newli": [26, 90, 98], "regressionevalstatsplot": [26, 28], "regressionevalstatsploterrordistribut": 26, "regressionevalstatsplotheatmapgroundtruthpredict": 26, "regressionevalstatsplotscattergroundtruthpredict": 26, "eval_stats_clust": 27, "eval_stats_bas": 27, "eval_stats_regress": 27, "workflow": 28, "higher": [28, 51], "create_vector_model_evalu": 28, "is_regress": 28, "test_data": [28, 29], "vectorregressionmodelevalu": [28, 29], "create_vector_model_cross_valid": 28, "create_evaluation_util": 28, "regressionmodelevalu": [28, 75], "eval_model_via_evalu": 28, "plot_target_distribut": 28, "normalize_plot": 28, "evaluationresultcollector": 28, "resultwrit": [28, 107], "is_plot_creation_en": 28, "add_figur": 28, "add_data_frame_csv_fil": 28, "child": [28, 53], "added_filename_prefix": 28, "evalstatsplotcollector": 28, "tevalstatsplot": 28, "add_plot": 28, "create_plot": 28, "result_collector": 28, "regressionevalstatsplotcollector": 28, "classificationevalstatsplotcollector": 28, "modelevalu": 28, "tevalu": 28, "tcrossvalid": 28, "accord": [28, 58, 75, 90], "howev": [28, 75, 113], "taken": [28, 37, 75, 91, 109, 113], "create_evalu": 28, "off": 28, "create_cross_valid": 28, "log_result": 28, "additional_evaluation_on_training_data": 28, "write_eval_stat": 28, "tracked_experi": [28, 29, 96], "trackedexperi": [28, 29, 92, 93, 95, 96], "cross_valid": 28, "show": [28, 33, 114], "writer": [28, 107], "filenam": [28, 93, 95, 96, 98, 107], "write_individual_result": 28, "sort_column": 28, "sort_ascend": 28, "sort_column_move_to_left": 28, "also_include_unsorted_result": 28, "also_include_cross_val_global_stat": 28, "visitor": 28, "modelcomparisonvisitor": 28, "write_visitor_result": 28, "write_csv": 28, "modelcomparisondata": 28, "usecrossvalid": 28, "summari": 28, "fact": [28, 54, 123], "sortcolumn": 28, "move": [28, 54, 73], "left": [28, 52], "unsort": 28, "tabl": [28, 51, 52, 98, 99], "know": [28, 122], "compare_models_cross_valid": 28, "subtitle_prefix": 28, "multidatamodelevalu": [28, 32], "io_data_dict": 28, "key_nam": 28, "meta_data_dict": 28, "test_io_data_dict": 28, "explicit": [28, 113], "inputoutputdatadict": 28, "superset": 28, "model_factori": [28, 32, 36, 51], "write_per_dataset_result": 28, "column_name_for_model_rank": 28, "rank_max": 28, "add_combined_eval_stat": 28, "create_metric_distribution_plot": 28, "create_combined_eval_stats_plot": 28, "distribution_plots_cdf": 28, "distribution_plots_cdf_complementari": 28, "regressionmultidatamodelcomparisondata": 28, "classificationmultidatamodelcomparisondata": 28, "subdirectori": 28, "rank": 28, "els": 28, "overal": [28, 90, 105], "results_by_model_nam": 28, "vectormodelevalu": [28, 29], "iter_evaluation_data": 28, "get_best_model_nam": 28, "get_best_model": 28, "vectormodelbas": [28, 29, 32, 95, 96, 122], "visit": 28, "collect_result": 28, "modelcomparisonvisitoraggregatedfeatureimport": 28, "feature_agg_regex": 28, "write_figur": [28, 107], "write_data_frame_csv": 28, "exactli": [28, 34], "w": [28, 34, 88, 117], "_d": [28, 34], "caus": [28, 34, 72, 117, 118], "foo_1": [28, 34, 37], "foo_2": [28, 34], "bar_1": [28, 34], "bar_2": [28, 34], "bar": [28, 34, 37, 112], "plot_feature_import": [28, 34], "get_feature_import": [28, 34], "featureimport": [28, 34], "multidatamodelcomparisondata": 28, "all_results_df": 28, "mean_results_df": 28, "agg_results_df": 28, "eval_stats_by_model_nam": 28, "dataset_nam": 28, "model_name_to_string_repr": 28, "get_model_nam": 28, "get_model_descript": 28, "get_eval_stats_list": 28, "iter_model_result": 28, "create_distribution_plot": 28, "heat": [28, 114], "trackingmixin": [29, 51, 96], "compute_metr": [29, 51], "previous": [29, 38, 51, 56, 69, 90, 97, 98, 122, 123], "metricsdictproviderfromfunct": 29, "compute_metrics_fn": 29, "vectormodelevaluationdata": 29, "stats_dict": 29, "input_data": 29, "modify_input_df": [29, 33], "output_col_name_overrid": [29, 33], "y_error": 29, "y_abs_error": 29, "queri": [29, 33, 112], "resultset": [29, 33], "overrid": [29, 72, 73, 117, 122], "create_result_set": 29, "regression_result_set_factori": [29, 33], "core": [29, 58, 92], "result_set": [29, 31], "regressionresultset": [29, 33], "queryabl": 29, "interact": [29, 33], "fractional_split_random_se": 29, "fractional_split_shuffl": 29, "fractionalsplittestfract": 29, "get_data_splitt": 29, "set_data_splitt": 29, "set_tracked_experi": [29, 96], "computemetr": 29, "on_training_data": 29, "held": 29, "output_data_frame_transform": 29, "from_dict_or_inst": [29, 90], "vectorregressionmodelevaluatorparam": 29, "testdata": 29, "compute_test_data_output": 29, "groundtruth": 29, "get_misclassified_inputs_data_fram": 29, "tripl": 29, "detect": 29, "vectorclassificationmodelevaluatorparam": 29, "rulebasedvectorclassificationmodelevalu": 29, "coincid": [29, 61, 67, 122], "preprocessor": [29, 34, 36, 63, 67, 72, 122], "lead": [29, 73, 91, 107], "rulebasedvectorregressionmodelevalu": 29, "clusteringmodelevalu": 30, "tclusteringevalstat": 30, "clusteringmodelunsupervisedevalu": 30, "holder": 30, "wish": 30, "calcul": [30, 97], "clusteringmodelsupervisedevalu": 30, "metric_comput": [31, 36], "evaluator_clust": 31, "metriccomputationresult": 32, "metric_valu": [32, 36, 51], "metriccomput": [32, 36], "metriccomputationmultidata": 32, "ev_util": 32, "use_combined_eval_stat": 32, "ipython": 33, "subsequ": [33, 37, 38, 72, 88, 95, 96, 101, 116, 123], "_show_df": 33, "overridden": [33, 117], "meaning": 33, "environ": 33, "sql": [33, 112], "syntax": [33, 112], "duckdb": [33, 112], "instal": [33, 112], "claus": [33, 112], "exclud": [33, 34, 112, 117], "keyword": [33, 51, 66, 90, 112], "content": [33, 52, 93, 95, 96, 104, 107, 114], "from_regression_eval_data": 33, "col_name_predict": 33, "col_name_ground_truth": 33, "col_name_error": 33, "col_name_abs_error": 33, "feature_importance_dict": 34, "get_feature_importance_dict": [34, 63], "get_sorted_tupl": 34, "revers": [34, 54, 72], "descend": 34, "come": [34, 98], "featureimportanceprovid": [34, 36, 63], "aggregatedfeatureimport": 34, "feature_agg_reg_ex": 34, "getfeatureimport": 34, "get_aggregated_feature_importance_dict": 34, "get_aggregated_feature_import": 34, "compute_permutation_feature_importance_dict": 34, "num_repeat": 34, "exclude_input_preprocessor": 34, "num_job": 34, "aggregatedpermutationfeatureimport": 34, "aggregated_feature_import": 34, "exclude_model_input_preprocessor": 34, "model_evalu": 34, "permut": 34, "help": [34, 105], "discard": [34, 36, 37, 98], "job": 34, "parallel": [34, 51, 54, 78, 79], "parallelis": 34, "joblib": [34, 98], "parallel_backend": 34, "processor": 34, "add_cross_validation_data": 34, "cross_val_data": 34, "rfe": 35, "feature_select": [36, 52], "rfestep": 36, "rferesult": 36, "get_sorted_step": 36, "elimin": 36, "worst": 36, "get_selected_featur": 36, "get_num_features_arrai": 36, "get_metric_values_arrai": 36, "plot_metric_valu": 36, "vs": 36, "recursivefeatureeliminationcv": 36, "min_featur": 36, "recurs": [36, 113, 117], "repeat": [36, 58], "minfeatur": 36, "less": [36, 99, 101, 116], "markedli": 36, "rfecv": 36, "averag": [36, 88, 90, 114], "those": [36, 61, 67], "smallest": [36, 63, 64, 101, 116], "remove_input_preprocessor": [36, 122], "minims": 36, "maximis": [36, 51], "outcom": 36, "similar": [36, 45, 85], "recursivefeatureelimin": 36, "duplicatecolumnnamesexcept": 37, "presenc": 37, "consum": 37, "featuregeneratorfactori": [37, 123], "regist": [37, 38, 123], "include_generated_categorical_rul": [37, 38], "is_categorical_featur": 37, "get_generated_column_nam": 37, "recent": [37, 54], "to_dft": 37, "ctx": 37, "fit_gener": 37, "flatten": 37, "columns_to_flatten": 37, "keep_other_column": 37, "chainedfeaturegener": 37, "last": [37, 79, 85, 101, 112, 122], "rulebasedfeaturegener": 37, "featuregeneratorfromnamedtupl": [37, 58], "except_column": 37, "verify_column_nam": 37, "normalisationrul": 37, "said": 37, "featuregeneratorflattencolumn": 37, "vec1": 37, "vec2": 37, "dim1": 37, "dim2": 37, "vec1_": 37, "i1": 37, "vec2_": 37, "i2": 37, "featuregeneratorfromcolumngener": 37, "column_gen": 37, "columngen": [37, 52], "featuregeneratortargetdistribut": 37, "target_column": 37, "target_column_bin": 37, "intervalindex": 37, "target_column_in_features_df": 37, "t_1": 37, "t_n": 37, "empir": [37, 54, 57], "phase": [37, 122], "request": [37, 99], "_distribution_": 37, "t_i": 37, "_distribut": 37, "Being": 37, "targetcolumnbin": 37, "discretis": 37, "cut": 37, "targetcolumn": 37, "featuregeneratorfromvectormodel": 37, "target_feature_gener": 37, "input_feature_gener": 37, "use_target_feature_generator_for_train": 37, "targetfeaturegener": 37, "bypass": [37, 85], "thereof": 37, "featuregeneratormapcolumn": 37, "input_col_nam": 37, "feature_col_nam": 37, "featuregeneratormapcolumndict": 37, "featuregeneratornamark": 37, "value_a": 37, "value_na": 37, "conjunct": [37, 109, 122], "flattened_feature_gener": 37, "foo_0": 37, "featuregeneratorfromdft": 37, "featuregeneratorregistri": 38, "use_singleton": 38, "registri": 38, "singleton": [38, 109], "available_featur": 38, "register_factori": [38, 123], "hashabl": [38, 97, 98, 116, 123], "referenc": [38, 49, 123], "enum": [38, 59, 74, 79, 81, 88, 90, 98, 100, 101, 123], "project": [38, 42, 46], "get_feature_gener": [38, 122], "getnam": 38, "usesingleton": 38, "collect_featur": 38, "feature_generators_or_nam": 38, "commonli": 38, "get_multi_feature_gener": 38, "create_multi_feature_gener": 38, "create_dft_one_hot_encod": 38, "create_feature_transformer_normalis": 38, "feature_generator_registri": 39, "geoanalyt": [40, 41, 42, 43, 44, 45, 46, 49, 50, 52], "geocoordcluster": 40, "fit_geo_coord": 40, "geo_coord": [40, 48], "geocoord": [40, 41], "clusters_indic": 40, "outlier": 40, "greedyagglomerativegeocoordcluster": 40, "max_min_distance_for_merge_m": 40, "max_distance_m": 40, "lc": [40, 41], "localcoordinatesystem": [40, 49], "metr": [40, 41, 49], "smaller": [40, 45, 54, 101, 114, 116], "dim": [40, 43, 55], "unset_valu": 40, "localpoint": 40, "xy": 40, "search_radius_m": 40, "sklearngeocoordcluster": 40, "euclidian": 40, "clusters_local_point": 40, "dbscangeocoordcluster": 40, "ep": 40, "min_sampl": 40, "neighbourhood": 40, "space": 40, "dbscan": 40, "geograph": [41, 49, 50], "longitude_per_m": 41, "latitud": [41, 49], "latitude_per_m": 41, "approximate_squared_dist": 41, "p1": [41, 51, 54], "p2": 41, "longitud": [41, 49], "approxim": [41, 73, 91], "m\u00b2": 41, "closest_point_on_seg": 41, "search_po": 41, "segpoint1": 41, "segpoint2": 41, "segment": [41, 114], "connect": [41, 85, 99], "closest": [41, 101, 116], "searchpo": 41, "orient": 41, "angl": 41, "lat": [41, 49, 50], "lon": [41, 49, 50], "rad": 41, "abs_angle_differ": 41, "a1": 41, "a2": 41, "pi": 41, "closest_point_on_polylin": 41, "polylin": 41, "search_orientation_angl": 41, "max_angle_differ": 41, "find": [41, 46, 101, 116], "maxanglediffer": 41, "searchorientationangl": 41, "opt_point": 41, "opt_dist": 41, "opt_segment_start_idx": 41, "wgs84": 41, "latlon": 41, "distance_to": 41, "gps_posit": 41, "squared_distance_to": 41, "local_coord": [41, 48], "mean_coord": 41, "gpstracepoint": 41, "timestamp": [41, 51, 58, 119], "georect": [41, 50], "min_lat": 41, "min_lon": 41, "max_lat": 41, "max_lon": 41, "from_circl": 41, "centre_lat": 41, "centre_lon": 41, "radius_m": [41, 49], "rectangl": 41, "circular": 41, "area": [41, 43, 49, 114], "geopanda": [42, 43, 44, 45, 46, 48], "coordinateeuclideancluster": 42, "geodataframewrapp": [42, 43, 44, 46], "geospati": [42, 46], "clusteringmodel": 42, "loadsaveinterfac": [42, 98], "to_geodf": [42, 43, 44, 46], "cr": [42, 43, 46], "epsg": [42, 43, 46], "3857": [42, 43, 46], "export": 42, "geodatafram": [42, 43, 44, 45, 46], "multipoint": [42, 43, 44, 45], "By": [42, 46, 72, 114, 117, 123], "pseudo": [42, 46], "mercat": [42, 46], "as_multipoint": 42, "readabl": [42, 109], "coordinateclust": 42, "shapefil": [42, 43], "geometri": [42, 43, 44, 47, 49], "include_nois": [42, 43], "color": [42, 114], "sklearncoordinateclust": 42, "visual": 43, "polygonannotatedcoordin": 43, "ground_truth_polygon": 43, "polygon": [43, 45, 49], "region": 43, "cover": [43, 49], "get_coordinates_label": 43, "validate_coordin": 44, "extract_coordinates_arrai": 44, "alpha_shap": 45, "alpha": [45, 65, 114], "edg": [45, 46], "concav": 45, "influenc": 45, "gooey": 45, "border": 45, "fall": 45, "inward": 45, "much": 45, "delaunay_graph": 46, "edge_weight": 46, "euclidean": 46, "delaunai": 46, "triangul": 46, "networkx": 46, "networx": 46, "constant": [46, 54, 65], "coordinate_pair_kei": 46, "spanningtre": 46, "tree_find": 46, "minimum_spanning_tre": 46, "subgraph": 46, "num_edg": 46, "mean_edge_weight": 46, "coordinatespanningtre": 46, "enhanc": 46, "multi_line_str": 46, "multilinestr": 46, "coordinate_clust": 47, "graph": 47, "coordinate_clustering_ground_truth": 47, "geo_clust": 48, "map_til": 48, "geo": 49, "vice": [49, 55], "versa": [49, 55], "utm": 49, "get_local_coord": 49, "get_lat_lon": 49, "local_x": 49, "local_i": 49, "localhexagonalgrid": 49, "hexagon": 49, "grid": [49, 51], "hex": [49, 104], "toward": 49, "east": 49, "north": 49, "odd": [49, 117], "shift": [49, 85], "half": [49, 54], "right": 49, "www": 49, "redblobgam": 49, "get_hexagon": 49, "x_column": 49, "y_row": 49, "get_min_hexagon_column": 49, "get_max_hexagon_column": 49, "get_min_hexagon_row": 49, "get_max_hexagon_row": 49, "get_hexagon_coord_span_for_bounding_box": 49, "min_x": 49, "min_i": 49, "max_x": 49, "max_i": 49, "mincol": 49, "min_row": 49, "maxcol": 49, "max_row": 49, "span": 49, "get_hexagon_coords_for_point": 49, "fix_polygon": 49, "poli": 49, "multipolygon": 49, "maxareadiff": 49, "invalid": [49, 98, 113], "stackoverflow": 49, "35110632": 49, "intersect": [49, 119], "constraint": 49, "maptil": 50, "tx": 50, "ty": 50, "rect": 50, "zoom": 50, "13": [50, 85], "iter_tile_coordinates_in_rect": 50, "get_tiles_in_rect": 50, "get_til": 50, "get_tile_coordin": 50, "iter_param_combin": 51, "hyper_param_valu": 51, "parametercombinationskipdecid": 51, "told": 51, "basi": 51, "tell": 51, "is_skip": 51, "iff": [51, 119], "parametercombinationequivalenceclassvaluecach": 51, "hyper": 51, "parametersmetricscollect": 51, "csv_path": 51, "sort_column_nam": 51, "sortcolumnnam": 51, "overwrit": 51, "add_valu": 51, "csvpath": 51, "constructor": [51, 63, 64, 65], "gridsearch": 51, "parameter_opt": 51, "csv_results_path": 51, "incremental_skip_exist": 51, "parameter_combination_skip_decid": 51, "model_save_directori": 51, "directori": [51, 98, 107], "redund": 51, "prepend": [51, 96, 104], "gridsearch_": 51, "metrics_evalu": 51, "csvresultspath": 51, "lower": [51, 66, 116], "param_nam": 51, "default_metric_nam": 51, "default_higher_is_bett": 51, "bestparam": 51, "get_best_param": 51, "higher_is_bett": 51, "d": [51, 54, 72, 73, 98, 103, 105, 109, 117], "v": [51, 114], "sahyperopt": 51, "ops_and_weight": [51, 54], "state": [51, 54, 79, 88, 90, 113], "parameterchangeoper": 51, "initial_paramet": 51, "metric_to_optimis": 51, "minimise_metr": 51, "collect_data_fram": 51, "parameter_combination_equivalence_class_value_cach": 51, "p0": [51, 54], "initialparamet": 51, "simul": [51, 54], "anneal": [51, 54], "regularli": 51, "collectdatafram": 51, "duplic": [51, 112, 116], "inferior": 51, "delta": [51, 54], "sastat": [51, 54], "compute_cost_valu": [51, 54], "sacostvaluenumer": [51, 54], "scratch": [51, 54], "get_state_represent": [51, 54], "compact": [51, 54, 109], "archiv": [51, 54], "hitherto": [51, 54], "applystaterepresent": [51, 54], "apply_state_represent": [51, 54], "getstaterepresent": [51, 54], "necessarili": [51, 54, 122], "sole": [51, 54], "optims": [51, 54], "thereaft": [51, 54], "saoper": [51, 54], "apply_state_chang": [51, 54], "cost_delta": [51, 54], "sacostvalu": [51, 54], "choose_param": [51, 54], "greedili": [51, 54], "costvalu": [51, 54], "chosen": [51, 54], "max_step": [51, 54], "durat": [51, 54, 72], "collect_stat": [51, 54], "get_simulated_ann": 51, "simulatedann": [51, 54], "autogener": 52, "repositori": 52, "link": 52, "submodul": 52, "subpackag": 52, "multi_model": 52, "feature_import": 52, "hyperopt": 52, "naive_bay": 52, "distance_metr": [52, 58], "local_search": 52, "nearest_neighbor": 52, "minizinc": 52, "sklearn_quantil": 52, "tensor_model": 52, "pytorch_lightn": [52, 61], "lightgbmvectorregressionmodel": 53, "max_depth": 53, "min_child_sampl": 53, "importance_typ": 53, "featureimportanceprovidersklearnregressionmultipleonedim": [53, 63, 65, 124], "depth": 53, "learner": 53, "boost": [53, 124], "readthedoc": [53, 124], "io": [53, 106, 124], "en": [53, 99, 124], "latest": [53, 98, 124], "pythonapi": 53, "lgbmregressor": 53, "lightgbmvectorclassificationmodel": 53, "use_balanced_class_weight": [53, 63, 64, 124], "featureimportanceprovidersklearnclassif": [53, 63, 64, 124], "lgbmclassifi": 53, "highlight": 53, "satemperatureschedul": 54, "temperatur": 54, "goe": 54, "degree_of_complet": 54, "satemperatureschedulefix": 54, "schedul": 54, "satemperaturescheduleexponenti": 54, "t0": 54, "t1": [54, 105], "exponent_factor": 54, "exponenti": 54, "factor": [54, 85, 88], "multipli": [54, 65], "expon": 54, "faster": [54, 123], "reverse_sigmoid": [54, 110], "v0": 54, "v1": [54, 122], "steep": 54, "mid_degre": 54, "satemperatureschedulereversesigmoid": 54, "sigmoid": [54, 70, 74, 81, 110], "curv": 54, "logist": [54, 64, 65], "roughli": 54, "slope": 54, "inflect": 54, "suffici": [54, 90], "pronounc": 54, "linear": [54, 58, 65, 88, 114], "decai": 54, "satemperatureschedulereversesigmoidsymmetr": 54, "cost_delta_for_symmetri": 54, "variant": [54, 90, 98], "satemperatureschedulepow": 54, "saprobabilityfunct": 54, "params_dict": 54, "saprobabilityfunctionlinear": 54, "linearli": [54, 101], "saprobabilityfunctionreversesigmoid": 54, "saprobabilityfunctionconst": 54, "saprobabilityschedul": 54, "reference_cost_delta": 54, "probability_funct": 54, "referencecostdelta": 54, "probabilityfunct": 54, "immut": 54, "tsastat": 54, "apply_cost_chang": 54, "sachain": 54, "state_factori": 54, "progress": 54, "log_stat": 54, "apply_best_st": 54, "plot_seri": 54, "series_nam": 54, "getseri": 54, "get_seri": 54, "collectstat": 54, "costdelta": 54, "bestcostvalu": 54, "schedule_factori": 54, "maxstep": 54, "choic": 54, "get_chain": 54, "paralleltemp": 54, "num_chain": 54, "log_cost_progress": 54, "temper": 54, "robust": 54, "numchain": 54, "drawn": 54, "equidist": 54, "plotcostprogress": 54, "plot_cost_progress": 54, "costscal": 55, "cost_valu": 55, "significant_digit": [55, 118], "signific": [55, 118], "scaled_int": 55, "original_valu": 55, "scaled_float": 55, "scaled_valu": 55, "unscal": 55, "minizincproblem": 55, "create_mini_zinc_fil": 55, "os": 55, "get_mini_zinc_cod": 55, "minizincsolv": 55, "osicbc": 55, "solver_time_second": 55, "fzn_output_path": 55, "solver": [55, 64, 65], "flatzinc": 55, "solve_path": 55, "mzn_path": 55, "log_info": 55, "debug": [55, 117], "solve_problem": 55, "keep_temp_fil": 55, "temporari": 55, "mzv": 55, "get_last_solver_time_sec": 55, "extract_1d_array_from_output": 55, "string_identifi": 55, "extract_multi_dim_array_from_output": 55, "array_to_mini_zinc": 55, "element_cast": 55, "multivectorregressionmodel": 56, "predicted_variable_nam": [56, 122], "init": [56, 122], "categoricalnaivebayesvectorclassificationmodel": 57, "pseudo_count": 57, "naiv": 57, "bay": 57, "overfit": 57, "neighbor": 58, "neighborprovid": 58, "iter_potential_neighbor": 58, "allneighborsprovid": 58, "timerangeneighborsprovid": 58, "timestamps_column": 58, "past_time_range_dai": 58, "120": 58, "future_time_range_dai": 58, "abstractknnfind": 58, "find_neighbor": 58, "named_tupl": 58, "n_neighbor": 58, "cachingknearestneighboursfind": 58, "distancemetriccach": 58, "neighbor_provid": 58, "nearest": 58, "finder": 58, "speed": [58, 123], "composit": 58, "consecut": 58, "knn": 58, "get_cached_metr": 58, "cachedseriesdistancemetr": 58, "get_distance_seri": 58, "potential_neighbor_valu": 58, "knearestneighboursfind": 58, "knearestneighboursclassificationmodel": 58, "num_neighbor": 58, "neighbor_provider_factori": 58, "distance_based_weight": 58, "distance_epsilon": 58, "001": [58, 65, 90], "distance_metric_cach": 58, "democrat": 58, "vote": 58, "knearestneighboursregressionmodel": 58, "featuregeneratorneighbor": 58, "neighbor_attribut": 58, "max_by_column": [59, 70], "standardis": 59, "vectordatascal": [59, 73], "data_fram": 59, "get_normalised_arrai": 59, "get_denormalised_arrai": 59, "pl_model": 60, "plwrappedmodel": 61, "lightningmodul": 61, "trainer": 61, "validation_fract": [61, 69, 70], "pltensortoscalarclassificationmodel": 61, "check_input_shap": [61, 67], "check_input_column": [61, 67, 122], "tensortoscalarclassificationmodel": [61, 67], "cnn": [61, 67, 79], "pltensortoscalarregressionmodel": 61, "tensortoscalarregressionmodel": [61, 67], "pltensortotensorclassificationmodel": 61, "tensortotensorclassificationmodel": [61, 67], "segreg": [61, 67], "predictionshap": [61, 67], "numlabel": [61, 67], "check_output_shap": [61, 67], "pltensortotensorregressionmodel": 61, "tensortotensorregressionmodel": [61, 67], "put": [61, 67, 107], "sklearn_regress": 62, "sklearn_classif": 62, "create_sklearn_model": 63, "model_constructor": [63, 64, 65], "output_transform": [63, 122], "str_sklearn_model": 63, "break": [63, 117], "indent": [63, 117], "actualfitparam": 63, "abstractsklearnvectorregressionmodel": 63, "built": 63, "with_sklearn_input_transform": 63, "sklearn_input_transform": 63, "with_sklearn_output_transform": 63, "sklearn_output_transform": 63, "get_sklearn_model": 63, "abstractsklearnmultidimvectorregressionmodel": [63, 65], "use_label_encod": [63, 64], "reciproc": [63, 64], "largest": [63, 64, 99, 101, 116], "get_param": [63, 101], "set_param": [63, 101], "featureimportanceprovidersklearnregressionmultidim": [63, 65], "sklearnmlpvectorclassificationmodel": 64, "hidden_layer_s": [64, 65], "adam": [64, 65, 70, 90], "max_it": [64, 65], "early_stop": [64, 65], "n_iter_no_chang": [64, 65], "hidden": [64, 65, 78, 79, 81, 85, 88], "tanh": [64, 65, 74], "lbfg": [64, 65, 90], "sgd": [64, 65, 90], "reproduc": [64, 65], "gradient": [64, 65, 90, 124], "l": [64, 65, 85, 90, 117, 123], "bfg": [64, 65, 90], "epoch": [64, 65, 69, 70, 90], "mlpclassifi": 64, "neural_network": [64, 65], "sklearnmultinomialnbvectorclassificationmodel": 64, "sklearnsvcvectorclassificationmodel": 64, "sklearnlogisticregressionvectorclassificationmodel": 64, "sklearnkneighborsvectorclassificationmodel": 64, "sklearnrandomforestvectorregressionmodel": 65, "sklearnlinearregressionvectorregressionmodel": 65, "fit_intercept": 65, "intercept": 65, "term": [65, 79, 88, 96], "linear_model": 65, "linearregress": 65, "sklearnlinearridgeregressionvectorregressionmodel": 65, "tol": 65, "l2": 65, "regularis": [65, 85], "ridg": 65, "sklearnlinearlassoregressionvectorregressionmodel": 65, "0001": 65, "l1": 65, "lasso": 65, "sklearnmultilayerperceptronvectorregressionmodel": 65, "mlpregressor": 65, "sklearnsvrvectorregressionmodel": 65, "sklearnlinearsvrvectorregressionmodel": 65, "sklearngradientboostingvectorregressionmodel": 65, "sklearnkneighborsvectorregressionmodel": 65, "sklearnextratreesvectorregressionmodel": 65, "sklearndummyvectorregressionmodel": 65, "quantil": [65, 66], "sklearndecisiontreevectorregressionmodel": 65, "plot_graphviz_pdf": 65, "dot_path": 65, "dot": 65, "alongsid": 65, "render": [65, 113, 114, 118], "pdf": [65, 110], "suffix": [65, 78, 107], "randomforestquantileregressorvectorregressionmodel": 66, "confid": 66, "randomforestquantileregressor": 66, "predict_confidence_interv": 66, "var_nam": 66, "quantileregressionmetr": 66, "compute_confidence_interv": 66, "quantileregressionmetricaccuracyinconfidenceinterv": 66, "accuracyinci": 66, "quantileregressionmetricconfidenceintervalmeans": 66, "meansizeci": 66, "quantileregressionmetricconfidenceintervalmedians": 66, "mediansizeci": 66, "quantileregressionmetricrelfreqmaxsizeconfidenceinterv": 66, "everyth": [67, 109], "denot": 67, "inputtensorshap": 67, "outputtensorshap": 67, "n_row": [67, 112], "n_inputcolumn": 67, "n_outputcolumn": 67, "empti": [67, 98, 99, 101, 105, 107, 112, 113, 116, 122], "strip": [67, 107, 112], "invalidshapeerror": 67, "tensormodel": 67, "get_model_input_shap": 67, "get_model_output_shap": 67, "get_num_predicted_class": 67, "fit_preprocessor": [67, 122], "prediction_shap": 67, "convert_class_probabilities_to_predict": [67, 122], "predictclassprob": [67, 122], "predict_class_prob": [67, 122], "tensorshap": [67, 112], "tf_base": 68, "tf_mlp": 68, "tensorflowsess": 69, "session": 69, "configure_sess": 69, "gpu_allow_growth": 69, "gpu_per_process_memory_fract": 69, "set_keras_sess": 69, "allow_default": 69, "kera": 69, "allowdefault": 69, "kerasvectorregressionmodel": [69, 70], "kerasmultilayerperceptronvectorregressionmodel": 70, "hidden_activ": 70, "output_activ": [70, 78, 79], "torch_opt": 71, "torch_modul": 71, "torch_enum": 71, "torch_data": 71, "torch_eval_util": 71, "torchtext": 71, "torch_model": [71, 78, 79, 81, 82, 84, 85, 87, 88], "mcdropoutcapablennmodul": [72, 79, 82], "nn": [72, 74, 81, 84, 87, 88, 90], "mc": 72, "_dropout": 72, "infermcdropout": 72, "__call__": 72, "infer_mc_dropout": 72, "num_sampl": 72, "draw": [72, 114], "sd": 72, "torchmodel": [72, 84, 87, 90], "soundli": 72, "demand": 72, "createtorchmodul": 72, "set_torch_modul": 72, "set_normalisation_check_threshold": 72, "get_module_byt": 72, "byte": [72, 107], "set_module_byt": 72, "model_byt": 72, "get_torch_modul": 72, "create_torch_modul": [72, 87, 90], "torchdataset": [72, 73, 90, 91], "as_numpi": 72, "create_batch": 72, "mc_dropout_sampl": 72, "mc_dropout_prob": 72, "scale_output": 72, "scale_input": 72, "createbatch": 72, "too": [72, 105], "apply_sc": 72, "scaled_output": [72, 90], "torchmodelfittingstrategi": 72, "torchmodelfittingstrategydefault": 72, "best_epoch": [72, 90], "total_epoch": [72, 90], "nn_optimis": 72, "nnoptimis": [72, 78, 81, 84, 90], "traininginfo": [72, 81, 84, 87, 90], "torchmodelfrommodulefactori": 72, "module_factori": 72, "outputscal": [72, 81, 84, 87], "tensorscal": [72, 73, 78, 81, 84, 87], "inputscal": [72, 81, 84, 87], "torchmodelfrommodul": 72, "torchmodelfactoryfrommodul": 72, "torchautoregressiveresulthandl": 72, "build": [72, 117], "autoregress": 72, "clear_result": 72, "save_result": 72, "input_df": [72, 73], "picklabl": [72, 84, 98, 104], "ttorchvectorregressionmodel": 72, "coerc": 72, "trivial": 72, "with_output_tensoris": 72, "dependend": 72, "with_output_tensor_to_array_convert": 72, "output_tensor_to_array_convert": 72, "outputtensortoarrayconvert": 72, "unwant": [72, 117], "pad": [72, 123], "with_torch_data_set_provider_factori": 72, "torch_data_set_provider_factori": 72, "torchdatasetproviderfactori": 72, "torchdatasetproviderfactoryregressiondefault": 72, "with_data_frame_splitt": 72, "with_normalisation_check_threshold": 72, "exce": [72, 90], "with_autoregressive_result_handl": 72, "result_handl": 72, "inference_batch_s": 72, "handler": [72, 109], "restrict": [72, 99], "output_mod": [72, 88, 90], "ttorchvectorclassificationmodel": 72, "torchdatasetproviderfactoryclassificationdefault": 72, "create_data_set_provid": 72, "training_context": 72, "trainingcontext": [72, 122], "input_tensoris": [72, 73], "output_tensoris": [72, 73], "tensorise_dynam": [72, 73], "fly": 72, "precomput": 72, "memori": [72, 88, 95, 98, 99, 109], "model_output": [72, 90], "model_input": 72, "to_tensor": 73, "denormalis": 73, "tensorscalercentreandscal": 73, "tensorscalerfromvectordatascal": 73, "vector_data_scal": 73, "tensorscalerident": 73, "tensorscalerfromdftsklearntransform": 73, "predefin": 73, "tensoriserdataframefloatvaluesmatrix": 73, "tensoriserclasslabelindic": 73, "datautil": [73, 78, 90], "split_into_tensor": [73, 78], "get_output_tensor_scal": [73, 78], "get_input_tensor_scal": [73, 78], "model_output_dim": [73, 78, 91], "vectordatautil": 73, "differing_output_normalisation_mod": 73, "differingoutputnormalisationmod": 73, "split_into_data_set": 73, "classificationvectordatautil": 73, "num_class": [73, 78], "iter_batch": [73, 91], "input_onli": [73, 91], "inputonli": [73, 91], "input_tensor_scal": 73, "output_tensor_scal": 73, "provide_split": [73, 91], "encompass": [73, 91], "remaind": [73, 90, 91], "get_model_output_dim": 73, "get_input_dim": 73, "rnn": [73, 78, 79], "tensortupl": 73, "manipul": 73, "simultan": [73, 105], "torchdatasetfromtensor": 73, "slice": [73, 78, 79, 88, 98, 101, 116], "devic": [73, 87], "torchdatasetfromdataframespretensoris": 73, "output_df": 73, "torchdatasetfromdataframesdynamicallytensoris": 73, "torchdatasetfromdatafram": 73, "torchdatasetproviderfromdatautil": 73, "data_util": 73, "torchdatasetproviderfromvectordatautil": 73, "tensortransform": [73, 90], "softmax": 74, "from_nam": [74, 90], "torch_function_from_ani": 74, "unnormalised_log_prob": 74, "fn": [74, 98], "torchvectorregressionmodelevaluationutil": 75, "lstnet": [76, 78, 79], "residualffn": [76, 84, 85], "seq": [76, 87, 88, 116, 123], "lstnet_model": 77, "lstnet_modul": 77, "lstnetworkvectorclassificationmodel": 78, "num_input_time_slic": [78, 79, 88], "input_dim_per_time_slic": [78, 79], "num_convolut": [78, 79, 88], "num_cnn_time_slic": [78, 79, 88], "hid_rnn": [78, 79, 88], "hid_skip": [78, 79, 88], "hw_window": [78, 79], "hw_combin": [78, 79], "plu": [78, 79], "lstnetwork": [78, 79, 88], "architectur": [78, 85], "special": [78, 88, 123], "interpret": [78, 112, 117], "pertain": 78, "inputdimpertimeslic": [78, 79], "ck": [78, 79], "hidc": [78, 79], "highwai": [78, 79], "bilinear": [78, 79], "major": [78, 79, 114, 121, 124], "x_data": 78, "y_data": 78, "get_input_output_pair": 78, "long": [79, 88, 93, 95, 96, 98], "propos": 79, "lai": 79, "et": [79, 85], "al": [79, 85], "numinputtimeslic": 79, "numcnntimeslic": 79, "numconvolut": 79, "gru": [79, 88], "hidrnn": 79, "hidskip": 79, "dens": 79, "hwwindow": 79, "made": [79, 87, 88, 117, 122], "batchsiz": [79, 90], "numoutputtimeslic": 79, "outputdimpertimeslic": 79, "numclass": 79, "crossentropyloss": [79, 90], "num_output_time_slic": 79, "output_dim_per_time_slic": 79, "suit": 79, "latent": [79, 87, 88], "prior": [79, 90, 122], "docstr": [79, 109], "compute_encoder_dim": 79, "get_encoder_dim": 79, "mlp_model": 80, "mlp_modul": 80, "multilayerperceptrontorchmodel": 81, "output_activation_funct": 81, "multilayerperceptronvectorregressionmodel": 81, "neuron": 81, "nnoptimiserdictparam": 81, "residualffn_model": 83, "residualffn_modul": 83, "residualfeedforwardnetworktorchmodel": 84, "bottleneck_dimension_factor": [84, 85], "use_batch_normalis": [84, 85], "residualfeedforwardnetworkvectorregressionmodel": 84, "residualfeedforwardnetwork": 85, "feed": 85, "consist": [85, 88], "residu": 85, "block": [85, 99, 109], "inspir": 85, "resnet": 85, "noth": [85, 97, 105], "reduc": [85, 118], "bottleneck": 85, "compromis": 85, "deactiv": 85, "covari": 85, "behind": 85, "wikipedia": 85, "articl": 85, "3d": 85, "chen": 85, "dongwei": 85, "nonlinear": 85, "entropi": 85, "februari": 85, "2020": 85, "doi": 85, "3390": 85, "e22020193": 85, "kiprijanovska": 85, "houseec": 85, "dai": [85, 119], "ahead": 85, "household": 85, "electr": 85, "energi": 85, "consumpt": 85, "forecast": 85, "januari": 85, "2672": 85, "en13102672": 85, "he": 85, "kaim": 85, "xiangyu": 85, "zhang": 85, "shaoq": 85, "ren": 85, "jian": 85, "sun": 85, "imag": [85, 112], "arxiv": 85, "1512": 85, "03385": 85, "cs": 85, "decemb": 85, "2015": 85, "1603": 85, "05027": 85, "juli": 85, "2016": 85, "ioff": 85, "sergei": 85, "christian": 85, "szegedi": 85, "1502": 85, "03167": 85, "march": 85, "seq_model": 86, "seq_modul": 86, "encoderdecodervectorregressionmodel": 87, "history_sequence_column_nam": 87, "history_sequence_vectoris": 87, "sequencevectoris": [87, 123], "history_sequence_variable_length": 87, "target_sequence_column_nam": 87, "target_sequence_vectoris": 87, "latent_dim": [87, 88], "encoder_factori": 87, "encoderfactori": [87, 88], "decoder_factori": 87, "decoderfactori": [87, 88], "decod": [87, 88, 123], "histori": [87, 88, 112, 123], "history_sequence_vector": 87, "inputtensoris": 87, "encoderdecodermodel": 87, "encoderprotocol": 88, "seq_length": 88, "history_featur": 88, "decoderprotocol": 88, "target_featur": 88, "target_length": 88, "target_seq_length": 88, "target_feature_dim": 88, "predictorprotocol": 88, "create_encod": 88, "create_decod": 88, "predictorfactori": 88, "predictor": 88, "create_predictor": 88, "linearpredictorfactori": 88, "mlppredictorfactori": 88, "rnnencodermodul": 88, "rnn_type": 88, "recurr": 88, "rnntype": 88, "gate": 88, "lstm": 88, "dim_per_item": 88, "rnnencoderfactori": 88, "lstnetworkencod": 88, "lstnetworkencoderfactori": 88, "get_latent_dim": 88, "singletargetdecodermodul": 88, "predictor_factori": 88, "targetsequencedecodermodul": 88, "predictionmod": 88, "single_lat": 88, "outputmod": 88, "single_output": 88, "multi_lat": 88, "latentpassonmod": 88, "concat_input": 88, "no_lat": 88, "init_hidden": 88, "mostli": 88, "ablat": 88, "single_output_mean": 88, "multi_output": 88, "max_seq_length": 88, "targetsequencedecoderfactori": 88, "prediction_mod": 88, "latent_pass_on_mod": 88, "p_recurrent_dropout": 88, "singletargetdecoderfactori": 88, "encoderdecodermodul": 88, "dedic": 88, "variable_history_length": 88, "window_featur": 88, "window_length": 88, "dim_per_window_item": 88, "window": [88, 98, 114], "max_target_seq_length": 88, "backward": [89, 105], "asgd": 90, "adagrad": 90, "adadelta": 90, "adamax": 90, "rmsprop": 90, "rprop": 90, "from_name_or_inst": 90, "name_or_inst": 90, "start_epoch": 90, "reset": [90, 109], "getepochtrainloss": 90, "getvalidationmetr": 90, "compute_train_batch_loss": 90, "ground_truth": 90, "meth": 90, "get_epoch_train_loss": 90, "computetrainbatchloss": 90, "process_validation_batch": 90, "velid": 90, "get_validation_metr": 90, "start_evalu": 90, "get_validation_metric_nam": 90, "nnlossevaluatorfixeddim": 90, "criterion": 90, "validation_loss_evalu": 90, "validationlossevalu": 90, "output_dim_weight": 90, "get_training_criterion": 90, "mseloss": 90, "get_output_dim_weight": 90, "create_validation_loss_evalu": 90, "endvalidationcollect": 90, "start_validation_collect": 90, "ground_truth_shap": 90, "process_validation_result_batch": 90, "end_validation_collect": 90, "ordereddict": 90, "nnlossevaluatorregress": 90, "loss_fn": 90, "lossfunct": 90, "l2loss": 90, "validation_tensor_transform": 90, "apply_output_dim_weights_in_valid": 90, "validation_metric_nam": 90, "validationtensortransform": 90, "lossfn": 90, "l1loss": 90, "smoothl1loss": 90, "apply_output_dim_weight": 90, "nnlossevaluatorclassif": 90, "crossentropi": 90, "nll": 90, "negativeloglikelihood": 90, "create_criterion": 90, "get_validation_metric_kei": 90, "default_for_output_mod": 90, "loss_evalu": 90, "train_fract": 90, "use_shrinkag": 90, "shrinkage_clip": 90, "optimiser_arg": 90, "rate": 90, "abort": 90, "shrinkag": 90, "norm": 90, "shrinkageclip": 90, "down": 90, "useshrinkag": 90, "removed_param": 90, "renamed_param": 90, "earlystoppingepoch": 90, "lossevalu": 90, "optimiserclip": 90, "optimiser_clip": 90, "optimiserlr": 90, "scaledoutput": 90, "trainfract": 90, "from_dict": 90, "from_either_dict_or_inst": 90, "nn_optimiser_dict_param": 90, "training_loss_sequ": 90, "validation_metric_sequ": 90, "get_training_loss_seri": 90, "get_validation_metric_seri": 90, "plot_al": 90, "torchtextdatasetfromdatafram": 91, "torchdatasetfromtorchtextdataset": 91, "inputfield": 91, "outputfield": 91, "torchdatasetproviderfromtorchtextdataset": 91, "trackedazuremlevalu": 92, "experiment_nam": [92, 95], "workspac": 92, "azureml": 92, "artifact": 92, "sdk": 92, "additional_logging_values_dict": [92, 93, 95, 96], "start_logging_kwarg": 92, "trackedazuremlexperi": 92, "azur": [92, 99], "clearmltrackingcontext": 93, "clearml": 93, "track_figur": [93, 95, 96], "track_text": [93, 95, 96], "clearmlexperi": 93, "project_nam": 93, "task_nam": 93, "clearml_track": 94, "tracking_bas": 94, "azure_track": 94, "mlflow_track": 94, "mlflowtrackingcontext": 95, "mlflowexperi": 95, "run_id": 95, "track_tag": 95, "tag_nam": 95, "tag_valu": 95, "tracking_uri": 95, "context_prefix": [95, 96], "add_log_to_all_context": 95, "uri": 95, "server": 95, "begin_context": [95, 96], "begin_context_for_model": [95, 96], "end_context": [95, 96], "from_optional_experi": 96, "is_en": [96, 109], "dummytrackingcontext": 96, "dummi": 96, "tcontext": 96, "track_valu": 96, "values_dict": 96, "add_values_dict": 96, "unset_tracked_experi": 96, "begin_optional_tracking_context_for_model": 96, "henc": [96, 122], "paraqm": 96, "forc": 96, "relativefrequencycount": 97, "event": [97, 109], "is_relevant_ev": 97, "nomin": 97, "relative_frequency_count": 97, "counter": 97, "get_relative_frequ": 97, "distributioncount": 97, "mutual": 97, "exclus": [97, 117], "occur": [97, 109], "get_distribut": 97, "weightedmean": 97, "get_weighted_mean": 97, "boxedvalu": 98, "tkei": [98, 101], "inmemorykeyvaluecach": 98, "mycach": 98, "persistentlist": 98, "iter_item": 98, "delayedupdatehook": 98, "time_period_sec": 98, "periodically_executed_fn": 98, "happen": 98, "period": [98, 99], "eventu": 98, "timeperiodsec": 98, "busi": 98, "wait": 98, "loop": 98, "interfer": 98, "correct": 98, "handle_upd": 98, "notifi": 98, "periodicupdatehook": 98, "check_interval_sec": 98, "no_update_time_period_sec": 98, "no_update_fn": 98, "periodic_fn": 98, "atom": 98, "noupdatefn": 98, "checkintervalsec": 98, "noupdatetimeperiodsec": 98, "sure": 98, "picklepersistentkeyvaluecach": 98, "defer": [98, 99], "manner": [98, 99], "deferredsavedelaysec": 98, "arriv": 98, "meantim": 98, "slicedpicklepersistentlist": 98, "pickle_base_nam": 98, "num_entries_per_slic": 98, "100000": 98, "picklebasenam": 98, "_slicex": 98, "clear": 98, "cache_exist": 98, "sqliteconnectionmanag": 98, "open_connect": 98, "sqlitepersistentkeyvaluecach": 98, "table_nam": [98, 99, 100], "deferred_commit_delay_sec": [98, 99, 100], "key_typ": 98, "keytyp": 98, "max_key_length": 98, "sqlite": 98, "databas": 98, "pend": [98, 99], "transact": [98, 99], "commit": [98, 99], "parametris": 98, "varchar": 98, "sqlitepersistentlist": 98, "cache_factori": 98, "box_valu": 98, "tdata": 98, "recreat": 98, "persistcach": 98, "function_nam": [98, 117], "validity_check_fn": 98, "backend": [98, 99, 113], "pickle_cach": 98, "__name__": 98, "cache_base_path": 98, "filename_prefix": [98, 107], "hash": [98, 106], "serialis": [98, 99, 113], "dumppickl": 98, "picklecach": 98, "cloudpickl": 98, "lrucach": 98, "capac": 98, "thashablekei": 98, "storag": 99, "microsoft": 99, "storageservic": 99, "understand": 99, "servic": 99, "deserialis": 99, "numpyarrayjsonserialis": 99, "json": [99, 108, 118], "propertyload": 99, "customis": 99, "loader": 99, "entiti": 99, "load_property_valu": 99, "write_property_valu": 99, "load_property_value_to_data_frame_column": 99, "serialisedpropertyload": 99, "property_nam": 99, "de": 99, "align": 99, "azuretableblobbackend": 99, "get_value_from_refer": 99, "value_identifi": 99, "get_value_refer": 99, "partition_kei": 99, "row_kei": 99, "value_nam": 99, "blob_name_prefix": 99, "set_value_for_refer": 99, "blobperkeyazuretableblobbackend": 99, "block_blob_servic": 99, "blockblobservic": 99, "container_nam": 99, "tablenam": 99, "partitionkei": 99, "rowkei": 99, "valuenam": 99, "fileextens": 99, "file_extens": 99, "textdumpazuretableblobbackend": 99, "txt": 99, "jsonazuretableblobbackend": 99, "pickleazuretableblobbackend": 99, "blobbackedpropertyload": 99, "blob_backend": 99, "blob_prefix": 99, "property_boolean_blob_status_nam": 99, "max_work": 99, "back": 99, "maxim": 99, "worker": 99, "azure_allowed_size_per_property_byt": 99, "64000": 99, "azure_allowed_string_length_per_properti": 99, "32000": 99, "blobbackedserialisedpropertyload": 99, "azurelazybatchcommitt": 99, "table_servic": 99, "tableservic": 99, "property_load": 99, "insert": 99, "lazi": 99, "partit": 99, "lazybatchcommitt": 99, "azure_allowed_table_name_pattern": 99, "compil": 99, "za": 99, "z": 99, "z0": 99, "azure_allowed_table_batch_s": 99, "partitioncommandspriorityqueu": 99, "partitioncommand": 99, "command": 99, "context_manag": 99, "tablebatch": 99, "add_command": 99, "pop": 99, "min_length": 99, "pop_al": 99, "is_empti": 99, "insert_or_replace_ent": 99, "insert_ent": 99, "get_ent": 99, "commit_blocking_until_empti": 99, "max_batch_s": 99, "wise": 99, "commit_non_blocking_current_queue_st": 99, "partitioncommandsqueu": 99, "commit_blocking_largest_partition_from_queu": 99, "minlength": 99, "load_table_to_data_fram": 99, "row_filter_queri": 99, "num_record": 99, "iter_data_frame_chunk": 99, "chunk_siz": 99, "chunk": 99, "iter_record": 99, "insert_data_frame_to_t": 99, "partition_key_gener": 99, "act": 99, "beforehand": 99, "numrecord": 99, "mere": 99, "azuretablepersistentkeyvaluecach": 99, "min_size_for_periodic_commit": 99, "in_memori": [99, 100], "gb": 99, "cosmosdb": 99, "resourc": 99, "thread": 99, "cache_valu": 99, "cache_value_identifi": 99, "mysqlpersistentkeyvaluecach": 100, "host": 100, "db": 100, "pw": 100, "value_typ": 100, "valuetyp": 100, "doubl": 100, "trival": 101, "from_bool": 101, "is_tru": 101, "is_fals": 101, "mayb": 101, "deferredparam": 101, "__undefined__deferredparam": 101, "keyerror": 101, "get_dict": 101, "sortedvalu": 101, "sorted_valu": 101, "bisect": 101, "floor_index": [101, 116], "rightmost": [101, 116], "ceil_index": [101, 116], "leftmost": [101, 116], "greater": [101, 116], "closest_index": [101, 116], "floor_valu": [101, 116], "ceil_valu": [101, 116], "closest_valu": [101, 116], "value_slic": 101, "lowest_kei": 101, "highest_kei": 101, "sortedkeyvaluestructur": 101, "floor_key_and_valu": 101, "ceil_key_and_valu": 101, "closest_key_and_valu": 101, "interpolated_valu": 101, "interpol": [101, 112, 114], "arithmet": 101, "floor": [101, 116], "ceil": 101, "lower_bound_kei": [101, 116], "upper_bound_kei": [101, 116], "tsortedkeyvaluestructur": 101, "sortedkeysandvalu": 101, "from_seri": 101, "value_slice_inn": [101, 116], "value_slice_out": [101, 116], "fallback": [101, 109, 116], "sortedkeyvaluepair": 101, "sorted_key_value_pair": 101, "from_unsorted_key_value_pair": 101, "unsorted_key_value_pair": 101, "value_for_index": 101, "key_for_index": 101, "messag": [102, 109, 113, 117, 123], "mark": [102, 105], "to_float_arrai": 103, "dict_to_ordered_tupl": 103, "pickle_hash": 104, "sha1": 104, "with_class_nam": 104, "determinist": 104, "hashlib": 104, "str_hash": 104, "count_non": 105, "count_not_non": 105, "any_non": 105, "all_non": 105, "check_not_nan_dict": 105, "contains_ani": 105, "mark_us": 105, "flatten_argu": 105, "t2": 105, "safe": [105, 113], "awar": 105, "kwarg_if_not_non": 105, "arg_nam": 105, "arg_valu": 105, "weren": 105, "datastruct": 106, "helper": [106, 113], "cache_azur": 106, "multiprocess": 106, "profil": 106, "cache_mysql": 106, "jscode": 106, "result_dir": 107, "close_figur": 107, "close": [107, 116, 117], "child_with_added_prefix": 107, "child_for_subdirectori": 107, "dir_nam": 107, "filename_suffix": 107, "extension_to_add": 107, "valid_other_extens": 107, "extenion": 107, "valid_extens": 107, "extensiontoadd": 107, "write_text_fil": 107, "write_text_file_lin": 107, "write_data_frame_text_fil": 107, "write_data_frame_csv_fil": 107, "header": 107, "png": 107, "jpg": 107, "write_pickl": 107, "obj": [107, 113, 117, 118], "trail": [107, 108], "newlin": 107, "read_text_file_lin": 107, "skip_empti": 107, "whitespac": 107, "charact": [107, 117], "is_s3_path": 107, "s3object": 107, "outputfil": 107, "s3_object": 107, "get_file_cont": 107, "open_fil": 107, "create_path": 107, "path_elem": 107, "is_dir": 107, "make_dir": 107, "create_file_path": 107, "create_dir_path": 107, "javascript": 108, "get_js_cod": 108, "jscodeliter": 108, "js_code": 108, "jsvalu": 108, "from_python": 108, "from_valu": [108, 123], "is_undefin": 108, "string_valu": 108, "int_valu": 108, "float_valu": 108, "bool_valu": 108, "null": 108, "jsvalueliter": 108, "js_valu": 108, "js_arg_list": 108, "drop_trailing_undefin": 108, "jsobject": 108, "add_str": 108, "add_code_liter": 108, "add_float": 108, "add_json": 108, "jsclassinst": 108, "class_nam": 108, "jslist": 108, "remove_log_handl": 109, "is_log_handler_act": 109, "set_configure_callback": 109, "callback": 109, "func": [109, 115], "run_main": 109, "run_cli": 109, "levelnam": 109, "5s": 109, "asctim": 109, "funcnam": 109, "lineno": 109, "stdout": [109, 117], "overli": 109, "verbos": [109, 123], "main_fn": 109, "cli": 109, "jsonargpars": 109, "pars": 109, "dataclass": 109, "docstring_pars": 109, "datetime_tag": 109, "tag": 109, "register_atexit": 109, "filehandl": 109, "memorystreamhandl": 109, "stream": 109, "stringio": 109, "streamhandl": 109, "stderr": 109, "get_log": 109, "add_memory_logg": 109, "buffer": 109, "stopwatch": 109, "watch": 109, "elaps": 109, "immedi": 109, "restart": 109, "paus": 109, "resum": 109, "get_elapsed_time_sec": 109, "get_elapsed_timedelta": 109, "timedelta": [109, 119], "get_elapsed_time_str": 109, "stopwatchmanag": 109, "secret": 109, "get_inst": 109, "is_run": 109, "logtim": 109, "client": 109, "loggercontext": 109, "thandler": 109, "switch": 109, "fileloggercontext": 109, "memoryloggercontext": 109, "loggingdisabledcontext": 109, "highest_level": 109, "temporarili": 109, "highest": 109, "fallbackhandl": 109, "notset": 109, "emit": 109, "record": 109, "intend": 109, "notimplementederror": 109, "normaldistribut": 110, "unit_max": 110, "min_valu": [110, 114], "max_valu": [110, 114], "x0": 110, "reduce_float_precision_decim": 110, "vectormodelwithseparatefeaturegener": 111, "intermediatefittingstep": 111, "predictfinalis": 111, "fit_start": 111, "predict_start": 111, "fit_end": 111, "dataframecolumnchangetrack": 112, "initial_df": 112, "columnchangetrack": 112, "track_chang": 112, "get_removed_column": 112, "get_added_column": 112, "changed_df": 112, "column_change_str": 112, "assert_change_was_track": 112, "extract_arrai": 112, "channel": [112, 114], "n_column": 112, "rgb": 112, "n_imag": 112, "height": 112, "remove_duplicate_index_entri": 112, "query_data_fram": 112, "seriesinterpol": [112, 114], "interpolate_all_with_combined_index": 112, "series_list": 112, "seriesinterpolationlinearindex": 112, "ffill": 112, "bfill": 112, "seriesinterpolationrepeatpreced": 112, "average_seri": 112, "load_pickl": 113, "dump_pickl": 113, "picklefailuredebugg": 113, "debug_failur": 113, "tri": 113, "fail": [113, 122], "log_failure_if_en": 113, "context_info": 113, "action": 113, "persistableobject": 113, "__getstate__": 113, "crucial": 113, "__setstate__": 113, "refactor": 113, "setstat": 113, "renamed_properti": 113, "new_optional_properti": 113, "new_default_properti": 113, "removed_properti": 113, "unfortun": 113, "getstat": 113, "transient_properti": 113, "excluded_properti": 113, "override_properti": 113, "excluded_default_properti": 113, "transient": 113, "darken": 114, "black": 114, "unchang": 114, "lighten": 114, "white": 114, "opac": 114, "transpar": 114, "opaqu": 114, "to_hex": 114, "keep_alpha": 114, "linearcolormap": 114, "norm_min": 114, "norm_max": 114, "cmap_point": 114, "cmap_points_normalis": 114, "usag": 114, "scalarmapp": 114, "clip": 114, "get_color": 114, "plot_matrix": 114, "xtick_label": 114, "ytick_label": 114, "xlabel": 114, "ylabel": 114, "j": [114, 116], "tick": 114, "caption": 114, "tplot": 114, "xlim": 114, "ylim": 114, "xtick": 114, "minor": [114, 121, 124], "xtick_major": 114, "xtick_minor": 114, "ytick_major": 114, "scatterplot": 114, "c_base": 114, "c_opac": 114, "x_label": 114, "y_label": 114, "add_diagon": 114, "n_max_transpar": 114, "n_min_transpar": 114, "max_opac": 114, "min_opac": 114, "heatmapplot": 114, "common_rang": 114, "diagonal_color": 114, "rng": 114, "quantiti": 114, "default_cmap_factori": 114, "cdf_secondary_axi": 114, "binwidth": 114, "sn": 114, "secondari": 114, "averageserieslineplot": 114, "series_collect": 114, "collection_nam": 114, "hue_ord": 114, "palett": 114, "unif": 114, "shade": 114, "legend": 114, "hue": 114, "sampling_interval_second": 115, "print_to_consol": 115, "log_to_fil": 115, "file_nam": 115, "annot": [115, 120], "pyinstrument": 115, "consol": 115, "concat_sequ": 116, "get_first_dupl": 116, "key_valu": 116, "keyvalu": 116, "fallback_first": 116, "lowerboundkei": 116, "upperboundkei": 116, "fallback_bound": 116, "fallbackbound": 116, "stringconvert": 117, "to_str": 117, "dict_str": 117, "bracket": 117, "enclos": 117, "list_str": 117, "quot": 117, "apply_converter_to_non_complex_object": 117, "infinit": 117, "object_repr": 117, "member_names_or_dict": 117, "or_regex_group": 117, "allowed_nam": 117, "liter": 117, "name1": 117, "namen": 117, "__str__": 117, "__repr__": 117, "qualifi": 117, "privat": 117, "underscor": 117, "_tostring_exclude_priv": 117, "_tostring_exclude_except": 117, "_tostring_exclud": 117, "introduc": 117, "inclus": 117, "_tostring_includ": 117, "aren": 117, "_tostring_additional_entri": 117, "_tostring_object_info": 117, "hierarchi": 117, "superclass": 117, "void": 117, "_tostring_includes_forc": 117, "_tostring_class_nam": 117, "soon": 117, "proxi": 117, "marker": 117, "sub": 117, "stand": 117, "exempt": 117, "_io": 117, "textiowrapp": 117, "utf": 117, "prettili": 117, "pretty_string_repr": 117, "initial_indentation_level": 117, "indentation_str": 117, "reformat": 117, "tagbuild": 117, "initial_compon": 117, "glue": 117, "with_compon": 117, "with_condit": 117, "cond": 117, "condition": 117, "with_altern": 117, "true_compon": 117, "false_compon": 117, "snapshot_compat": 118, "float_decim": 118, "12": 118, "snapshot": 118, "platform": 118, "reduce_float_precis": 118, "convert_float": 118, "json_mapp": 118, "ts_next_month": 119, "ts": 119, "time_of_dai": 119, "timeinterv": 119, "contains_tim": 119, "overlaps_with": 119, "time_delta": 119, "mid_timestamp": 119, "format_dur": 119, "__version__": 121, "is_at_least": 121, "is_at_most": 121, "is_equ": 121, "get_predicted_variable_nam": 122, "tvectormodelbas": 122, "original_input": 122, "original_output": 122, "uniform": 122, "tostring_include_preprocessor": 122, "tvectormodel": 122, "with_input_transform": 122, "input_transform": 122, "perhap": 122, "withfeaturecollector": 122, "withfeaturegener": 122, "compute_model_output": 122, "is_being_fit": 122, "get_model_input_variable_nam": 122, "get_input_transform": 122, "get_feature_transform": 122, "get_raw_input_transform": 122, "get_input_transformer_chain": 122, "get_raw_input_transformer_chain": 122, "get_feature_transformer_chain": 122, "set_feature_gener": 122, "with_output_transform": 122, "tvectorregressionmodel": 122, "Not": 122, "contrari": 122, "invert": 122, "invok": 122, "fittabl": 122, "heurist": 122, "craft": 122, "meant": 122, "someth": 122, "targettransform": 122, "give": 122, "with_target_transform": 122, "target_transform": 122, "untransform": 122, "get_target_transform": 122, "get_output_transformer_chain": 122, "get_model_output_variable_nam": 122, "alon": 122, "getpredictedvariablenam": 122, "get_predicted_var_nam": 122, "specified_var_nam": 122, "predictedlabel": 122, "1d": 123, "apply_multi": 123, "use_cach": 123, "significantli": 123, "repeatedli": 123, "resulttyp": 123, "numpy_arrai": 123, "emptyvectoris": 123, "itemidentifierprovid": 123, "get_identifi": 123, "fitting_mod": 123, "fittingmod": 123, "unique_id_provid": 123, "refit_vectoris": 123, "consider": 123, "overlap": 123, "unique_id_retriev": 123, "partli": 123, "vl": 123, "apply_multi_with_pad": 123, "shorter": 123, "unpad": 123, "get_vector_dim": 123, "vectoriserregistri": 123, "get_available_vectoris": 123, "additional_nam": 123, "get_vectoris": 123, "is_xgboost_version_at_least": 124, "xgbgradientboostedvectorregressionmodel": 124, "early_stopping_round": 124, "early_stopping_data_splitt": 124, "python_api": 124, "xgbregressor": 124, "xgbrandomforestvectorregressionmodel": 124, "xgbrfregressor": 124, "xgbrandomforestvectorclassificationmodel": 124, "xgbrfclassifi": 124}, "objects": {"sensai": [[5, 0, 0, "-", "catboost"], [10, 0, 0, "-", "columngen"], [18, 0, 0, "-", "distance_metric"], [34, 0, 0, "-", "feature_importance"], [51, 0, 0, "-", "hyperopt"], [53, 0, 0, "-", "lightgbm"], [54, 0, 0, "-", "local_search"], [55, 0, 0, "-", "minizinc"], [56, 0, 0, "-", "multi_model"], [57, 0, 0, "-", "naive_bayes"], [58, 0, 0, "-", "nearest_neighbors"], [59, 0, 0, "-", "normalisation"], [66, 0, 0, "-", "sklearn_quantile"], [67, 0, 0, "-", "tensor_model"], [122, 0, 0, "-", "vector_model"], [123, 0, 0, "-", "vectoriser"], [124, 0, 0, "-", "xgboost"]], "sensai.catboost": [[5, 1, 1, "", "CatBoostVectorClassificationModel"], [5, 1, 1, "", "CatBoostVectorRegressionModel"]], "sensai.catboost.CatBoostVectorClassificationModel": [[5, 2, 1, "", "is_sample_weight_supported"], [5, 3, 1, "", "log"]], "sensai.catboost.CatBoostVectorRegressionModel": [[5, 2, 1, "", "is_sample_weight_supported"], [5, 3, 1, "", "log"]], "sensai.clustering": [[6, 0, 0, "-", "clustering_base"], [7, 0, 0, "-", "greedy_clustering"], [9, 0, 0, "-", "sklearn_clustering"]], "sensai.clustering.clustering_base": [[6, 1, 1, "", "EuclideanClusterer"]], "sensai.clustering.clustering_base.EuclideanClusterer": [[6, 1, 1, "", "Cluster"], [6, 4, 1, "", "cluster_identifiers"], [6, 2, 1, "", "clusters"], [6, 4, 1, "", "datapoints"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "get_cluster"], [6, 4, 1, "", "is_fitted"], [6, 4, 1, "", "labels"], [6, 2, 1, "", "noise_cluster"], [6, 4, 1, "", "num_clusters"], [6, 2, 1, "", "summary_df"]], "sensai.clustering.clustering_base.EuclideanClusterer.Cluster": [[6, 2, 1, "", "centroid"], [6, 2, 1, "", "radius"], [6, 2, 1, "", "summary_dict"]], "sensai.clustering.greedy_clustering": [[7, 1, 1, "", "GreedyAgglomerativeClustering"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering": [[7, 1, 1, "", "Cluster"], [7, 1, 1, "", "ClusterMerge"], [7, 1, 1, "", "MergeCandidateDeterminationStrategy"], [7, 1, 1, "", "MergeCandidateDeterminationStrategyDefault"], [7, 1, 1, "", "WrappedCluster"], [7, 2, 1, "", "apply_clustering"], [7, 3, 1, "", "log"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.Cluster": [[7, 2, 1, "", "merge"], [7, 2, 1, "", "merge_cost"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.ClusterMerge": [[7, 2, 1, "", "apply"], [7, 3, 1, "", "log"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.MergeCandidateDeterminationStrategy": [[7, 2, 1, "", "iter_candidate_indices"], [7, 2, 1, "", "set_clusterer"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.MergeCandidateDeterminationStrategyDefault": [[7, 2, 1, "", "iter_candidate_indices"]], "sensai.clustering.greedy_clustering.GreedyAgglomerativeClustering.WrappedCluster": [[7, 2, 1, "", "compute_merges"], [7, 2, 1, "", "get_cluster_association"], [7, 2, 1, "", "is_merged"], [7, 2, 1, "", "remove_merges"]], "sensai.clustering.sklearn_clustering": [[9, 1, 1, "", "SkLearnClustererProtocol"], [9, 1, 1, "", "SkLearnEuclideanClusterer"]], "sensai.clustering.sklearn_clustering.SkLearnClustererProtocol": [[9, 2, 1, "", "fit"], [9, 3, 1, "", "labels_"]], "sensai.columngen": [[10, 1, 1, "", "ColumnGenerator"], [10, 1, 1, "", "ColumnGeneratorCachedByIndex"], [10, 1, 1, "", "IndexCachedColumnGenerator"]], "sensai.columngen.ColumnGenerator": [[10, 2, 1, "", "generate_column"], [10, 2, 1, "", "to_feature_generator"]], "sensai.columngen.ColumnGeneratorCachedByIndex": [[10, 3, 1, "", "log"]], "sensai.columngen.IndexCachedColumnGenerator": [[10, 3, 1, "", "log"]], "sensai.data": [[11, 0, 0, "-", "dataset"], [13, 0, 0, "-", "io_data"]], "sensai.data.dataset": [[11, 1, 1, "", "DataSet"], [11, 1, 1, "", "DataSetClassificationIris"], [11, 1, 1, "", "DataSetClassificationTitanicSurvival"]], "sensai.data.dataset.DataSet": [[11, 2, 1, "", "load_io_data"]], "sensai.data.dataset.DataSetClassificationIris": [[11, 2, 1, "", "load_io_data"]], "sensai.data.dataset.DataSetClassificationTitanicSurvival": [[11, 3, 1, "", "COLS_METADATA"], [11, 3, 1, "", "COL_AGE_YEARS"], [11, 3, 1, "", "COL_CABIN"], [11, 3, 1, "", "COL_FARE_PRICE"], [11, 3, 1, "", "COL_INDEX"], [11, 3, 1, "", "COL_NAME"], [11, 3, 1, "", "COL_PARENTS_CHILDREN"], [11, 3, 1, "", "COL_PASSENGER_CLASS"], [11, 3, 1, "", "COL_PORT_EMBARKED"], [11, 3, 1, "", "COL_SEX"], [11, 3, 1, "", "COL_SIBLINGS_SPOUSES"], [11, 3, 1, "", "COL_SURVIVAL"], [11, 3, 1, "", "COL_TICKET"], [11, 3, 1, "", "URL"], [11, 2, 1, "", "load_io_data"]], "sensai.data.io_data": [[13, 1, 1, "", "BaseInputOutputData"], [13, 1, 1, "", "DataFrameSplitter"], [13, 1, 1, "", "DataFrameSplitterColumnEquivalenceClass"], [13, 1, 1, "", "DataFrameSplitterFractional"], [13, 1, 1, "", "DataPointWeighting"], [13, 1, 1, "", "DataPointWeightingRegressionTargetIntervalTotalWeight"], [13, 1, 1, "", "DataSplitter"], [13, 1, 1, "", "DataSplitterFractional"], [13, 1, 1, "", "DataSplitterFromDataFrameSplitter"], [13, 1, 1, "", "DataSplitterFromSkLearnSplitter"], [13, 1, 1, "", "DataSplitterStratifiedShuffleSplit"], [13, 1, 1, "", "InputOutputArrays"], [13, 1, 1, "", "InputOutputData"]], "sensai.data.io_data.BaseInputOutputData": [[13, 2, 1, "", "filter_indices"]], "sensai.data.io_data.DataFrameSplitter": [[13, 2, 1, "", "compute_split_indices"], [13, 2, 1, "", "split"], [13, 2, 1, "", "split_with_indices"]], "sensai.data.io_data.DataFrameSplitterColumnEquivalenceClass": [[13, 2, 1, "", "compute_split_indices"]], "sensai.data.io_data.DataFrameSplitterFractional": [[13, 2, 1, "", "compute_split_indices"]], "sensai.data.io_data.DataPointWeighting": [[13, 2, 1, "", "compute_weights"]], "sensai.data.io_data.DataPointWeightingRegressionTargetIntervalTotalWeight": [[13, 1, 1, "", "Interval"], [13, 2, 1, "", "compute_weights"]], "sensai.data.io_data.DataPointWeightingRegressionTargetIntervalTotalWeight.Interval": [[13, 2, 1, "", "contains"]], "sensai.data.io_data.DataSplitter": [[13, 2, 1, "", "split"]], "sensai.data.io_data.DataSplitterFractional": [[13, 2, 1, "", "split"], [13, 2, 1, "", "split_with_indices"]], "sensai.data.io_data.DataSplitterFromDataFrameSplitter": [[13, 2, 1, "", "split"]], "sensai.data.io_data.DataSplitterFromSkLearnSplitter": [[13, 2, 1, "", "split"]], "sensai.data.io_data.DataSplitterStratifiedShuffleSplit": [[13, 2, 1, "", "is_applicable"]], "sensai.data.io_data.InputOutputArrays": [[13, 2, 1, "", "filter_indices"], [13, 2, 1, "", "to_torch_data_loader"]], "sensai.data.io_data.InputOutputData": [[13, 2, 1, "", "apply_weighting"], [13, 2, 1, "", "compute_input_output_correlation"], [13, 2, 1, "", "filter_index"], [13, 2, 1, "", "filter_indices"], [13, 2, 1, "", "from_data_frame"], [13, 4, 1, "", "input_dim"], [13, 4, 1, "", "output_dim"], [13, 2, 1, "", "to_data_frame"], [13, 2, 1, "", "to_df"]], "sensai.data_transformation": [[14, 0, 0, "-", "dft"], [16, 0, 0, "-", "sklearn_transformer"], [17, 0, 0, "-", "value_transformation"]], "sensai.data_transformation.dft": [[14, 1, 1, "", "DFTAggregationOnColumn"], [14, 1, 1, "", "DFTCastCategoricalColumns"], [14, 1, 1, "", "DFTColumnFilter"], [14, 1, 1, "", "DFTConditionalRowFilterOnColumn"], [14, 1, 1, "", "DFTCountEntries"], [14, 1, 1, "", "DFTDRowFilterOnIndex"], [14, 1, 1, "", "DFTDropNA"], [14, 1, 1, "", "DFTFillNA"], [14, 1, 1, "", "DFTFromColumnGenerators"], [14, 1, 1, "", "DFTFromFeatureGenerator"], [14, 1, 1, "", "DFTInSetComparisonRowFilterOnColumn"], [14, 1, 1, "", "DFTKeepColumns"], [14, 1, 1, "", "DFTModifyColumn"], [14, 1, 1, "", "DFTModifyColumnVectorized"], [14, 1, 1, "", "DFTNormalisation"], [14, 1, 1, "", "DFTNotInSetComparisonRowFilterOnColumn"], [14, 1, 1, "", "DFTOneHotEncoder"], [14, 1, 1, "", "DFTRenameColumns"], [14, 1, 1, "", "DFTRoundFloats"], [14, 1, 1, "", "DFTRowFilter"], [14, 1, 1, "", "DFTSkLearnTransformer"], [14, 1, 1, "", "DFTSortColumns"], [14, 1, 1, "", "DFTVectorizedConditionalRowFilterOnColumn"], [14, 1, 1, "", "DataFrameTransformer"], [14, 1, 1, "", "DataFrameTransformerChain"], [14, 1, 1, "", "InverseDataFrameTransformer"], [14, 1, 1, "", "InvertibleDataFrameTransformer"], [14, 1, 1, "", "RuleBasedDataFrameTransformer"]], "sensai.data_transformation.dft.DFTColumnFilter": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTCountEntries": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTFromColumnGenerators": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTInSetComparisonRowFilterOnColumn": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTNormalisation": [[14, 1, 1, "", "Rule"], [14, 1, 1, "", "RuleTemplate"], [14, 2, 1, "", "find_rule"], [14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTNormalisation.Rule": [[14, 2, 1, "", "matches"], [14, 2, 1, "", "matching_columns"], [14, 2, 1, "", "set_regex"]], "sensai.data_transformation.dft.DFTNormalisation.RuleTemplate": [[14, 2, 1, "", "to_placeholder_rule"], [14, 2, 1, "", "to_rule"]], "sensai.data_transformation.dft.DFTNotInSetComparisonRowFilterOnColumn": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTOneHotEncoder": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTRoundFloats": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTSkLearnTransformer": [[14, 2, 1, "", "apply_inverse"], [14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DFTVectorizedConditionalRowFilterOnColumn": [[14, 2, 1, "", "info"]], "sensai.data_transformation.dft.DataFrameTransformer": [[14, 2, 1, "", "apply"], [14, 2, 1, "", "fit"], [14, 2, 1, "", "fit_apply"], [14, 2, 1, "", "get_name"], [14, 2, 1, "", "info"], [14, 2, 1, "", "is_fitted"], [14, 2, 1, "", "set_name"], [14, 2, 1, "", "to_feature_generator"], [14, 2, 1, "", "with_name"]], "sensai.data_transformation.dft.DataFrameTransformerChain": [[14, 2, 1, "", "append"], [14, 2, 1, "", "find_first_transformer_by_type"], [14, 2, 1, "", "get_names"], [14, 2, 1, "", "info"], [14, 2, 1, "", "is_fitted"]], "sensai.data_transformation.dft.InvertibleDataFrameTransformer": [[14, 2, 1, "", "apply_inverse"], [14, 2, 1, "", "get_inverse"]], "sensai.data_transformation.dft.RuleBasedDataFrameTransformer": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "is_fitted"]], "sensai.data_transformation.sklearn_transformer": [[16, 1, 1, "", "ManualScaler"], [16, 1, 1, "", "SkLearnTransformerFactoryFactory"], [16, 1, 1, "", "SkLearnTransformerProtocol"], [16, 5, 1, "", "to_2d_array"]], "sensai.data_transformation.sklearn_transformer.ManualScaler": [[16, 2, 1, "", "fit"], [16, 2, 1, "", "inverse_transform"], [16, 2, 1, "", "transform"]], "sensai.data_transformation.sklearn_transformer.SkLearnTransformerFactoryFactory": [[16, 2, 1, "", "ManualScaler"], [16, 2, 1, "", "MaxAbsScaler"], [16, 2, 1, "", "MinMaxScaler"], [16, 2, 1, "", "RobustScaler"], [16, 2, 1, "", "StandardScaler"]], "sensai.data_transformation.sklearn_transformer.SkLearnTransformerProtocol": [[16, 2, 1, "", "fit"], [16, 2, 1, "", "inverse_transform"], [16, 2, 1, "", "transform"]], "sensai.data_transformation.value_transformation": [[17, 1, 1, "", "ValueOneHotEncoder"]], "sensai.data_transformation.value_transformation.ValueOneHotEncoder": [[17, 2, 1, "", "fit"], [17, 2, 1, "", "transform"]], "sensai.distance_metric": [[18, 1, 1, "", "CachedDistanceMetric"], [18, 1, 1, "", "DistanceMatrixDFCache"], [18, 1, 1, "", "DistanceMetric"], [18, 1, 1, "", "EuclideanDistanceMetric"], [18, 1, 1, "", "HellingerDistanceMetric"], [18, 1, 1, "", "IdentityDistanceMetric"], [18, 1, 1, "", "LinearCombinationDistanceMetric"], [18, 1, 1, "", "RelativeBitwiseEqualityDistanceMetric"], [18, 1, 1, "", "SingleColumnDistanceMetric"]], "sensai.distance_metric.CachedDistanceMetric": [[18, 2, 1, "", "distance"], [18, 2, 1, "", "fill_cache"]], "sensai.distance_metric.DistanceMatrixDFCache": [[18, 2, 1, "", "get"], [18, 2, 1, "", "get_all_cached"], [18, 2, 1, "", "num_unfilled_entries"], [18, 2, 1, "", "save"], [18, 2, 1, "", "set"], [18, 2, 1, "", "shape"]], "sensai.distance_metric.DistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.distance_metric.IdentityDistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.distance_metric.LinearCombinationDistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.distance_metric.RelativeBitwiseEqualityDistanceMetric": [[18, 2, 1, "", "check_input_value"]], "sensai.distance_metric.SingleColumnDistanceMetric": [[18, 2, 1, "", "distance"]], "sensai.ensemble": [[19, 0, 0, "-", "ensemble_base"], [21, 0, 0, "-", "models"]], "sensai.ensemble.ensemble_base": [[19, 1, 1, "", "EnsembleClassificationVectorModel"], [19, 1, 1, "", "EnsembleRegressionVectorModel"], [19, 1, 1, "", "EnsembleVectorModel"]], "sensai.ensemble.ensemble_base.EnsembleClassificationVectorModel": [[19, 2, 1, "", "is_regression_model"]], "sensai.ensemble.ensemble_base.EnsembleRegressionVectorModel": [[19, 2, 1, "", "is_regression_model"]], "sensai.ensemble.ensemble_base.EnsembleVectorModel": [[19, 2, 1, "", "aggregate_predictions"], [19, 2, 1, "", "compute_all_predictions"]], "sensai.ensemble.models": [[21, 1, 1, "", "AveragingVectorRegressionModel"]], "sensai.ensemble.models.AveragingVectorRegressionModel": [[21, 2, 1, "", "aggregate_predictions"]], "sensai.evaluation": [[22, 0, 0, "-", "crossval"], [28, 0, 0, "-", "eval_util"], [29, 0, 0, "-", "evaluator"], [30, 0, 0, "-", "evaluator_clustering"], [32, 0, 0, "-", "metric_computation"], [33, 0, 0, "-", "result_set"]], "sensai.evaluation.crossval": [[22, 1, 1, "", "CrossValidationSplitter"], [22, 1, 1, "", "CrossValidationSplitterDefault"], [22, 1, 1, "", "CrossValidationSplitterNested"], [22, 1, 1, "", "VectorClassificationModelCrossValidationData"], [22, 1, 1, "", "VectorClassificationModelCrossValidator"], [22, 1, 1, "", "VectorModelCrossValidationData"], [22, 1, 1, "", "VectorModelCrossValidator"], [22, 1, 1, "", "VectorModelCrossValidatorParams"], [22, 1, 1, "", "VectorRegressionModelCrossValidationData"], [22, 1, 1, "", "VectorRegressionModelCrossValidator"]], "sensai.evaluation.crossval.CrossValidationSplitter": [[22, 2, 1, "", "create_folds"]], "sensai.evaluation.crossval.CrossValidationSplitterDefault": [[22, 2, 1, "", "create_folds"]], "sensai.evaluation.crossval.CrossValidationSplitterNested": [[22, 2, 1, "", "create_folds"]], "sensai.evaluation.crossval.VectorModelCrossValidationData": [[22, 2, 1, "", "get_eval_stats_collection"], [22, 2, 1, "", "iter_input_output_ground_truth_tuples"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "track_metrics"]], "sensai.evaluation.crossval.VectorModelCrossValidator": [[22, 2, 1, "", "create_metrics_dict_provider"], [22, 2, 1, "", "eval_model"], [22, 2, 1, "", "for_model"]], "sensai.evaluation.eval_stats": [[23, 0, 0, "-", "eval_stats_base"], [24, 0, 0, "-", "eval_stats_classification"], [25, 0, 0, "-", "eval_stats_clustering"], [26, 0, 0, "-", "eval_stats_regression"]], "sensai.evaluation.eval_stats.eval_stats_base": [[23, 1, 1, "", "EvalStats"], [23, 1, 1, "", "EvalStatsCollection"], [23, 1, 1, "", "EvalStatsPlot"], [23, 1, 1, "", "Metric"], [23, 1, 1, "", "PredictionEvalStats"], [23, 5, 1, "", "mean_stats"]], "sensai.evaluation.eval_stats.eval_stats_base.EvalStats": [[23, 2, 1, "", "add_metric"], [23, 2, 1, "", "compute_metric_value"], [23, 2, 1, "", "get_all"], [23, 2, 1, "", "metrics_dict"], [23, 2, 1, "", "set_name"]], "sensai.evaluation.eval_stats.eval_stats_base.EvalStatsCollection": [[23, 2, 1, "", "agg_metrics_dict"], [23, 2, 1, "", "get_combined_eval_stats"], [23, 2, 1, "", "get_global_stats"], [23, 2, 1, "", "get_metric_by_name"], [23, 2, 1, "", "get_metric_names"], [23, 2, 1, "", "get_metrics"], [23, 2, 1, "", "get_values"], [23, 2, 1, "", "has_metric"], [23, 2, 1, "", "mean_metrics_dict"], [23, 2, 1, "", "plot_distribution"], [23, 2, 1, "", "plot_heat_map"], [23, 2, 1, "", "plot_scatter"], [23, 2, 1, "", "to_data_frame"]], "sensai.evaluation.eval_stats.eval_stats_base.EvalStatsPlot": [[23, 2, 1, "", "create_figure"], [23, 2, 1, "", "is_applicable"]], "sensai.evaluation.eval_stats.eval_stats_base.Metric": [[23, 2, 1, "", "compute_value_for_eval_stats"], [23, 2, 1, "", "get_paired_metrics"], [23, 2, 1, "", "has_finite_bounds"], [23, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_base.PredictionEvalStats": [[23, 2, 1, "", "add"], [23, 2, 1, "", "add_all"]], "sensai.evaluation.eval_stats.eval_stats_classification": [[24, 1, 1, "", "BinaryClassificationCounts"], [24, 1, 1, "", "BinaryClassificationMetric"], [24, 1, 1, "", "BinaryClassificationMetricF1Score"], [24, 1, 1, "", "BinaryClassificationMetricPrecision"], [24, 1, 1, "", "BinaryClassificationMetricPrecisionThreshold"], [24, 1, 1, "", "BinaryClassificationMetricRecall"], [24, 1, 1, "", "BinaryClassificationMetricRecallForPrecision"], [24, 1, 1, "", "BinaryClassificationMetricRecallThreshold"], [24, 1, 1, "", "BinaryClassificationProbabilityThresholdVariationData"], [24, 1, 1, "", "ClassificationEvalStats"], [24, 1, 1, "", "ClassificationEvalStatsCollection"], [24, 1, 1, "", "ClassificationEvalStatsPlot"], [24, 1, 1, "", "ClassificationEvalStatsPlotConfusionMatrix"], [24, 1, 1, "", "ClassificationEvalStatsPlotPrecisionRecall"], [24, 1, 1, "", "ClassificationEvalStatsPlotProbabilityThresholdCounts"], [24, 1, 1, "", "ClassificationEvalStatsPlotProbabilityThresholdPrecisionRecall"], [24, 1, 1, "", "ClassificationMetric"], [24, 1, 1, "", "ClassificationMetricAccuracy"], [24, 1, 1, "", "ClassificationMetricAccuracyMaxProbabilityBeyondThreshold"], [24, 1, 1, "", "ClassificationMetricAccuracyWithoutLabels"], [24, 1, 1, "", "ClassificationMetricBalancedAccuracy"], [24, 1, 1, "", "ClassificationMetricGeometricMeanOfTrueClassProbability"], [24, 1, 1, "", "ClassificationMetricRelFreqMaxProbabilityBeyondThreshold"], [24, 1, 1, "", "ClassificationMetricTopNAccuracy"], [24, 1, 1, "", "ConfusionMatrix"], [24, 5, 1, "", "create_default_binary_classification_metrics"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationCounts": [[24, 2, 1, "", "from_eval_stats"], [24, 2, 1, "", "from_probability_threshold"], [24, 2, 1, "", "get_f1"], [24, 2, 1, "", "get_precision"], [24, 2, 1, "", "get_recall"], [24, 2, 1, "", "get_rel_freq_positive"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetric": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricF1Score": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricPrecision": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricPrecisionThreshold": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricRecall": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricRecallForPrecision": [[24, 2, 1, "", "compute_value_for_eval_stats"], [24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationMetricRecallThreshold": [[24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.BinaryClassificationProbabilityThresholdVariationData": [[24, 2, 1, "", "plot_counts"], [24, 2, 1, "", "plot_precision_recall"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStats": [[24, 2, 1, "", "get_accuracy"], [24, 2, 1, "", "get_binary_classification_probability_threshold_variation_data"], [24, 2, 1, "", "get_confusion_matrix"], [24, 2, 1, "", "get_misclassified_indices"], [24, 2, 1, "", "metrics_dict"], [24, 2, 1, "", "plot_confusion_matrix"], [24, 2, 1, "", "plot_precision_recall_curve"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsCollection": [[24, 2, 1, "", "get_combined_eval_stats"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotConfusionMatrix": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotPrecisionRecall": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotProbabilityThresholdCounts": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationEvalStatsPlotProbabilityThresholdPrecisionRecall": [[24, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetric": [[24, 2, 1, "", "compute_value"], [24, 2, 1, "", "compute_value_for_eval_stats"], [24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricAccuracy": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricAccuracyMaxProbabilityBeyondThreshold": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricAccuracyWithoutLabels": [[24, 2, 1, "", "get_paired_metrics"], [24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricBalancedAccuracy": [[24, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricGeometricMeanOfTrueClassProbability": [[24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricRelFreqMaxProbabilityBeyondThreshold": [[24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ClassificationMetricTopNAccuracy": [[24, 3, 1, "", "name"], [24, 3, 1, "", "requires_probabilities"]], "sensai.evaluation.eval_stats.eval_stats_classification.ConfusionMatrix": [[24, 2, 1, "", "plot"]], "sensai.evaluation.eval_stats.eval_stats_clustering": [[25, 1, 1, "", "AdjustedMutualInfoScore"], [25, 1, 1, "", "AdjustedRandScore"], [25, 1, 1, "", "CalinskiHarabaszScore"], [25, 1, 1, "", "ClusterLabelsEvalStats"], [25, 1, 1, "", "ClusteringSupervisedEvalStats"], [25, 1, 1, "", "ClusteringSupervisedMetric"], [25, 1, 1, "", "ClusteringUnsupervisedEvalStats"], [25, 1, 1, "", "ClusteringUnsupervisedMetric"], [25, 1, 1, "", "DaviesBouldinScore"], [25, 1, 1, "", "FowlkesMallowsScore"], [25, 1, 1, "", "RemovedCommonNoiseSupervisedMetric"], [25, 1, 1, "", "RemovedNoiseUnsupervisedMetric"], [25, 1, 1, "", "SilhouetteScore"], [25, 1, 1, "", "VMeasureScore"]], "sensai.evaluation.eval_stats.eval_stats_clustering.AdjustedMutualInfoScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.AdjustedRandScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.CalinskiHarabaszScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusterLabelsEvalStats": [[25, 3, 1, "", "AV_SIZE"], [25, 3, 1, "", "MAX_SIZE"], [25, 3, 1, "", "MEDIAN_SIZE"], [25, 3, 1, "", "MIN_SIZE"], [25, 3, 1, "", "NOISE_SIZE"], [25, 3, 1, "", "NUM_CLUSTERS"], [25, 3, 1, "", "STDDEV_SIZE"], [25, 2, 1, "", "get_distribution_summary"], [25, 2, 1, "", "metrics_dict"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusteringSupervisedEvalStats": [[25, 3, 1, "", "clusterLabelsMask"], [25, 2, 1, "", "from_model"], [25, 2, 1, "", "labels_with_removed_common_noise"], [25, 3, 1, "", "noiseLabelsMask"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusteringSupervisedMetric": [[25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusteringUnsupervisedEvalStats": [[25, 3, 1, "", "clusterLabelsMask"], [25, 2, 1, "", "from_model"], [25, 3, 1, "", "noiseLabelsMask"]], "sensai.evaluation.eval_stats.eval_stats_clustering.ClusteringUnsupervisedMetric": [[25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.DaviesBouldinScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.FowlkesMallowsScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_clustering.RemovedCommonNoiseSupervisedMetric": [[25, 2, 1, "", "compute_value"], [25, 2, 1, "", "compute_value_for_eval_stats"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.RemovedNoiseUnsupervisedMetric": [[25, 2, 1, "", "compute_value"], [25, 2, 1, "", "compute_value_for_eval_stats"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.SilhouetteScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"], [25, 3, 1, "", "worstValue"]], "sensai.evaluation.eval_stats.eval_stats_clustering.VMeasureScore": [[25, 2, 1, "", "compute_value"], [25, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression": [[26, 1, 1, "", "HeatMapColorMapFactory"], [26, 1, 1, "", "HeatMapColorMapFactoryWhiteToRed"], [26, 1, 1, "", "RegressionEvalStats"], [26, 1, 1, "", "RegressionEvalStatsCollection"], [26, 1, 1, "", "RegressionEvalStatsPlot"], [26, 1, 1, "", "RegressionEvalStatsPlotErrorDistribution"], [26, 1, 1, "", "RegressionEvalStatsPlotHeatmapGroundTruthPredictions"], [26, 1, 1, "", "RegressionEvalStatsPlotScatterGroundTruthPredictions"], [26, 1, 1, "", "RegressionMetric"], [26, 1, 1, "", "RegressionMetricFromBinaryClassificationMetric"], [26, 1, 1, "", "RegressionMetricMAE"], [26, 1, 1, "", "RegressionMetricMSE"], [26, 1, 1, "", "RegressionMetricMedianAE"], [26, 1, 1, "", "RegressionMetricPCC"], [26, 1, 1, "", "RegressionMetricR2"], [26, 1, 1, "", "RegressionMetricRMSE"], [26, 1, 1, "", "RegressionMetricRRSE"], [26, 1, 1, "", "RegressionMetricStdDevAE"]], "sensai.evaluation.eval_stats.eval_stats_regression.HeatMapColorMapFactory": [[26, 2, 1, "", "create_color_map"]], "sensai.evaluation.eval_stats.eval_stats_regression.HeatMapColorMapFactoryWhiteToRed": [[26, 2, 1, "", "create_color_map"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStats": [[26, 3, 1, "", "HEATMAP_COLORMAP_FACTORY"], [26, 3, 1, "", "HEATMAP_DIAGONAL_COLOR"], [26, 3, 1, "", "HEATMAP_ERROR_BOUNDARY_COLOR"], [26, 3, 1, "", "HEATMAP_ERROR_BOUNDARY_VALUE"], [26, 3, 1, "", "SCATTER_PLOT_POINT_COLOR"], [26, 2, 1, "", "compute_mae"], [26, 2, 1, "", "compute_metric_value"], [26, 2, 1, "", "compute_mse"], [26, 2, 1, "", "compute_pcc"], [26, 2, 1, "", "compute_r2"], [26, 2, 1, "", "compute_rmse"], [26, 2, 1, "", "compute_rrse"], [26, 2, 1, "", "compute_std_dev_ae"], [26, 2, 1, "", "create_eval_stats_collection"], [26, 2, 1, "", "plot_error_distribution"], [26, 2, 1, "", "plot_heatmap_ground_truth_predictions"], [26, 2, 1, "", "plot_scatter_ground_truth_predictions"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsCollection": [[26, 2, 1, "", "get_combined_eval_stats"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsPlotErrorDistribution": [[26, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsPlotHeatmapGroundTruthPredictions": [[26, 2, 1, "", "create_figure"], [26, 2, 1, "", "is_applicable"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionEvalStatsPlotScatterGroundTruthPredictions": [[26, 2, 1, "", "create_figure"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetric": [[26, 2, 1, "", "compute_abs_errors"], [26, 2, 1, "", "compute_errors"], [26, 2, 1, "", "compute_value"], [26, 2, 1, "", "compute_value_for_eval_stats"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricFromBinaryClassificationMetric": [[26, 1, 1, "", "ClassGenerator"], [26, 1, 1, "", "ClassGeneratorPositiveBeyond"], [26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricFromBinaryClassificationMetric.ClassGenerator": [[26, 2, 1, "", "compute_class"], [26, 2, 1, "", "get_metric_qualifier"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricFromBinaryClassificationMetric.ClassGeneratorPositiveBeyond": [[26, 2, 1, "", "compute_class"], [26, 2, 1, "", "get_metric_qualifier"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricMAE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricMSE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricMedianAE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricPCC": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricR2": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricRMSE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricRRSE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_stats.eval_stats_regression.RegressionMetricStdDevAE": [[26, 2, 1, "", "compute_value"], [26, 3, 1, "", "name"]], "sensai.evaluation.eval_util": [[28, 1, 1, "", "ClassificationEvalStatsPlotCollector"], [28, 1, 1, "", "ClassificationModelEvaluation"], [28, 1, 1, "", "ClassificationMultiDataModelComparisonData"], [28, 1, 1, "", "EvalStatsPlotCollector"], [28, 1, 1, "", "EvaluationResultCollector"], [28, 1, 1, "", "ModelComparisonData"], [28, 1, 1, "", "ModelComparisonVisitor"], [28, 1, 1, "", "ModelComparisonVisitorAggregatedFeatureImportance"], [28, 1, 1, "", "ModelEvaluation"], [28, 1, 1, "", "MultiDataModelComparisonData"], [28, 1, 1, "", "MultiDataModelEvaluation"], [28, 1, 1, "", "RegressionEvalStatsPlotCollector"], [28, 1, 1, "", "RegressionModelEvaluation"], [28, 1, 1, "", "RegressionMultiDataModelComparisonData"], [28, 5, 1, "", "create_evaluation_util"], [28, 5, 1, "", "create_vector_model_cross_validator"], [28, 5, 1, "", "create_vector_model_evaluator"], [28, 5, 1, "", "eval_model_via_evaluator"]], "sensai.evaluation.eval_util.ClassificationMultiDataModelComparisonData": [[28, 2, 1, "", "get_eval_stats_collection"]], "sensai.evaluation.eval_util.EvalStatsPlotCollector": [[28, 2, 1, "", "add_plot"], [28, 2, 1, "", "create_plots"], [28, 2, 1, "", "disable_plots"], [28, 2, 1, "", "get_enabled_plots"]], "sensai.evaluation.eval_util.EvaluationResultCollector": [[28, 2, 1, "", "add_data_frame_csv_file"], [28, 2, 1, "", "add_figure"], [28, 2, 1, "", "child"], [28, 2, 1, "", "is_plot_creation_enabled"]], "sensai.evaluation.eval_util.ModelComparisonData": [[28, 1, 1, "", "Result"], [28, 2, 1, "", "get_best_model"], [28, 2, 1, "", "get_best_model_name"]], "sensai.evaluation.eval_util.ModelComparisonData.Result": [[28, 3, 1, "", "cross_validation_data"], [28, 3, 1, "", "eval_data"], [28, 2, 1, "", "iter_evaluation_data"]], "sensai.evaluation.eval_util.ModelComparisonVisitor": [[28, 2, 1, "", "collect_results"], [28, 2, 1, "", "visit"]], "sensai.evaluation.eval_util.ModelComparisonVisitorAggregatedFeatureImportance": [[28, 2, 1, "", "collect_results"], [28, 2, 1, "", "get_feature_importance"], [28, 2, 1, "", "plot_feature_importance"], [28, 2, 1, "", "visit"]], "sensai.evaluation.eval_util.ModelEvaluation": [[28, 2, 1, "", "compare_models"], [28, 2, 1, "", "compare_models_cross_validation"], [28, 2, 1, "", "create_cross_validator"], [28, 2, 1, "", "create_evaluator"], [28, 2, 1, "", "create_plots"], [28, 2, 1, "", "perform_cross_validation"], [28, 2, 1, "", "perform_simple_evaluation"]], "sensai.evaluation.eval_util.MultiDataModelComparisonData": [[28, 2, 1, "", "create_distribution_plots"], [28, 2, 1, "", "get_eval_stats_collection"], [28, 2, 1, "", "get_eval_stats_list"], [28, 2, 1, "", "get_model_description"], [28, 2, 1, "", "get_model_names"], [28, 2, 1, "", "iter_model_results"]], "sensai.evaluation.eval_util.MultiDataModelEvaluation": [[28, 2, 1, "", "compare_models"]], "sensai.evaluation.eval_util.RegressionMultiDataModelComparisonData": [[28, 2, 1, "", "get_eval_stats_collection"]], "sensai.evaluation.evaluator": [[29, 1, 1, "", "ClassificationEvaluatorParams"], [29, 1, 1, "", "EvaluatorParams"], [29, 1, 1, "", "MetricsDictProvider"], [29, 1, 1, "", "MetricsDictProviderFromFunction"], [29, 1, 1, "", "RegressionEvaluatorParams"], [29, 1, 1, "", "RuleBasedVectorClassificationModelEvaluator"], [29, 1, 1, "", "RuleBasedVectorRegressionModelEvaluator"], [29, 1, 1, "", "VectorClassificationModelEvaluationData"], [29, 1, 1, "", "VectorClassificationModelEvaluator"], [29, 1, 1, "", "VectorClassificationModelEvaluatorParams"], [29, 1, 1, "", "VectorModelEvaluationData"], [29, 1, 1, "", "VectorModelEvaluator"], [29, 1, 1, "", "VectorRegressionModelEvaluationData"], [29, 1, 1, "", "VectorRegressionModelEvaluator"], [29, 1, 1, "", "VectorRegressionModelEvaluatorParams"]], "sensai.evaluation.evaluator.ClassificationEvaluatorParams": [[29, 2, 1, "", "from_dict_or_instance"]], "sensai.evaluation.evaluator.EvaluatorParams": [[29, 2, 1, "", "get_data_splitter"], [29, 2, 1, "", "set_data_splitter"]], "sensai.evaluation.evaluator.MetricsDictProvider": [[29, 2, 1, "", "compute_metrics"]], "sensai.evaluation.evaluator.RegressionEvaluatorParams": [[29, 2, 1, "", "from_dict_or_instance"]], "sensai.evaluation.evaluator.RuleBasedVectorClassificationModelEvaluator": [[29, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator.RuleBasedVectorRegressionModelEvaluator": [[29, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator.VectorClassificationModelEvaluationData": [[29, 2, 1, "", "get_misclassified_inputs_data_frame"], [29, 2, 1, "", "get_misclassified_triples_pred_true_input"]], "sensai.evaluation.evaluator.VectorClassificationModelEvaluator": [[29, 2, 1, "", "compute_test_data_outputs"]], "sensai.evaluation.evaluator.VectorModelEvaluationData": [[29, 2, 1, "", "get_data_frame"], [29, 2, 1, "", "get_eval_stats"], [29, 4, 1, "", "input_data"], [29, 2, 1, "", "iter_input_output_ground_truth_tuples"], [29, 4, 1, "", "model_name"]], "sensai.evaluation.evaluator.VectorModelEvaluator": [[29, 2, 1, "", "create_metrics_dict_provider"], [29, 2, 1, "", "eval_model"], [29, 2, 1, "", "fit_model"], [29, 2, 1, "", "set_tracked_experiment"]], "sensai.evaluation.evaluator.VectorRegressionModelEvaluationData": [[29, 2, 1, "", "create_result_set"], [29, 2, 1, "", "get_eval_stats_collection"], [29, 2, 1, "", "to_data_frame"]], "sensai.evaluation.evaluator.VectorRegressionModelEvaluator": [[29, 2, 1, "", "compute_test_data_outputs"]], "sensai.evaluation.evaluator_clustering": [[30, 1, 1, "", "ClusteringModelEvaluator"], [30, 1, 1, "", "ClusteringModelSupervisedEvaluator"], [30, 1, 1, "", "ClusteringModelUnsupervisedEvaluator"]], "sensai.evaluation.evaluator_clustering.ClusteringModelEvaluator": [[30, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator_clustering.ClusteringModelSupervisedEvaluator": [[30, 2, 1, "", "eval_model"]], "sensai.evaluation.evaluator_clustering.ClusteringModelUnsupervisedEvaluator": [[30, 2, 1, "", "eval_model"]], "sensai.evaluation.metric_computation": [[32, 1, 1, "", "MetricComputation"], [32, 1, 1, "", "MetricComputationMultiData"], [32, 1, 1, "", "MetricComputationResult"]], "sensai.evaluation.metric_computation.MetricComputation": [[32, 2, 1, "", "compute_metric_value"]], "sensai.evaluation.metric_computation.MetricComputationMultiData": [[32, 2, 1, "", "compute_metric_value"]], "sensai.evaluation.metric_computation.MetricComputationResult": [[32, 3, 1, "", "metric_value"], [32, 3, 1, "", "models"]], "sensai.evaluation.result_set": [[33, 1, 1, "", "RegressionResultSet"], [33, 1, 1, "", "ResultSet"]], "sensai.evaluation.result_set.RegressionResultSet": [[33, 2, 1, "", "col_name_abs_error"], [33, 2, 1, "", "col_name_error"], [33, 2, 1, "", "col_name_ground_truth"], [33, 2, 1, "", "col_name_predicted"], [33, 2, 1, "", "eval_stats"], [33, 2, 1, "", "from_regression_eval_data"]], "sensai.evaluation.result_set.ResultSet": [[33, 2, 1, "", "query"], [33, 2, 1, "", "show"]], "sensai.feature_importance": [[34, 1, 1, "", "AggregatedFeatureImportance"], [34, 1, 1, "", "AggregatedPermutationFeatureImportance"], [34, 1, 1, "", "FeatureImportance"], [34, 1, 1, "", "FeatureImportanceProvider"], [34, 5, 1, "", "compute_permutation_feature_importance_dict"], [34, 5, 1, "", "plot_feature_importance"]], "sensai.feature_importance.AggregatedFeatureImportance": [[34, 2, 1, "", "add"], [34, 2, 1, "", "get_aggregated_feature_importance"], [34, 2, 1, "", "get_aggregated_feature_importance_dict"]], "sensai.feature_importance.AggregatedPermutationFeatureImportance": [[34, 2, 1, "", "add"], [34, 2, 1, "", "add_cross_validation_data"], [34, 2, 1, "", "get_feature_importance"]], "sensai.feature_importance.FeatureImportance": [[34, 2, 1, "", "get_data_frame"], [34, 2, 1, "", "get_feature_importance_dict"], [34, 2, 1, "", "get_sorted_tuples"], [34, 2, 1, "", "plot"]], "sensai.feature_importance.FeatureImportanceProvider": [[34, 2, 1, "", "get_feature_importance"], [34, 2, 1, "", "get_feature_importance_dict"], [34, 2, 1, "", "get_feature_importances"]], "sensai.feature_selection": [[36, 0, 0, "-", "rfe"]], "sensai.feature_selection.rfe": [[36, 1, 1, "", "RFEResult"], [36, 1, 1, "", "RFEStep"], [36, 1, 1, "", "RecursiveFeatureElimination"], [36, 1, 1, "", "RecursiveFeatureEliminationCV"]], "sensai.feature_selection.rfe.RFEResult": [[36, 2, 1, "", "get_metric_values_array"], [36, 2, 1, "", "get_num_features_array"], [36, 2, 1, "", "get_selected_features"], [36, 2, 1, "", "get_sorted_steps"], [36, 2, 1, "", "plot_metric_values"]], "sensai.feature_selection.rfe.RFEStep": [[36, 3, 1, "", "features"], [36, 3, 1, "", "metric_value"]], "sensai.feature_selection.rfe.RecursiveFeatureElimination": [[36, 2, 1, "", "run"]], "sensai.feature_selection.rfe.RecursiveFeatureEliminationCV": [[36, 2, 1, "", "run"]], "sensai.featuregen": [[37, 0, 0, "-", "feature_generator"], [38, 0, 0, "-", "feature_generator_registry"]], "sensai.featuregen.feature_generator": [[37, 1, 1, "", "ChainedFeatureGenerator"], [37, 6, 1, "", "DuplicateColumnNamesException"], [37, 1, 1, "", "FeatureGenerator"], [37, 1, 1, "", "FeatureGeneratorFlattenColumns"], [37, 1, 1, "", "FeatureGeneratorFromColumnGenerator"], [37, 1, 1, "", "FeatureGeneratorFromDFT"], [37, 1, 1, "", "FeatureGeneratorFromNamedTuples"], [37, 1, 1, "", "FeatureGeneratorFromVectorModel"], [37, 1, 1, "", "FeatureGeneratorMapColumn"], [37, 1, 1, "", "FeatureGeneratorMapColumnDict"], [37, 1, 1, "", "FeatureGeneratorNAMarker"], [37, 1, 1, "", "FeatureGeneratorTakeColumns"], [37, 1, 1, "", "FeatureGeneratorTargetDistribution"], [37, 1, 1, "", "MultiFeatureGenerator"], [37, 1, 1, "", "RuleBasedFeatureGenerator"], [37, 5, 1, "", "flattened_feature_generator"]], "sensai.featuregen.feature_generator.ChainedFeatureGenerator": [[37, 2, 1, "", "fit_generate"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_fitted"]], "sensai.featuregen.feature_generator.FeatureGenerator": [[37, 2, 1, "", "chain"], [37, 2, 1, "", "concat"], [37, 2, 1, "", "fit"], [37, 2, 1, "", "fit_generate"], [37, 2, 1, "", "flattened"], [37, 2, 1, "", "generate"], [37, 2, 1, "", "get_categorical_feature_name_regex"], [37, 2, 1, "", "get_generated_column_names"], [37, 2, 1, "", "get_name"], [37, 2, 1, "", "get_names"], [37, 2, 1, "", "get_normalisation_rules"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_categorical_feature"], [37, 2, 1, "", "is_fitted"], [37, 2, 1, "", "set_name"], [37, 2, 1, "", "to_dft"]], "sensai.featuregen.feature_generator.FeatureGeneratorFlattenColumns": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.FeatureGeneratorFromColumnGenerator": [[37, 2, 1, "", "info"], [37, 3, 1, "", "log"]], "sensai.featuregen.feature_generator.FeatureGeneratorFromVectorModel": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.FeatureGeneratorTakeColumns": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.FeatureGeneratorTargetDistribution": [[37, 2, 1, "", "info"]], "sensai.featuregen.feature_generator.MultiFeatureGenerator": [[37, 2, 1, "", "fit_generate"], [37, 2, 1, "", "get_names"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_fitted"]], "sensai.featuregen.feature_generator.RuleBasedFeatureGenerator": [[37, 2, 1, "", "fit"], [37, 2, 1, "", "is_fitted"]], "sensai.featuregen.feature_generator_registry": [[38, 1, 1, "", "FeatureCollector"], [38, 1, 1, "", "FeatureGeneratorRegistry"]], "sensai.featuregen.feature_generator_registry.FeatureCollector": [[38, 2, 1, "", "create_dft_normalisation"], [38, 2, 1, "", "create_dft_one_hot_encoder"], [38, 2, 1, "", "create_feature_transformer_normalisation"], [38, 2, 1, "", "create_feature_transformer_one_hot_encoder"], [38, 2, 1, "", "create_multi_feature_generator"], [38, 2, 1, "", "get_categorical_feature_name_regex"], [38, 2, 1, "", "get_multi_feature_generator"], [38, 2, 1, "", "get_normalisation_rules"]], "sensai.featuregen.feature_generator_registry.FeatureGeneratorRegistry": [[38, 4, 1, "", "available_features"], [38, 2, 1, "", "collect_features"], [38, 2, 1, "", "get_feature_generator"], [38, 2, 1, "", "register_factory"]], "sensai.geoanalytics": [[40, 0, 0, "-", "geo_clustering"], [41, 0, 0, "-", "geo_coords"], [49, 0, 0, "-", "local_coords"], [50, 0, 0, "-", "map_tiles"]], "sensai.geoanalytics.geo_clustering": [[40, 1, 1, "", "DBSCANGeoCoordClusterer"], [40, 1, 1, "", "GeoCoordClusterer"], [40, 1, 1, "", "GreedyAgglomerativeGeoCoordClusterer"], [40, 1, 1, "", "SkLearnGeoCoordClusterer"]], "sensai.geoanalytics.geo_clustering.GeoCoordClusterer": [[40, 2, 1, "", "clusters_indices"], [40, 2, 1, "", "fit_geo_coords"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer": [[40, 1, 1, "", "Cluster"], [40, 1, 1, "", "LocalPoint"], [40, 1, 1, "", "Matrix"], [40, 1, 1, "", "MergeCandidateDeterminationStrategy"], [40, 2, 1, "", "clusters_indices"], [40, 2, 1, "", "fit_geo_coords"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer.Cluster": [[40, 2, 1, "", "merge"], [40, 2, 1, "", "merge_cost"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer.Matrix": [[40, 3, 1, "", "UNSET_VALUE"], [40, 2, 1, "", "get"], [40, 2, 1, "", "set"]], "sensai.geoanalytics.geo_clustering.GreedyAgglomerativeGeoCoordClusterer.MergeCandidateDeterminationStrategy": [[40, 2, 1, "", "iter_candidate_indices"], [40, 2, 1, "", "set_clusterer"]], "sensai.geoanalytics.geo_clustering.SkLearnGeoCoordClusterer": [[40, 2, 1, "", "clusters_indices"], [40, 2, 1, "", "clusters_local_points"], [40, 2, 1, "", "fit_geo_coords"]], "sensai.geoanalytics.geo_coords": [[41, 1, 1, "", "GeoCoord"], [41, 1, 1, "", "GeoRect"], [41, 1, 1, "", "GpsTracePoint"], [41, 5, 1, "", "abs_angle_difference"], [41, 5, 1, "", "approximate_squared_distance"], [41, 5, 1, "", "closest_point_on_polyline"], [41, 5, 1, "", "closest_point_on_segment"], [41, 5, 1, "", "latitude_per_m"], [41, 5, 1, "", "longitude_per_m"], [41, 5, 1, "", "orientation"]], "sensai.geoanalytics.geo_coords.GeoCoord": [[41, 2, 1, "", "distance_to"], [41, 2, 1, "", "latlon"], [41, 2, 1, "", "local_coords"], [41, 2, 1, "", "mean_coord"], [41, 2, 1, "", "squared_distance_to"]], "sensai.geoanalytics.geo_coords.GeoRect": [[41, 2, 1, "", "from_circle"]], "sensai.geoanalytics.geopandas": [[42, 0, 0, "-", "coordinate_clustering"], [43, 0, 0, "-", "coordinate_clustering_ground_truth"], [44, 0, 0, "-", "coordinates"], [45, 0, 0, "-", "geometry"], [46, 0, 0, "-", "graph"]], "sensai.geoanalytics.geopandas.coordinate_clustering": [[42, 1, 1, "", "CoordinateEuclideanClusterer"], [42, 1, 1, "", "SkLearnCoordinateClustering"]], "sensai.geoanalytics.geopandas.coordinate_clustering.CoordinateEuclideanClusterer": [[42, 1, 1, "", "Cluster"], [42, 2, 1, "", "clusters"], [42, 2, 1, "", "fit"], [42, 2, 1, "", "get_cluster"], [42, 2, 1, "", "noise_cluster"], [42, 2, 1, "", "plot"], [42, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.coordinate_clustering.CoordinateEuclideanClusterer.Cluster": [[42, 2, 1, "", "as_multipoint"], [42, 2, 1, "", "load"], [42, 2, 1, "", "save"], [42, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.coordinate_clustering_ground_truth": [[43, 1, 1, "", "PolygonAnnotatedCoordinates"]], "sensai.geoanalytics.geopandas.coordinate_clustering_ground_truth.PolygonAnnotatedCoordinates": [[43, 2, 1, "", "get_coordinates_labels"], [43, 2, 1, "", "plot"], [43, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.coordinates": [[44, 1, 1, "", "GeoDataFrameWrapper"], [44, 5, 1, "", "extract_coordinates_array"], [44, 5, 1, "", "validate_coordinates"]], "sensai.geoanalytics.geopandas.coordinates.GeoDataFrameWrapper": [[44, 2, 1, "", "plot"], [44, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.geometry": [[45, 5, 1, "", "alpha_shape"]], "sensai.geoanalytics.geopandas.graph": [[46, 1, 1, "", "CoordinateSpanningTree"], [46, 1, 1, "", "SpanningTree"], [46, 5, 1, "", "delaunay_graph"]], "sensai.geoanalytics.geopandas.graph.CoordinateSpanningTree": [[46, 2, 1, "", "multi_line_string"], [46, 2, 1, "", "to_geodf"]], "sensai.geoanalytics.geopandas.graph.SpanningTree": [[46, 2, 1, "", "mean_edge_weight"], [46, 2, 1, "", "num_edges"], [46, 2, 1, "", "summary_dict"], [46, 2, 1, "", "total_weight"]], "sensai.geoanalytics.local_coords": [[49, 1, 1, "", "LocalCoordinateSystem"], [49, 1, 1, "", "LocalHexagonalGrid"], [49, 5, 1, "", "fix_polygon"]], "sensai.geoanalytics.local_coords.LocalCoordinateSystem": [[49, 2, 1, "", "get_lat_lon"], [49, 2, 1, "", "get_local_coords"]], "sensai.geoanalytics.local_coords.LocalHexagonalGrid": [[49, 2, 1, "", "get_hexagon"], [49, 2, 1, "", "get_hexagon_coord_span_for_bounding_box"], [49, 2, 1, "", "get_hexagon_coords_for_point"], [49, 2, 1, "", "get_max_hexagon_column"], [49, 2, 1, "", "get_max_hexagon_row"], [49, 2, 1, "", "get_min_hexagon_column"], [49, 2, 1, "", "get_min_hexagon_row"]], "sensai.geoanalytics.map_tiles": [[50, 1, 1, "", "MapTile"], [50, 1, 1, "", "MapTiles"]], "sensai.geoanalytics.map_tiles.MapTiles": [[50, 2, 1, "", "get_tile"], [50, 2, 1, "", "get_tile_coordinates"], [50, 2, 1, "", "get_tiles_in_rect"], [50, 2, 1, "", "iter_tile_coordinates_in_rect"]], "sensai.hyperopt": [[51, 1, 1, "", "GridSearch"], [51, 1, 1, "", "ParameterCombinationEquivalenceClassValueCache"], [51, 1, 1, "", "ParameterCombinationSkipDecider"], [51, 1, 1, "", "ParametersMetricsCollection"], [51, 1, 1, "", "SAHyperOpt"], [51, 5, 1, "", "iter_param_combinations"]], "sensai.hyperopt.GridSearch": [[51, 1, 1, "", "Result"], [51, 3, 1, "", "log"], [51, 2, 1, "", "run"]], "sensai.hyperopt.GridSearch.Result": [[51, 1, 1, "", "BestParams"], [51, 2, 1, "", "get_best_params"]], "sensai.hyperopt.GridSearch.Result.BestParams": [[51, 3, 1, "", "metric_name"], [51, 3, 1, "", "metric_value"], [51, 3, 1, "", "params"]], "sensai.hyperopt.ParameterCombinationEquivalenceClassValueCache": [[51, 2, 1, "", "get"], [51, 2, 1, "", "set"]], "sensai.hyperopt.ParameterCombinationSkipDecider": [[51, 2, 1, "", "is_skipped"], [51, 2, 1, "", "tell"]], "sensai.hyperopt.ParametersMetricsCollection": [[51, 2, 1, "", "add_values"], [51, 2, 1, "", "contains"], [51, 2, 1, "", "get_data_frame"]], "sensai.hyperopt.SAHyperOpt": [[51, 1, 1, "", "ParameterChangeOperator"], [51, 1, 1, "", "State"], [51, 2, 1, "", "get_simulated_annealing"], [51, 3, 1, "", "log"], [51, 2, 1, "", "run"]], "sensai.hyperopt.SAHyperOpt.ParameterChangeOperator": [[51, 2, 1, "", "apply_state_change"], [51, 2, 1, "", "choose_params"], [51, 2, 1, "", "cost_delta"]], "sensai.hyperopt.SAHyperOpt.State": [[51, 2, 1, "", "apply_state_representation"], [51, 2, 1, "", "compute_cost_value"], [51, 2, 1, "", "get_state_representation"]], "sensai.lightgbm": [[53, 1, 1, "", "LightGBMVectorClassificationModel"], [53, 1, 1, "", "LightGBMVectorRegressionModel"]], "sensai.lightgbm.LightGBMVectorClassificationModel": [[53, 2, 1, "", "is_sample_weight_supported"], [53, 3, 1, "", "log"]], "sensai.lightgbm.LightGBMVectorRegressionModel": [[53, 2, 1, "", "is_sample_weight_supported"], [53, 3, 1, "", "log"]], "sensai.local_search": [[54, 1, 1, "", "ParallelTempering"], [54, 1, 1, "", "SAChain"], [54, 1, 1, "", "SACostValue"], [54, 1, 1, "", "SACostValueNumeric"], [54, 1, 1, "", "SAOperator"], [54, 1, 1, "", "SAProbabilityFunction"], [54, 1, 1, "", "SAProbabilityFunctionConstant"], [54, 1, 1, "", "SAProbabilityFunctionLinear"], [54, 1, 1, "", "SAProbabilityFunctionReverseSigmoid"], [54, 1, 1, "", "SAProbabilitySchedule"], [54, 1, 1, "", "SAState"], [54, 1, 1, "", "SATemperatureSchedule"], [54, 1, 1, "", "SATemperatureScheduleExponential"], [54, 1, 1, "", "SATemperatureScheduleFixed"], [54, 1, 1, "", "SATemperatureSchedulePower"], [54, 1, 1, "", "SATemperatureScheduleReverseSigmoid"], [54, 1, 1, "", "SATemperatureScheduleReverseSigmoidSymmetric"], [54, 1, 1, "", "SimulatedAnnealing"], [54, 5, 1, "", "reverse_sigmoid"]], "sensai.local_search.ParallelTempering": [[54, 3, 1, "", "log"], [54, 2, 1, "", "optimise"], [54, 2, 1, "", "plot_cost_progression"]], "sensai.local_search.SAChain": [[54, 2, 1, "", "apply_best_state"], [54, 2, 1, "", "get_series"], [54, 3, 1, "", "log"], [54, 2, 1, "", "log_stats"], [54, 2, 1, "", "plot_series"], [54, 2, 1, "", "step"]], "sensai.local_search.SACostValue": [[54, 2, 1, "", "add"], [54, 2, 1, "", "value"]], "sensai.local_search.SACostValueNumeric": [[54, 2, 1, "", "add"], [54, 2, 1, "", "value"]], "sensai.local_search.SAOperator": [[54, 2, 1, "", "apply"], [54, 2, 1, "", "apply_cost_change"], [54, 2, 1, "", "apply_state_change"], [54, 2, 1, "", "choose_params"], [54, 2, 1, "", "cost_delta"]], "sensai.local_search.SAProbabilitySchedule": [[54, 2, 1, "", "probability"], [54, 2, 1, "", "temperature"]], "sensai.local_search.SAState": [[54, 2, 1, "", "apply_state_representation"], [54, 2, 1, "", "compute_cost_value"], [54, 2, 1, "", "get_state_representation"]], "sensai.local_search.SATemperatureSchedule": [[54, 2, 1, "", "probability"], [54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureScheduleExponential": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureScheduleFixed": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureSchedulePower": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SATemperatureScheduleReverseSigmoid": [[54, 2, 1, "", "temperature"]], "sensai.local_search.SimulatedAnnealing": [[54, 2, 1, "", "get_chain"], [54, 3, 1, "", "log"], [54, 2, 1, "", "optimise"]], "sensai.minizinc": [[55, 1, 1, "", "CostScaler"], [55, 1, 1, "", "MiniZincProblem"], [55, 1, 1, "", "MiniZincSolver"], [55, 5, 1, "", "array_to_mini_zinc"], [55, 5, 1, "", "extract_1d_array_from_output"], [55, 5, 1, "", "extract_multi_dim_array_from_output"]], "sensai.minizinc.CostScaler": [[55, 2, 1, "", "original_value"], [55, 2, 1, "", "scaled_float"], [55, 2, 1, "", "scaled_int"]], "sensai.minizinc.MiniZincProblem": [[55, 2, 1, "", "create_mini_zinc_file"], [55, 2, 1, "", "get_mini_zinc_code"]], "sensai.minizinc.MiniZincSolver": [[55, 2, 1, "", "get_last_solver_time_secs"], [55, 3, 1, "", "log"], [55, 2, 1, "", "solve_path"], [55, 2, 1, "", "solve_problem"]], "sensai.multi_model": [[56, 1, 1, "", "MultiVectorRegressionModel"]], "sensai.naive_bayes": [[57, 1, 1, "", "CategoricalNaiveBayesVectorClassificationModel"]], "sensai.nearest_neighbors": [[58, 1, 1, "", "AbstractKnnFinder"], [58, 1, 1, "", "AllNeighborsProvider"], [58, 1, 1, "", "CachingKNearestNeighboursFinder"], [58, 1, 1, "", "FeatureGeneratorNeighbors"], [58, 1, 1, "", "KNearestNeighboursClassificationModel"], [58, 1, 1, "", "KNearestNeighboursFinder"], [58, 1, 1, "", "KNearestNeighboursRegressionModel"], [58, 1, 1, "", "Neighbor"], [58, 1, 1, "", "NeighborProvider"], [58, 1, 1, "", "TimerangeNeighborsProvider"]], "sensai.nearest_neighbors.AbstractKnnFinder": [[58, 2, 1, "", "find_neighbors"]], "sensai.nearest_neighbors.AllNeighborsProvider": [[58, 2, 1, "", "iter_potential_neighbors"]], "sensai.nearest_neighbors.CachingKNearestNeighboursFinder": [[58, 1, 1, "", "CachedSeriesDistanceMetric"], [58, 1, 1, "", "DistanceMetricCache"], [58, 2, 1, "", "find_neighbors"], [58, 3, 1, "", "log"]], "sensai.nearest_neighbors.CachingKNearestNeighboursFinder.CachedSeriesDistanceMetric": [[58, 2, 1, "", "get_distance_series"]], "sensai.nearest_neighbors.CachingKNearestNeighboursFinder.DistanceMetricCache": [[58, 2, 1, "", "get_cached_metric"], [58, 3, 1, "", "log"]], "sensai.nearest_neighbors.KNearestNeighboursClassificationModel": [[58, 2, 1, "", "find_neighbors"]], "sensai.nearest_neighbors.KNearestNeighboursFinder": [[58, 2, 1, "", "find_neighbors"]], "sensai.nearest_neighbors.NeighborProvider": [[58, 2, 1, "", "iter_potential_neighbors"]], "sensai.nearest_neighbors.TimerangeNeighborsProvider": [[58, 2, 1, "", "iter_potential_neighbors"]], "sensai.normalisation": [[59, 1, 1, "", "NormalisationMode"], [59, 1, 1, "", "VectorDataScaler"]], "sensai.normalisation.NormalisationMode": [[59, 3, 1, "", "MAX_ALL"], [59, 3, 1, "", "MAX_BY_COLUMN"], [59, 3, 1, "", "NONE"], [59, 3, 1, "", "STANDARDISED"]], "sensai.normalisation.VectorDataScaler": [[59, 2, 1, "", "get_denormalised_array"], [59, 2, 1, "", "get_normalised_array"]], "sensai.pytorch_lightning": [[61, 0, 0, "-", "pl_models"]], "sensai.pytorch_lightning.pl_models": [[61, 1, 1, "", "PLTensorToScalarClassificationModel"], [61, 1, 1, "", "PLTensorToScalarRegressionModel"], [61, 1, 1, "", "PLTensorToTensorClassificationModel"], [61, 1, 1, "", "PLTensorToTensorRegressionModel"], [61, 1, 1, "", "PLWrappedModel"]], "sensai.pytorch_lightning.pl_models.PLWrappedModel": [[61, 2, 1, "", "fit"], [61, 2, 1, "", "predict"]], "sensai.sklearn": [[63, 0, 0, "-", "sklearn_base"], [64, 0, 0, "-", "sklearn_classification"], [65, 0, 0, "-", "sklearn_regression"]], "sensai.sklearn.sklearn_base": [[63, 1, 1, "", "AbstractSkLearnMultiDimVectorRegressionModel"], [63, 1, 1, "", "AbstractSkLearnMultipleOneDimVectorRegressionModel"], [63, 1, 1, "", "AbstractSkLearnVectorClassificationModel"], [63, 1, 1, "", "AbstractSkLearnVectorRegressionModel"], [63, 1, 1, "", "ActualFitParams"], [63, 1, 1, "", "FeatureImportanceProviderSkLearnClassification"], [63, 1, 1, "", "FeatureImportanceProviderSkLearnRegressionMultiDim"], [63, 1, 1, "", "FeatureImportanceProviderSkLearnRegressionMultipleOneDim"], [63, 5, 1, "", "create_sklearn_model"], [63, 5, 1, "", "str_sklearn_model"]], "sensai.sklearn.sklearn_base.AbstractSkLearnMultipleOneDimVectorRegressionModel": [[63, 2, 1, "", "get_sklearn_model"]], "sensai.sklearn.sklearn_base.AbstractSkLearnVectorClassificationModel": [[63, 2, 1, "", "get_params"], [63, 2, 1, "", "is_sample_weight_supported"], [63, 2, 1, "", "set_params"], [63, 2, 1, "", "with_sklearn_input_transformer"]], "sensai.sklearn.sklearn_base.AbstractSkLearnVectorRegressionModel": [[63, 2, 1, "", "is_sample_weight_supported"], [63, 3, 1, "", "log"], [63, 2, 1, "", "with_sklearn_input_transformer"], [63, 2, 1, "", "with_sklearn_output_transformer"]], "sensai.sklearn.sklearn_base.FeatureImportanceProviderSkLearnClassification": [[63, 2, 1, "", "get_feature_importance_dict"]], "sensai.sklearn.sklearn_base.FeatureImportanceProviderSkLearnRegressionMultiDim": [[63, 2, 1, "", "get_feature_importance_dict"]], "sensai.sklearn.sklearn_base.FeatureImportanceProviderSkLearnRegressionMultipleOneDim": [[63, 2, 1, "", "get_feature_importance_dict"]], "sensai.sklearn.sklearn_classification": [[64, 1, 1, "", "SkLearnDecisionTreeVectorClassificationModel"], [64, 1, 1, "", "SkLearnKNeighborsVectorClassificationModel"], [64, 1, 1, "", "SkLearnLogisticRegressionVectorClassificationModel"], [64, 1, 1, "", "SkLearnMLPVectorClassificationModel"], [64, 1, 1, "", "SkLearnMultinomialNBVectorClassificationModel"], [64, 1, 1, "", "SkLearnRandomForestVectorClassificationModel"], [64, 1, 1, "", "SkLearnSVCVectorClassificationModel"]], "sensai.sklearn.sklearn_classification.SkLearnDecisionTreeVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnKNeighborsVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnLogisticRegressionVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnMLPVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnMultinomialNBVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnRandomForestVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_classification.SkLearnSVCVectorClassificationModel": [[64, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression": [[65, 1, 1, "", "SkLearnDecisionTreeVectorRegressionModel"], [65, 1, 1, "", "SkLearnDummyVectorRegressionModel"], [65, 1, 1, "", "SkLearnExtraTreesVectorRegressionModel"], [65, 1, 1, "", "SkLearnGradientBoostingVectorRegressionModel"], [65, 1, 1, "", "SkLearnKNeighborsVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearLassoRegressionVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearRegressionVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearRidgeRegressionVectorRegressionModel"], [65, 1, 1, "", "SkLearnLinearSVRVectorRegressionModel"], [65, 1, 1, "", "SkLearnMultiLayerPerceptronVectorRegressionModel"], [65, 1, 1, "", "SkLearnRandomForestVectorRegressionModel"], [65, 1, 1, "", "SkLearnSVRVectorRegressionModel"]], "sensai.sklearn.sklearn_regression.SkLearnDecisionTreeVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"], [65, 2, 1, "", "plot"], [65, 2, 1, "", "plot_graphviz_pdf"]], "sensai.sklearn.sklearn_regression.SkLearnDummyVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnExtraTreesVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnGradientBoostingVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnKNeighborsVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearLassoRegressionVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearRegressionVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearRidgeRegressionVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnLinearSVRVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnMultiLayerPerceptronVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnRandomForestVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn.sklearn_regression.SkLearnSVRVectorRegressionModel": [[65, 2, 1, "", "is_sample_weight_supported"]], "sensai.sklearn_quantile": [[66, 1, 1, "", "QuantileRegressionMetric"], [66, 1, 1, "", "QuantileRegressionMetricAccuracyInConfidenceInterval"], [66, 1, 1, "", "QuantileRegressionMetricConfidenceIntervalMeanSize"], [66, 1, 1, "", "QuantileRegressionMetricConfidenceIntervalMedianSize"], [66, 1, 1, "", "QuantileRegressionMetricRelFreqMaxSizeConfidenceInterval"], [66, 1, 1, "", "RandomForestQuantileRegressorVectorRegressionModel"]], "sensai.sklearn_quantile.QuantileRegressionMetric": [[66, 2, 1, "", "compute_confidence_intervals"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricAccuracyInConfidenceInterval": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricConfidenceIntervalMeanSize": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricConfidenceIntervalMedianSize": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.QuantileRegressionMetricRelFreqMaxSizeConfidenceInterval": [[66, 2, 1, "", "compute_value"], [66, 3, 1, "", "name"]], "sensai.sklearn_quantile.RandomForestQuantileRegressorVectorRegressionModel": [[66, 2, 1, "", "predict_confidence_intervals"]], "sensai.tensor_model": [[67, 6, 1, "", "InvalidShapeError"], [67, 1, 1, "", "TensorModel"], [67, 1, 1, "", "TensorToScalarClassificationModel"], [67, 1, 1, "", "TensorToScalarRegressionModel"], [67, 1, 1, "", "TensorToTensorClassificationModel"], [67, 1, 1, "", "TensorToTensorRegressionModel"]], "sensai.tensor_model.TensorModel": [[67, 2, 1, "", "get_model_input_shape"], [67, 2, 1, "", "get_model_output_shape"]], "sensai.tensor_model.TensorToScalarClassificationModel": [[67, 2, 1, "", "predict"]], "sensai.tensor_model.TensorToScalarRegressionModel": [[67, 2, 1, "", "predict"]], "sensai.tensor_model.TensorToTensorClassificationModel": [[67, 2, 1, "", "convert_class_probabilities_to_predictions"], [67, 2, 1, "", "fit"], [67, 2, 1, "", "get_model_output_shape"], [67, 2, 1, "", "get_num_predicted_classes"], [67, 2, 1, "", "is_regression_model"], [67, 2, 1, "", "predict"], [67, 2, 1, "", "predict_class_probabilities"]], "sensai.tensor_model.TensorToTensorRegressionModel": [[67, 2, 1, "", "predict"]], "sensai.tensorflow": [[69, 0, 0, "-", "tf_base"], [70, 0, 0, "-", "tf_mlp"]], "sensai.tensorflow.tf_base": [[69, 1, 1, "", "KerasVectorRegressionModel"], [69, 1, 1, "", "TensorFlowSession"]], "sensai.tensorflow.tf_base.TensorFlowSession": [[69, 2, 1, "", "configure_session"], [69, 3, 1, "", "session"], [69, 2, 1, "", "set_keras_session"]], "sensai.tensorflow.tf_mlp": [[70, 1, 1, "", "KerasMultiLayerPerceptronVectorRegressionModel"]], "sensai.torch": [[72, 0, 0, "-", "torch_base"], [73, 0, 0, "-", "torch_data"], [74, 0, 0, "-", "torch_enums"], [75, 0, 0, "-", "torch_eval_util"], [89, 0, 0, "-", "torch_modules"], [90, 0, 0, "-", "torch_opt"], [91, 0, 0, "-", "torchtext"]], "sensai.torch.torch_base": [[72, 1, 1, "", "MCDropoutCapableNNModule"], [72, 1, 1, "", "OutputTensorToArrayConverter"], [72, 1, 1, "", "TorchAutoregressiveResultHandler"], [72, 1, 1, "", "TorchDataSetProviderFactory"], [72, 1, 1, "", "TorchDataSetProviderFactoryClassificationDefault"], [72, 1, 1, "", "TorchDataSetProviderFactoryRegressionDefault"], [72, 1, 1, "", "TorchModel"], [72, 1, 1, "", "TorchModelFactoryFromModule"], [72, 1, 1, "", "TorchModelFittingStrategy"], [72, 1, 1, "", "TorchModelFittingStrategyDefault"], [72, 1, 1, "", "TorchModelFromModule"], [72, 1, 1, "", "TorchModelFromModuleFactory"], [72, 1, 1, "", "TorchVectorClassificationModel"], [72, 1, 1, "", "TorchVectorRegressionModel"], [72, 1, 1, "", "VectorTorchModel"]], "sensai.torch.torch_base.MCDropoutCapableNNModule": [[72, 2, 1, "", "infer_mc_dropout"]], "sensai.torch.torch_base.OutputTensorToArrayConverter": [[72, 2, 1, "", "convert"]], "sensai.torch.torch_base.TorchAutoregressiveResultHandler": [[72, 2, 1, "", "clear_results"], [72, 2, 1, "", "save_results"]], "sensai.torch.torch_base.TorchDataSetProviderFactory": [[72, 2, 1, "", "create_data_set_provider"]], "sensai.torch.torch_base.TorchDataSetProviderFactoryClassificationDefault": [[72, 2, 1, "", "create_data_set_provider"]], "sensai.torch.torch_base.TorchDataSetProviderFactoryRegressionDefault": [[72, 2, 1, "", "create_data_set_provider"]], "sensai.torch.torch_base.TorchModel": [[72, 2, 1, "", "apply"], [72, 2, 1, "", "apply_scaled"], [72, 4, 1, "", "best_epoch"], [72, 2, 1, "", "create_torch_module"], [72, 2, 1, "", "fit"], [72, 2, 1, "", "get_module_bytes"], [72, 2, 1, "", "get_torch_module"], [72, 3, 1, "", "log"], [72, 2, 1, "", "scaled_output"], [72, 2, 1, "", "set_module_bytes"], [72, 2, 1, "", "set_normalisation_check_threshold"], [72, 2, 1, "", "set_torch_module"], [72, 4, 1, "", "total_epochs"]], "sensai.torch.torch_base.TorchModelFittingStrategy": [[72, 2, 1, "", "fit"]], "sensai.torch.torch_base.TorchModelFittingStrategyDefault": [[72, 2, 1, "", "fit"]], "sensai.torch.torch_base.TorchModelFromModule": [[72, 2, 1, "", "create_torch_module"], [72, 3, 1, "", "cuda"], [72, 3, 1, "", "inputScaler"], [72, 3, 1, "", "module"], [72, 3, 1, "", "outputScaler"], [72, 3, 1, "", "trainingInfo"]], "sensai.torch.torch_base.TorchModelFromModuleFactory": [[72, 2, 1, "", "create_torch_module"], [72, 3, 1, "", "cuda"], [72, 3, 1, "", "inputScaler"], [72, 3, 1, "", "module"], [72, 3, 1, "", "outputScaler"], [72, 3, 1, "", "trainingInfo"]], "sensai.torch.torch_base.TorchVectorClassificationModel": [[72, 2, 1, "", "from_module"], [72, 2, 1, "", "with_data_frame_splitter"], [72, 2, 1, "", "with_input_tensoriser"], [72, 2, 1, "", "with_normalisation_check_threshold"], [72, 2, 1, "", "with_output_tensoriser"], [72, 2, 1, "", "with_torch_data_set_provider_factory"]], "sensai.torch.torch_base.TorchVectorRegressionModel": [[72, 2, 1, "", "from_module"], [72, 2, 1, "", "with_autoregressive_result_handler"], [72, 2, 1, "", "with_data_frame_splitter"], [72, 2, 1, "", "with_input_tensoriser"], [72, 2, 1, "", "with_normalisation_check_threshold"], [72, 2, 1, "", "with_output_tensor_to_array_converter"], [72, 2, 1, "", "with_output_tensoriser"], [72, 2, 1, "", "with_torch_data_set_provider_factory"]], "sensai.torch.torch_base.VectorTorchModel": [[72, 2, 1, "", "create_torch_module"], [72, 2, 1, "", "create_torch_module_for_dims"], [72, 3, 1, "", "cuda"], [72, 3, 1, "", "inputScaler"], [72, 3, 1, "", "module"], [72, 3, 1, "", "outputScaler"], [72, 3, 1, "", "trainingInfo"]], "sensai.torch.torch_data": [[73, 1, 1, "", "ClassificationVectorDataUtil"], [73, 1, 1, "", "DataUtil"], [73, 1, 1, "", "RuleBasedTensoriser"], [73, 1, 1, "", "TensorScaler"], [73, 1, 1, "", "TensorScalerCentreAndScale"], [73, 1, 1, "", "TensorScalerFromDFTSkLearnTransformer"], [73, 1, 1, "", "TensorScalerFromVectorDataScaler"], [73, 1, 1, "", "TensorScalerIdentity"], [73, 1, 1, "", "TensorTransformer"], [73, 1, 1, "", "TensorTuple"], [73, 1, 1, "", "Tensoriser"], [73, 1, 1, "", "TensoriserClassLabelIndices"], [73, 1, 1, "", "TensoriserDataFrameFloatValuesMatrix"], [73, 1, 1, "", "TorchDataSet"], [73, 1, 1, "", "TorchDataSetFromDataFrames"], [73, 1, 1, "", "TorchDataSetFromDataFramesDynamicallyTensorised"], [73, 1, 1, "", "TorchDataSetFromDataFramesPreTensorised"], [73, 1, 1, "", "TorchDataSetFromTensors"], [73, 1, 1, "", "TorchDataSetProvider"], [73, 1, 1, "", "TorchDataSetProviderFromDataUtil"], [73, 1, 1, "", "TorchDataSetProviderFromVectorDataUtil"], [73, 1, 1, "", "VectorDataUtil"], [73, 5, 1, "", "to_tensor"]], "sensai.torch.torch_data.ClassificationVectorDataUtil": [[73, 2, 1, "", "model_output_dim"]], "sensai.torch.torch_data.DataUtil": [[73, 2, 1, "", "get_input_tensor_scaler"], [73, 2, 1, "", "get_output_tensor_scaler"], [73, 2, 1, "", "input_dim"], [73, 2, 1, "", "model_output_dim"], [73, 2, 1, "", "split_into_tensors"]], "sensai.torch.torch_data.RuleBasedTensoriser": [[73, 2, 1, "", "fit"]], "sensai.torch.torch_data.TensorScaler": [[73, 2, 1, "", "cuda"], [73, 2, 1, "", "denormalise"], [73, 2, 1, "", "normalise"]], "sensai.torch.torch_data.TensorScalerCentreAndScale": [[73, 2, 1, "", "cuda"], [73, 2, 1, "", "denormalise"], [73, 2, 1, "", "normalise"]], "sensai.torch.torch_data.TensorScalerIdentity": [[73, 2, 1, "", "cuda"], [73, 2, 1, "", "denormalise"], [73, 2, 1, "", "normalise"]], "sensai.torch.torch_data.TensorTransformer": [[73, 2, 1, "", "transform"]], "sensai.torch.torch_data.TensorTuple": [[73, 2, 1, "", "concat"], [73, 2, 1, "", "cuda"], [73, 2, 1, "", "item"], [73, 2, 1, "", "tuple"]], "sensai.torch.torch_data.Tensoriser": [[73, 2, 1, "", "fit"], [73, 2, 1, "", "tensorise"]], "sensai.torch.torch_data.TorchDataSet": [[73, 2, 1, "", "iter_batches"], [73, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetFromDataFrames": [[73, 2, 1, "", "iter_batches"], [73, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetFromDataFramesDynamicallyTensorised": [[73, 2, 1, "", "iter_batches"], [73, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetFromTensors": [[73, 2, 1, "", "iter_batches"], [73, 2, 1, "", "size"]], "sensai.torch.torch_data.TorchDataSetProvider": [[73, 2, 1, "", "get_input_dim"], [73, 2, 1, "", "get_input_tensor_scaler"], [73, 2, 1, "", "get_model_output_dim"], [73, 2, 1, "", "get_output_tensor_scaler"], [73, 2, 1, "", "provide_split"]], "sensai.torch.torch_data.TorchDataSetProviderFromDataUtil": [[73, 2, 1, "", "provide_split"]], "sensai.torch.torch_data.TorchDataSetProviderFromVectorDataUtil": [[73, 2, 1, "", "provide_split"]], "sensai.torch.torch_data.VectorDataUtil": [[73, 2, 1, "", "get_input_tensor_scaler"], [73, 2, 1, "", "get_output_tensor_scaler"], [73, 2, 1, "", "input_dim"], [73, 2, 1, "", "model_output_dim"], [73, 2, 1, "", "output_dim"], [73, 2, 1, "", "split_into_data_sets"], [73, 2, 1, "", "split_into_tensors"]], "sensai.torch.torch_enums": [[74, 1, 1, "", "ActivationFunction"], [74, 1, 1, "", "ClassificationOutputMode"]], "sensai.torch.torch_enums.ActivationFunction": [[74, 3, 1, "", "LOG_SOFTMAX"], [74, 3, 1, "", "NONE"], [74, 3, 1, "", "RELU"], [74, 3, 1, "", "SIGMOID"], [74, 3, 1, "", "SOFTMAX"], [74, 3, 1, "", "TANH"], [74, 2, 1, "", "from_name"], [74, 2, 1, "", "get_name"], [74, 2, 1, "", "get_torch_function"], [74, 2, 1, "", "torch_function_from_any"]], "sensai.torch.torch_enums.ClassificationOutputMode": [[74, 3, 1, "", "LOG_PROBABILITIES"], [74, 3, 1, "", "PROBABILITIES"], [74, 3, 1, "", "UNNORMALISED_LOG_PROBABILITIES"], [74, 2, 1, "", "for_activation_fn"]], "sensai.torch.torch_eval_util": [[75, 1, 1, "", "TorchVectorRegressionModelEvaluationUtil"]], "sensai.torch.torch_models.lstnet": [[78, 0, 0, "-", "lstnet_models"], [79, 0, 0, "-", "lstnet_modules"]], "sensai.torch.torch_models.lstnet.lstnet_models": [[78, 1, 1, "", "LSTNetworkVectorClassificationModel"]], "sensai.torch.torch_models.lstnet.lstnet_models.LSTNetworkVectorClassificationModel": [[78, 1, 1, "", "DataUtil"]], "sensai.torch.torch_models.lstnet.lstnet_models.LSTNetworkVectorClassificationModel.DataUtil": [[78, 2, 1, "", "get_input_output_pair"], [78, 2, 1, "", "get_input_tensor_scaler"], [78, 2, 1, "", "get_output_tensor_scaler"], [78, 2, 1, "", "input_dim"], [78, 2, 1, "", "model_output_dim"], [78, 2, 1, "", "split_into_tensors"]], "sensai.torch.torch_models.lstnet.lstnet_modules": [[79, 1, 1, "", "LSTNetwork"]], "sensai.torch.torch_models.lstnet.lstnet_modules.LSTNetwork": [[79, 1, 1, "", "Mode"], [79, 2, 1, "", "compute_encoder_dim"], [79, 2, 1, "", "forward"], [79, 2, 1, "", "get_encoder_dim"]], "sensai.torch.torch_models.lstnet.lstnet_modules.LSTNetwork.Mode": [[79, 3, 1, "", "CLASSIFICATION"], [79, 3, 1, "", "ENCODER"], [79, 3, 1, "", "REGRESSION"]], "sensai.torch.torch_models.mlp": [[81, 0, 0, "-", "mlp_models"], [82, 0, 0, "-", "mlp_modules"]], "sensai.torch.torch_models.mlp.mlp_models": [[81, 1, 1, "", "MultiLayerPerceptronTorchModel"], [81, 1, 1, "", "MultiLayerPerceptronVectorClassificationModel"], [81, 1, 1, "", "MultiLayerPerceptronVectorRegressionModel"]], "sensai.torch.torch_models.mlp.mlp_models.MultiLayerPerceptronTorchModel": [[81, 2, 1, "", "create_torch_module_for_dims"], [81, 3, 1, "", "cuda"], [81, 3, 1, "", "inputScaler"], [81, 3, 1, "", "module"], [81, 3, 1, "", "outputScaler"], [81, 3, 1, "", "trainingInfo"]], "sensai.torch.torch_models.mlp.mlp_modules": [[82, 1, 1, "", "MultiLayerPerceptron"]], "sensai.torch.torch_models.mlp.mlp_modules.MultiLayerPerceptron": [[82, 2, 1, "", "forward"]], "sensai.torch.torch_models.residualffn": [[84, 0, 0, "-", "residualffn_models"], [85, 0, 0, "-", "residualffn_modules"]], "sensai.torch.torch_models.residualffn.residualffn_models": [[84, 1, 1, "", "ResidualFeedForwardNetworkTorchModel"], [84, 1, 1, "", "ResidualFeedForwardNetworkVectorRegressionModel"]], "sensai.torch.torch_models.residualffn.residualffn_models.ResidualFeedForwardNetworkTorchModel": [[84, 2, 1, "", "create_torch_module_for_dims"], [84, 3, 1, "", "cuda"], [84, 3, 1, "", "inputScaler"], [84, 3, 1, "", "module"], [84, 3, 1, "", "outputScaler"], [84, 3, 1, "", "trainingInfo"]], "sensai.torch.torch_models.residualffn.residualffn_modules": [[85, 1, 1, "", "ResidualFeedForwardNetwork"]], "sensai.torch.torch_models.residualffn.residualffn_modules.ResidualFeedForwardNetwork": [[85, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq": [[87, 0, 0, "-", "seq_models"], [88, 0, 0, "-", "seq_modules"]], "sensai.torch.torch_models.seq.seq_models": [[87, 1, 1, "", "EncoderDecoderVectorRegressionModel"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorRegressionModel": [[87, 1, 1, "", "EncoderDecoderModel"], [87, 1, 1, "", "InputTensoriser"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorRegressionModel.EncoderDecoderModel": [[87, 2, 1, "", "create_torch_module"], [87, 3, 1, "", "cuda"], [87, 3, 1, "", "inputScaler"], [87, 3, 1, "", "module"], [87, 3, 1, "", "outputScaler"], [87, 3, 1, "", "trainingInfo"]], "sensai.torch.torch_models.seq.seq_models.EncoderDecoderVectorRegressionModel.InputTensoriser": [[87, 2, 1, "", "fit"]], "sensai.torch.torch_models.seq.seq_modules": [[88, 1, 1, "", "DecoderFactory"], [88, 1, 1, "", "DecoderProtocol"], [88, 1, 1, "", "EncoderDecoderModule"], [88, 1, 1, "", "EncoderFactory"], [88, 1, 1, "", "EncoderProtocol"], [88, 1, 1, "", "LSTNetworkEncoder"], [88, 1, 1, "", "LSTNetworkEncoderFactory"], [88, 1, 1, "", "LinearPredictorFactory"], [88, 1, 1, "", "MLPPredictorFactory"], [88, 1, 1, "", "PredictorFactory"], [88, 1, 1, "", "PredictorProtocol"], [88, 1, 1, "", "RnnEncoderFactory"], [88, 1, 1, "", "RnnEncoderModule"], [88, 1, 1, "", "SingleTargetDecoderFactory"], [88, 1, 1, "", "SingleTargetDecoderModule"], [88, 1, 1, "", "TargetSequenceDecoderFactory"], [88, 1, 1, "", "TargetSequenceDecoderModule"]], "sensai.torch.torch_models.seq.seq_modules.DecoderFactory": [[88, 2, 1, "", "create_decoder"]], "sensai.torch.torch_models.seq.seq_modules.DecoderProtocol": [[88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.EncoderDecoderModule": [[88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.EncoderFactory": [[88, 2, 1, "", "create_encoder"]], "sensai.torch.torch_models.seq.seq_modules.EncoderProtocol": [[88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.LSTNetworkEncoder": [[88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.LSTNetworkEncoderFactory": [[88, 2, 1, "", "create_encoder"], [88, 2, 1, "", "get_latent_dim"]], "sensai.torch.torch_models.seq.seq_modules.LinearPredictorFactory": [[88, 2, 1, "", "create_predictor"]], "sensai.torch.torch_models.seq.seq_modules.MLPPredictorFactory": [[88, 2, 1, "", "create_predictor"]], "sensai.torch.torch_models.seq.seq_modules.PredictorFactory": [[88, 2, 1, "", "create_predictor"]], "sensai.torch.torch_models.seq.seq_modules.PredictorProtocol": [[88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.RnnEncoderFactory": [[88, 2, 1, "", "create_encoder"]], "sensai.torch.torch_models.seq.seq_modules.RnnEncoderModule": [[88, 1, 1, "", "RnnType"], [88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.RnnEncoderModule.RnnType": [[88, 3, 1, "", "GRU"], [88, 3, 1, "", "LSTM"]], "sensai.torch.torch_models.seq.seq_modules.SingleTargetDecoderFactory": [[88, 2, 1, "", "create_decoder"]], "sensai.torch.torch_models.seq.seq_modules.SingleTargetDecoderModule": [[88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderFactory": [[88, 2, 1, "", "create_decoder"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule": [[88, 1, 1, "", "LatentPassOnMode"], [88, 1, 1, "", "OutputMode"], [88, 1, 1, "", "PredictionMode"], [88, 2, 1, "", "forward"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule.LatentPassOnMode": [[88, 3, 1, "", "CONCAT_INPUT"], [88, 3, 1, "", "INIT_HIDDEN"], [88, 3, 1, "", "NO_LATENT"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule.OutputMode": [[88, 3, 1, "", "MULTI_OUTPUT"], [88, 3, 1, "", "SINGLE_OUTPUT"], [88, 3, 1, "", "SINGLE_OUTPUT_MEAN"]], "sensai.torch.torch_models.seq.seq_modules.TargetSequenceDecoderModule.PredictionMode": [[88, 3, 1, "", "DIRECT"], [88, 3, 1, "", "MULTI_LATENT"], [88, 3, 1, "", "SINGLE_LATENT"]], "sensai.torch.torch_opt": [[90, 1, 1, "", "NNLossEvaluator"], [90, 1, 1, "", "NNLossEvaluatorClassification"], [90, 1, 1, "", "NNLossEvaluatorFixedDim"], [90, 1, 1, "", "NNLossEvaluatorRegression"], [90, 1, 1, "", "NNOptimiser"], [90, 1, 1, "", "NNOptimiserParams"], [90, 1, 1, "", "Optimiser"], [90, 1, 1, "", "TrainingInfo"]], "sensai.torch.torch_opt.NNLossEvaluator": [[90, 1, 1, "", "Evaluation"], [90, 2, 1, "", "get_validation_metric_name"], [90, 2, 1, "", "start_evaluation"]], "sensai.torch.torch_opt.NNLossEvaluator.Evaluation": [[90, 2, 1, "", "compute_train_batch_loss"], [90, 2, 1, "", "get_epoch_train_loss"], [90, 2, 1, "", "get_validation_metrics"], [90, 2, 1, "", "process_validation_batch"], [90, 2, 1, "", "start_epoch"]], "sensai.torch.torch_opt.NNLossEvaluatorClassification": [[90, 1, 1, "", "LossFunction"], [90, 1, 1, "", "ValidationLossEvaluator"], [90, 2, 1, "", "create_validation_loss_evaluator"], [90, 2, 1, "", "get_output_dim_weights"], [90, 2, 1, "", "get_training_criterion"], [90, 2, 1, "", "get_validation_metric_name"]], "sensai.torch.torch_opt.NNLossEvaluatorClassification.LossFunction": [[90, 3, 1, "", "CROSSENTROPY"], [90, 3, 1, "", "NLL"], [90, 2, 1, "", "create_criterion"], [90, 2, 1, "", "default_for_output_mode"], [90, 2, 1, "", "get_validation_metric_key"]], "sensai.torch.torch_opt.NNLossEvaluatorClassification.ValidationLossEvaluator": [[90, 2, 1, "", "end_validation_collection"], [90, 2, 1, "", "process_validation_result_batch"], [90, 2, 1, "", "start_validation_collection"]], "sensai.torch.torch_opt.NNLossEvaluatorFixedDim": [[90, 1, 1, "", "Evaluation"], [90, 1, 1, "", "ValidationLossEvaluator"], [90, 2, 1, "", "create_validation_loss_evaluator"], [90, 2, 1, "", "get_output_dim_weights"], [90, 2, 1, "", "get_training_criterion"], [90, 2, 1, "", "get_validation_metric_name"], [90, 2, 1, "", "start_evaluation"]], "sensai.torch.torch_opt.NNLossEvaluatorFixedDim.Evaluation": [[90, 2, 1, "", "compute_train_batch_loss"], [90, 2, 1, "", "get_epoch_train_loss"], [90, 2, 1, "", "get_validation_metrics"], [90, 2, 1, "", "process_validation_batch"], [90, 2, 1, "", "start_epoch"]], "sensai.torch.torch_opt.NNLossEvaluatorFixedDim.ValidationLossEvaluator": [[90, 2, 1, "", "end_validation_collection"], [90, 2, 1, "", "process_validation_result_batch"], [90, 2, 1, "", "start_validation_collection"]], "sensai.torch.torch_opt.NNLossEvaluatorRegression": [[90, 1, 1, "", "LossFunction"], [90, 1, 1, "", "ValidationLossEvaluator"], [90, 2, 1, "", "create_validation_loss_evaluator"], [90, 2, 1, "", "get_output_dim_weights"], [90, 2, 1, "", "get_training_criterion"], [90, 2, 1, "", "get_validation_metric_name"]], "sensai.torch.torch_opt.NNLossEvaluatorRegression.LossFunction": [[90, 3, 1, "", "L1LOSS"], [90, 3, 1, "", "L2LOSS"], [90, 3, 1, "", "MSELOSS"], [90, 3, 1, "", "SMOOTHL1LOSS"]], "sensai.torch.torch_opt.NNLossEvaluatorRegression.ValidationLossEvaluator": [[90, 2, 1, "", "end_validation_collection"], [90, 2, 1, "", "process_validation_result_batch"], [90, 2, 1, "", "start_validation_collection"]], "sensai.torch.torch_opt.NNOptimiser": [[90, 2, 1, "", "fit"], [90, 3, 1, "", "log"]], "sensai.torch.torch_opt.NNOptimiserParams": [[90, 3, 1, "", "REMOVED_PARAMS"], [90, 3, 1, "", "RENAMED_PARAMS"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "from_dict_or_instance"], [90, 2, 1, "", "from_either_dict_or_instance"]], "sensai.torch.torch_opt.Optimiser": [[90, 3, 1, "", "ADADELTA"], [90, 3, 1, "", "ADAGRAD"], [90, 3, 1, "", "ADAM"], [90, 3, 1, "", "ADAMAX"], [90, 3, 1, "", "ADAMW"], [90, 3, 1, "", "ASGD"], [90, 3, 1, "", "LBFGS"], [90, 3, 1, "", "RMSPROP"], [90, 3, 1, "", "RPROP"], [90, 3, 1, "", "SGD"], [90, 2, 1, "", "from_name"], [90, 2, 1, "", "from_name_or_instance"]], "sensai.torch.torch_opt.TrainingInfo": [[90, 2, 1, "", "get_training_loss_series"], [90, 2, 1, "", "get_validation_metric_series"], [90, 2, 1, "", "plot_all"]], "sensai.torch.torchtext": [[91, 1, 1, "", "TorchDataSetFromTorchtextDataSet"], [91, 1, 1, "", "TorchDataSetProviderFromTorchtextDataSet"], [91, 1, 1, "", "TorchtextDataSetFromDataFrame"]], "sensai.torch.torchtext.TorchDataSetFromTorchtextDataSet": [[91, 2, 1, "", "iter_batches"], [91, 2, 1, "", "size"]], "sensai.torch.torchtext.TorchDataSetProviderFromTorchtextDataSet": [[91, 2, 1, "", "provide_split"]], "sensai.tracking": [[92, 0, 0, "-", "azure_tracking"], [93, 0, 0, "-", "clearml_tracking"], [95, 0, 0, "-", "mlflow_tracking"], [96, 0, 0, "-", "tracking_base"]], "sensai.tracking.azure_tracking": [[92, 1, 1, "", "TrackedAzureMLEvaluation"], [92, 1, 1, "", "TrackedAzureMLExperiment"]], "sensai.tracking.azure_tracking.TrackedAzureMLEvaluation": [[92, 2, 1, "", "eval_model"]], "sensai.tracking.clearml_tracking": [[93, 1, 1, "", "ClearMLExperiment"], [93, 1, 1, "", "ClearMLTrackingContext"]], "sensai.tracking.clearml_tracking.ClearMLTrackingContext": [[93, 2, 1, "", "track_figure"], [93, 2, 1, "", "track_text"]], "sensai.tracking.mlflow_tracking": [[95, 1, 1, "", "MLFlowExperiment"], [95, 1, 1, "", "MLFlowTrackingContext"]], "sensai.tracking.mlflow_tracking.MLFlowExperiment": [[95, 2, 1, "", "begin_context_for_model"], [95, 2, 1, "", "end_context"]], "sensai.tracking.mlflow_tracking.MLFlowTrackingContext": [[95, 2, 1, "", "track_figure"], [95, 2, 1, "", "track_tag"], [95, 2, 1, "", "track_text"]], "sensai.tracking.tracking_base": [[96, 1, 1, "", "DummyTrackingContext"], [96, 1, 1, "", "TrackedExperiment"], [96, 1, 1, "", "TrackingContext"], [96, 1, 1, "", "TrackingMixin"]], "sensai.tracking.tracking_base.DummyTrackingContext": [[96, 2, 1, "", "is_enabled"], [96, 2, 1, "", "track_figure"], [96, 2, 1, "", "track_text"]], "sensai.tracking.tracking_base.TrackedExperiment": [[96, 2, 1, "", "begin_context"], [96, 2, 1, "", "begin_context_for_model"], [96, 2, 1, "", "end_context"], [96, 2, 1, "", "track_values"]], "sensai.tracking.tracking_base.TrackingContext": [[96, 2, 1, "", "end"], [96, 2, 1, "", "from_optional_experiment"], [96, 2, 1, "", "is_enabled"], [96, 2, 1, "", "track_figure"], [96, 2, 1, "", "track_metrics"], [96, 2, 1, "", "track_text"]], "sensai.tracking.tracking_base.TrackingMixin": [[96, 2, 1, "", "begin_optional_tracking_context_for_model"], [96, 2, 1, "", "set_tracked_experiment"], [96, 4, 1, "", "tracked_experiment"], [96, 2, 1, "", "unset_tracked_experiment"]], "sensai.util": [[97, 0, 0, "-", "aggregation"], [98, 0, 0, "-", "cache"], [99, 0, 0, "-", "cache_azure"], [100, 0, 0, "-", "cache_mysql"], [101, 0, 0, "-", "datastruct"], [102, 0, 0, "-", "deprecation"], [103, 0, 0, "-", "dtype"], [104, 0, 0, "-", "hash"], [105, 0, 0, "-", "helper"], [107, 0, 0, "-", "io"], [108, 0, 0, "-", "jscode"], [109, 0, 0, "-", "logging"], [110, 0, 0, "-", "math"], [111, 0, 0, "-", "multiprocessing"], [112, 0, 0, "-", "pandas"], [113, 0, 0, "-", "pickle"], [114, 0, 0, "-", "plot"], [115, 0, 0, "-", "profiling"], [116, 0, 0, "-", "sequences"], [117, 0, 0, "-", "string"], [118, 0, 0, "-", "test"], [119, 0, 0, "-", "time"], [120, 0, 0, "-", "typing"], [121, 0, 0, "-", "version"]], "sensai.util.aggregation": [[97, 1, 1, "", "DistributionCounter"], [97, 1, 1, "", "RelativeFrequencyCounter"], [97, 1, 1, "", "WeightedMean"]], "sensai.util.aggregation.DistributionCounter": [[97, 2, 1, "", "count"], [97, 2, 1, "", "get_distribution"]], "sensai.util.aggregation.RelativeFrequencyCounter": [[97, 2, 1, "", "add"], [97, 2, 1, "", "count"], [97, 2, 1, "", "get_relative_frequency"]], "sensai.util.aggregation.WeightedMean": [[97, 2, 1, "", "add"], [97, 2, 1, "", "get_weighted_mean"]], "sensai.util.cache": [[98, 1, 1, "", "BoxedValue"], [98, 1, 1, "", "CachedValueProviderMixin"], [98, 1, 1, "", "DelayedUpdateHook"], [98, 1, 1, "", "InMemoryKeyValueCache"], [98, 1, 1, "", "KeyValueCache"], [98, 1, 1, "", "LRUCache"], [98, 1, 1, "", "LoadSaveInterface"], [98, 1, 1, "", "PeriodicUpdateHook"], [98, 1, 1, "", "PersistentKeyValueCache"], [98, 1, 1, "", "PersistentList"], [98, 5, 1, "", "PickleCached"], [98, 1, 1, "", "PickleLoadSaveMixin"], [98, 1, 1, "", "PicklePersistentKeyValueCache"], [98, 1, 1, "", "SlicedPicklePersistentList"], [98, 1, 1, "", "SqliteConnectionManager"], [98, 1, 1, "", "SqlitePersistentKeyValueCache"], [98, 1, 1, "", "SqlitePersistentList"], [98, 5, 1, "", "cached"], [98, 5, 1, "", "pickle_cached"]], "sensai.util.cache.DelayedUpdateHook": [[98, 2, 1, "", "handle_update"]], "sensai.util.cache.InMemoryKeyValueCache": [[98, 2, 1, "", "empty"], [98, 2, 1, "", "get"], [98, 2, 1, "", "set"]], "sensai.util.cache.KeyValueCache": [[98, 2, 1, "", "get"], [98, 2, 1, "", "set"]], "sensai.util.cache.LRUCache": [[98, 2, 1, "", "clear"], [98, 2, 1, "", "get"], [98, 2, 1, "", "set"]], "sensai.util.cache.LoadSaveInterface": [[98, 2, 1, "", "load"], [98, 2, 1, "", "save"]], "sensai.util.cache.PeriodicUpdateHook": [[98, 2, 1, "", "handle_update"]], "sensai.util.cache.PersistentList": [[98, 2, 1, "", "append"], [98, 2, 1, "", "iter_items"]], "sensai.util.cache.PickleLoadSaveMixin": [[98, 2, 1, "", "load"], [98, 2, 1, "", "save"]], "sensai.util.cache.PicklePersistentKeyValueCache": [[98, 2, 1, "", "get"], [98, 2, 1, "", "save"], [98, 2, 1, "", "set"]], "sensai.util.cache.SlicedPicklePersistentList": [[98, 2, 1, "", "append"], [98, 2, 1, "", "cache_exists"], [98, 2, 1, "", "clear"], [98, 2, 1, "", "iter_items"]], "sensai.util.cache.SqliteConnectionManager": [[98, 2, 1, "", "open_connection"]], "sensai.util.cache.SqlitePersistentKeyValueCache": [[98, 1, 1, "", "KeyType"], [98, 2, 1, "", "get"], [98, 2, 1, "", "iter_items"], [98, 2, 1, "", "set"]], "sensai.util.cache.SqlitePersistentKeyValueCache.KeyType": [[98, 3, 1, "", "INTEGER"], [98, 3, 1, "", "STRING"]], "sensai.util.cache.SqlitePersistentList": [[98, 2, 1, "", "append"], [98, 2, 1, "", "iter_items"]], "sensai.util.cache_azure": [[99, 1, 1, "", "AzureLazyBatchCommitTable"], [99, 1, 1, "", "AzureTableBlobBackend"], [99, 1, 1, "", "AzureTablePersistentKeyValueCache"], [99, 1, 1, "", "BlobBackedPropertyLoader"], [99, 1, 1, "", "BlobBackedSerialisedPropertyLoader"], [99, 1, 1, "", "BlobPerKeyAzureTableBlobBackend"], [99, 1, 1, "", "JsonAzureTableBlobBackend"], [99, 1, 1, "", "NumpyArrayJsonSerialiser"], [99, 1, 1, "", "PickleAzureTableBlobBackend"], [99, 1, 1, "", "PropertyLoader"], [99, 1, 1, "", "SerialisedPropertyLoader"], [99, 1, 1, "", "Serialiser"], [99, 1, 1, "", "TextDumpAzureTableBlobBackend"]], "sensai.util.cache_azure.AzureLazyBatchCommitTable": [[99, 3, 1, "", "AZURE_ALLOWED_TABLE_BATCH_SIZE"], [99, 3, 1, "", "AZURE_ALLOWED_TABLE_NAME_PATTERN"], [99, 1, 1, "", "PartitionCommandsPriorityQueue"], [99, 2, 1, "", "commit_blocking_largest_partition_from_queue"], [99, 2, 1, "", "commit_blocking_until_empty"], [99, 2, 1, "", "commit_non_blocking_current_queue_state"], [99, 2, 1, "", "exists"], [99, 2, 1, "", "get_entity"], [99, 2, 1, "", "insert_data_frame_to_table"], [99, 2, 1, "", "insert_entity"], [99, 2, 1, "", "insert_or_replace_entity"], [99, 2, 1, "", "iter_data_frame_chunks"], [99, 2, 1, "", "iter_records"], [99, 2, 1, "", "load_table_to_data_frame"]], "sensai.util.cache_azure.AzureLazyBatchCommitTable.PartitionCommandsPriorityQueue": [[99, 1, 1, "", "PartitionCommands"], [99, 2, 1, "", "add_command"], [99, 2, 1, "", "is_empty"], [99, 2, 1, "", "pop"], [99, 2, 1, "", "pop_all"]], "sensai.util.cache_azure.AzureLazyBatchCommitTable.PartitionCommandsPriorityQueue.PartitionCommands": [[99, 2, 1, "", "append"], [99, 2, 1, "", "execute"]], "sensai.util.cache_azure.AzureTableBlobBackend": [[99, 2, 1, "", "get_value_from_reference"], [99, 2, 1, "", "get_value_reference"], [99, 2, 1, "", "set_value_for_reference"]], "sensai.util.cache_azure.AzureTablePersistentKeyValueCache": [[99, 3, 1, "", "CACHE_VALUE_IDENTIFIER"], [99, 2, 1, "", "get"], [99, 2, 1, "", "set"]], "sensai.util.cache_azure.BlobBackedPropertyLoader": [[99, 3, 1, "", "AZURE_ALLOWED_SIZE_PER_PROPERTY_BYTES"], [99, 3, 1, "", "AZURE_ALLOWED_STRING_LENGTH_PER_PROPERTY"], [99, 2, 1, "", "load_property_value"], [99, 2, 1, "", "load_property_value_to_data_frame_column"], [99, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.BlobBackedSerialisedPropertyLoader": [[99, 2, 1, "", "load_property_value"], [99, 2, 1, "", "load_property_value_to_data_frame_column"], [99, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.BlobPerKeyAzureTableBlobBackend": [[99, 4, 1, "", "file_extension"], [99, 2, 1, "", "get_value_from_reference"], [99, 2, 1, "", "get_value_reference"], [99, 2, 1, "", "set_value_for_reference"]], "sensai.util.cache_azure.JsonAzureTableBlobBackend": [[99, 4, 1, "", "file_extension"]], "sensai.util.cache_azure.NumpyArrayJsonSerialiser": [[99, 2, 1, "", "deserialise"], [99, 2, 1, "", "serialise"]], "sensai.util.cache_azure.PickleAzureTableBlobBackend": [[99, 4, 1, "", "file_extension"]], "sensai.util.cache_azure.PropertyLoader": [[99, 2, 1, "", "load_property_value"], [99, 2, 1, "", "load_property_value_to_data_frame_column"], [99, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.SerialisedPropertyLoader": [[99, 2, 1, "", "load_property_value"], [99, 2, 1, "", "load_property_value_to_data_frame_column"], [99, 2, 1, "", "write_property_value"]], "sensai.util.cache_azure.Serialiser": [[99, 2, 1, "", "deserialise"], [99, 2, 1, "", "serialise"]], "sensai.util.cache_azure.TextDumpAzureTableBlobBackend": [[99, 4, 1, "", "file_extension"]], "sensai.util.cache_mysql": [[100, 1, 1, "", "MySQLPersistentKeyValueCache"]], "sensai.util.cache_mysql.MySQLPersistentKeyValueCache": [[100, 1, 1, "", "ValueType"], [100, 2, 1, "", "get"], [100, 2, 1, "", "set"]], "sensai.util.cache_mysql.MySQLPersistentKeyValueCache.ValueType": [[100, 3, 1, "", "BLOB"], [100, 3, 1, "", "DOUBLE"]], "sensai.util.datastruct": [[101, 1, 1, "", "DeferredParams"], [101, 1, 1, "", "Maybe"], [101, 1, 1, "", "SortedKeyValuePairs"], [101, 1, 1, "", "SortedKeyValueStructure"], [101, 1, 1, "", "SortedKeysAndValues"], [101, 1, 1, "", "SortedValues"], [101, 1, 1, "", "Trivalent"]], "sensai.util.datastruct.DeferredParams": [[101, 3, 1, "", "UNDEFINED"], [101, 2, 1, "", "get_dict"], [101, 2, 1, "", "get_param"], [101, 2, 1, "", "set_param"]], "sensai.util.datastruct.SortedKeyValuePairs": [[101, 2, 1, "", "ceil_index"], [101, 2, 1, "", "ceil_key_and_value"], [101, 2, 1, "", "ceil_value"], [101, 2, 1, "", "closest_index"], [101, 2, 1, "", "closest_key_and_value"], [101, 2, 1, "", "closest_value"], [101, 2, 1, "", "floor_index"], [101, 2, 1, "", "floor_key_and_value"], [101, 2, 1, "", "floor_value"], [101, 2, 1, "", "from_unsorted_key_value_pairs"], [101, 2, 1, "", "key_for_index"], [101, 2, 1, "", "value_for_index"], [101, 2, 1, "", "value_slice"]], "sensai.util.datastruct.SortedKeyValueStructure": [[101, 2, 1, "", "ceil_index"], [101, 2, 1, "", "ceil_key_and_value"], [101, 2, 1, "", "ceil_value"], [101, 2, 1, "", "closest_index"], [101, 2, 1, "", "closest_key_and_value"], [101, 2, 1, "", "closest_value"], [101, 2, 1, "", "floor_index"], [101, 2, 1, "", "floor_key_and_value"], [101, 2, 1, "", "floor_value"], [101, 2, 1, "", "interpolated_value"], [101, 2, 1, "", "slice"]], "sensai.util.datastruct.SortedKeysAndValues": [[101, 2, 1, "", "ceil_index"], [101, 2, 1, "", "ceil_key_and_value"], [101, 2, 1, "", "ceil_value"], [101, 2, 1, "", "closest_index"], [101, 2, 1, "", "closest_key_and_value"], [101, 2, 1, "", "closest_value"], [101, 2, 1, "", "floor_index"], [101, 2, 1, "", "floor_key_and_value"], [101, 2, 1, "", "floor_value"], [101, 2, 1, "", "from_series"], [101, 2, 1, "", "value_slice_inner"], [101, 2, 1, "", "value_slice_outer"]], "sensai.util.datastruct.SortedValues": [[101, 2, 1, "", "ceil_index"], [101, 2, 1, "", "ceil_value"], [101, 2, 1, "", "closest_index"], [101, 2, 1, "", "closest_value"], [101, 2, 1, "", "floor_index"], [101, 2, 1, "", "floor_value"], [101, 2, 1, "", "value_slice"]], "sensai.util.datastruct.Trivalent": [[101, 3, 1, "", "FALSE"], [101, 3, 1, "", "TRUE"], [101, 3, 1, "", "UNKNOWN"], [101, 2, 1, "", "from_bool"], [101, 2, 1, "", "is_false"], [101, 2, 1, "", "is_true"]], "sensai.util.deprecation": [[102, 5, 1, "", "deprecated"]], "sensai.util.dtype": [[103, 5, 1, "", "dict_to_ordered_tuples"], [103, 5, 1, "", "to_float_array"]], "sensai.util.hash": [[104, 5, 1, "", "pickle_hash"], [104, 5, 1, "", "str_hash"]], "sensai.util.helper": [[105, 5, 1, "", "all_none"], [105, 5, 1, "", "any_none"], [105, 5, 1, "", "check_not_nan_dict"], [105, 5, 1, "", "contains_any"], [105, 5, 1, "", "count_none"], [105, 5, 1, "", "count_not_none"], [105, 5, 1, "", "flatten_arguments"], [105, 5, 1, "", "kwarg_if_not_none"], [105, 5, 1, "", "mark_used"]], "sensai.util.io": [[107, 1, 1, "", "ResultWriter"], [107, 1, 1, "", "S3Object"], [107, 5, 1, "", "create_dir_path"], [107, 5, 1, "", "create_file_path"], [107, 5, 1, "", "create_path"], [107, 5, 1, "", "is_s3_path"], [107, 5, 1, "", "read_text_file_lines"], [107, 5, 1, "", "write_text_file_lines"]], "sensai.util.io.ResultWriter": [[107, 2, 1, "", "child_for_subdirectory"], [107, 2, 1, "", "child_with_added_prefix"], [107, 3, 1, "", "log"], [107, 2, 1, "", "path"], [107, 2, 1, "", "write_data_frame_csv_file"], [107, 2, 1, "", "write_data_frame_text_file"], [107, 2, 1, "", "write_figure"], [107, 2, 1, "", "write_figures"], [107, 2, 1, "", "write_pickle"], [107, 2, 1, "", "write_text_file"], [107, 2, 1, "", "write_text_file_lines"]], "sensai.util.io.S3Object": [[107, 1, 1, "", "OutputFile"], [107, 2, 1, "", "get_file_content"], [107, 2, 1, "", "open_file"], [107, 2, 1, "", "put"]], "sensai.util.io.S3Object.OutputFile": [[107, 2, 1, "", "write"]], "sensai.util.jscode": [[108, 1, 1, "", "JsClassInstance"], [108, 1, 1, "", "JsCode"], [108, 1, 1, "", "JsCodeLiteral"], [108, 1, 1, "", "JsList"], [108, 1, 1, "", "JsObject"], [108, 1, 1, "", "JsValue"], [108, 1, 1, "", "JsValueLiteral"], [108, 5, 1, "", "js_arg_list"], [108, 5, 1, "", "js_value"]], "sensai.util.jscode.JsCode": [[108, 2, 1, "", "get_js_code"]], "sensai.util.jscode.JsCodeLiteral": [[108, 2, 1, "", "get_js_code"]], "sensai.util.jscode.JsObject": [[108, 2, 1, "", "add"], [108, 2, 1, "", "add_code_literal"], [108, 2, 1, "", "add_float"], [108, 2, 1, "", "add_json"], [108, 2, 1, "", "add_string"], [108, 2, 1, "", "get_js_code"]], "sensai.util.jscode.JsValue": [[108, 2, 1, "", "bool_value"], [108, 2, 1, "", "float_value"], [108, 2, 1, "", "from_python"], [108, 2, 1, "", "from_value"], [108, 2, 1, "", "int_value"], [108, 2, 1, "", "is_undefined"], [108, 2, 1, "", "null"], [108, 2, 1, "", "string_value"], [108, 2, 1, "", "undefined"]], "sensai.util.jscode.JsValueLiteral": [[108, 2, 1, "", "get_js_code"]], "sensai.util.logging": [[109, 1, 1, "", "FallbackHandler"], [109, 1, 1, "", "FileLoggerContext"], [109, 1, 1, "", "LogTime"], [109, 1, 1, "", "LoggerContext"], [109, 1, 1, "", "LoggingDisabledContext"], [109, 1, 1, "", "MemoryLoggerContext"], [109, 1, 1, "", "MemoryStreamHandler"], [109, 1, 1, "", "StopWatch"], [109, 1, 1, "", "StopWatchManager"], [109, 5, 1, "", "add_file_logger"], [109, 5, 1, "", "add_memory_logger"], [109, 5, 1, "", "configure"], [109, 5, 1, "", "datetime_tag"], [109, 5, 1, "", "is_enabled"], [109, 5, 1, "", "is_log_handler_active"], [109, 5, 1, "", "remove_log_handler"], [109, 5, 1, "", "remove_log_handlers"], [109, 5, 1, "", "run_cli"], [109, 5, 1, "", "run_main"], [109, 5, 1, "", "set_configure_callback"]], "sensai.util.logging.FallbackHandler": [[109, 2, 1, "", "emit"]], "sensai.util.logging.LogTime": [[109, 2, 1, "", "start"], [109, 2, 1, "", "stop"]], "sensai.util.logging.MemoryStreamHandler": [[109, 2, 1, "", "get_log"]], "sensai.util.logging.StopWatch": [[109, 2, 1, "", "get_elapsed_time_secs"], [109, 2, 1, "", "get_elapsed_time_string"], [109, 2, 1, "", "get_elapsed_timedelta"], [109, 2, 1, "", "pause"], [109, 2, 1, "", "reset"], [109, 2, 1, "", "restart"], [109, 2, 1, "", "resume"]], "sensai.util.logging.StopWatchManager": [[109, 2, 1, "", "get_instance"], [109, 2, 1, "", "is_running"], [109, 2, 1, "", "start"], [109, 2, 1, "", "stop"]], "sensai.util.math": [[110, 1, 1, "", "NormalDistribution"], [110, 5, 1, "", "reduce_float_precision_decimals"], [110, 5, 1, "", "reverse_sigmoid"], [110, 5, 1, "", "sigmoid"]], "sensai.util.math.NormalDistribution": [[110, 2, 1, "", "pdf"]], "sensai.util.multiprocessing": [[111, 1, 1, "", "VectorModelWithSeparateFeatureGeneration"]], "sensai.util.multiprocessing.VectorModelWithSeparateFeatureGeneration": [[111, 1, 1, "", "IntermediateFittingStep"], [111, 1, 1, "", "PredictFinaliser"], [111, 2, 1, "", "fit_end"], [111, 2, 1, "", "fit_start"], [111, 2, 1, "", "predict_start"]], "sensai.util.multiprocessing.VectorModelWithSeparateFeatureGeneration.IntermediateFittingStep": [[111, 2, 1, "", "execute"]], "sensai.util.multiprocessing.VectorModelWithSeparateFeatureGeneration.PredictFinaliser": [[111, 2, 1, "", "execute"]], "sensai.util.pandas": [[112, 1, 1, "", "DataFrameColumnChangeTracker"], [112, 1, 1, "", "SeriesInterpolation"], [112, 1, 1, "", "SeriesInterpolationLinearIndex"], [112, 1, 1, "", "SeriesInterpolationRepeatPreceding"], [112, 5, 1, "", "average_series"], [112, 5, 1, "", "extract_array"], [112, 5, 1, "", "query_data_frame"], [112, 5, 1, "", "remove_duplicate_index_entries"]], "sensai.util.pandas.DataFrameColumnChangeTracker": [[112, 2, 1, "", "assert_change_was_tracked"], [112, 2, 1, "", "column_change_string"], [112, 2, 1, "", "get_added_columns"], [112, 2, 1, "", "get_removed_columns"], [112, 2, 1, "", "track_change"]], "sensai.util.pandas.SeriesInterpolation": [[112, 2, 1, "", "interpolate"], [112, 2, 1, "", "interpolate_all_with_combined_index"]], "sensai.util.pickle": [[113, 1, 1, "", "PersistableObject"], [113, 1, 1, "", "PickleFailureDebugger"], [113, 5, 1, "", "dump_pickle"], [113, 5, 1, "", "getstate"], [113, 5, 1, "", "load_pickle"], [113, 5, 1, "", "setstate"]], "sensai.util.pickle.PickleFailureDebugger": [[113, 2, 1, "", "debug_failure"], [113, 3, 1, "", "enabled"], [113, 2, 1, "", "log_failure_if_enabled"]], "sensai.util.plot": [[114, 1, 1, "", "AverageSeriesLinePlot"], [114, 1, 1, "", "Color"], [114, 1, 1, "", "HeatMapPlot"], [114, 1, 1, "", "HistogramPlot"], [114, 1, 1, "", "LinearColorMap"], [114, 1, 1, "", "Plot"], [114, 1, 1, "", "ScatterPlot"], [114, 5, 1, "", "plot_matrix"]], "sensai.util.plot.Color": [[114, 2, 1, "", "alpha"], [114, 2, 1, "", "darken"], [114, 2, 1, "", "lighten"], [114, 2, 1, "", "to_hex"]], "sensai.util.plot.HeatMapPlot": [[114, 2, 1, "", "DEFAULT_CMAP_FACTORY"]], "sensai.util.plot.LinearColorMap": [[114, 2, 1, "", "get_color"]], "sensai.util.plot.Plot": [[114, 2, 1, "", "save"], [114, 2, 1, "", "title"], [114, 2, 1, "", "xlabel"], [114, 2, 1, "", "xlim"], [114, 2, 1, "", "xtick"], [114, 2, 1, "", "xtick_major"], [114, 2, 1, "", "xtick_minor"], [114, 2, 1, "", "ylabel"], [114, 2, 1, "", "ylim"], [114, 2, 1, "", "ytick_major"]], "sensai.util.plot.ScatterPlot": [[114, 3, 1, "", "MAX_OPACITY"], [114, 3, 1, "", "MIN_OPACITY"], [114, 3, 1, "", "N_MAX_TRANSPARENCY"], [114, 3, 1, "", "N_MIN_TRANSPARENCY"]], "sensai.util.profiling": [[115, 5, 1, "", "profiled"], [115, 5, 1, "", "timed"]], "sensai.util.sequences": [[116, 5, 1, "", "ceil_index"], [116, 5, 1, "", "ceil_value"], [116, 5, 1, "", "closest_index"], [116, 5, 1, "", "closest_value"], [116, 5, 1, "", "concat_sequences"], [116, 5, 1, "", "floor_index"], [116, 5, 1, "", "floor_value"], [116, 5, 1, "", "get_first_duplicate"], [116, 5, 1, "", "value_slice_inner"], [116, 5, 1, "", "value_slice_outer"]], "sensai.util.string": [[117, 1, 1, "", "StringConverter"], [117, 1, 1, "", "TagBuilder"], [117, 1, 1, "", "ToStringMixin"], [117, 5, 1, "", "dict_string"], [117, 5, 1, "", "function_name"], [117, 5, 1, "", "list_string"], [117, 5, 1, "", "object_repr"], [117, 5, 1, "", "or_regex_group"], [117, 5, 1, "", "pretty_string_repr"], [117, 5, 1, "", "to_string"]], "sensai.util.string.StringConverter": [[117, 2, 1, "", "to_string"]], "sensai.util.string.TagBuilder": [[117, 2, 1, "", "build"], [117, 2, 1, "", "with_alternative"], [117, 2, 1, "", "with_component"], [117, 2, 1, "", "with_conditional"]], "sensai.util.string.ToStringMixin": [[117, 2, 1, "", "_tostring_additional_entries"], [117, 2, 1, "", "_tostring_class_name"], [117, 2, 1, "", "_tostring_exclude_exceptions"], [117, 2, 1, "", "_tostring_exclude_private"], [117, 2, 1, "", "_tostring_excludes"], [117, 2, 1, "", "_tostring_includes"], [117, 2, 1, "", "_tostring_includes_forced"], [117, 2, 1, "", "_tostring_object_info"], [117, 2, 1, "", "pprint"], [117, 2, 1, "", "pprints"]], "sensai.util.test": [[118, 5, 1, "", "convert_floats"], [118, 5, 1, "", "json_mapper"], [118, 5, 1, "", "reduce_float_precision"], [118, 5, 1, "", "snapshot_compatible"]], "sensai.util.time": [[119, 1, 1, "", "TimeInterval"], [119, 5, 1, "", "format_duration"], [119, 5, 1, "", "time_of_day"], [119, 5, 1, "", "ts_next_month"]], "sensai.util.time.TimeInterval": [[119, 2, 1, "", "contains"], [119, 2, 1, "", "contains_time"], [119, 2, 1, "", "intersection"], [119, 2, 1, "", "mid_timestamp"], [119, 2, 1, "", "overlaps_with"], [119, 2, 1, "", "time_delta"]], "sensai.util.typing": [[120, 1, 1, "", "PandasNamedTuple"]], "sensai.util.typing.PandasNamedTuple": [[120, 3, 1, "", "Index"]], "sensai.util.version": [[121, 1, 1, "", "Version"]], "sensai.util.version.Version": [[121, 2, 1, "", "is_at_least"], [121, 2, 1, "", "is_at_most"], [121, 2, 1, "", "is_equal"]], "sensai.vector_model": [[122, 1, 1, "", "RuleBasedVectorClassificationModel"], [122, 1, 1, "", "RuleBasedVectorRegressionModel"], [122, 1, 1, "", "TrainingContext"], [122, 1, 1, "", "VectorClassificationModel"], [122, 1, 1, "", "VectorModel"], [122, 1, 1, "", "VectorModelBase"], [122, 1, 1, "", "VectorRegressionModel"], [122, 5, 1, "", "get_predicted_var_name"]], "sensai.vector_model.VectorClassificationModel": [[122, 2, 1, "", "convert_class_probabilities_to_predictions"], [122, 2, 1, "", "get_class_labels"], [122, 2, 1, "", "is_regression_model"], [122, 2, 1, "", "predict_class_probabilities"]], "sensai.vector_model.VectorModel": [[122, 3, 1, "", "TOSTRING_INCLUDE_PREPROCESSORS"], [122, 2, 1, "", "compute_model_inputs"], [122, 2, 1, "", "compute_model_outputs"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_input_output_data"], [122, 2, 1, "", "get_feature_generator"], [122, 2, 1, "", "get_feature_transformer"], [122, 2, 1, "", "get_feature_transformer_chain"], [122, 2, 1, "", "get_input_transformer"], [122, 2, 1, "", "get_input_transformer_chain"], [122, 2, 1, "", "get_model_input_variable_names"], [122, 2, 1, "", "get_predicted_variable_names"], [122, 2, 1, "", "get_raw_input_transformer"], [122, 2, 1, "", "get_raw_input_transformer_chain"], [122, 2, 1, "", "is_being_fitted"], [122, 2, 1, "", "is_fitted"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "remove_input_preprocessors"], [122, 2, 1, "", "set_feature_generator"], [122, 2, 1, "", "with_feature_collector"], [122, 2, 1, "", "with_feature_generator"], [122, 2, 1, "", "with_feature_transformers"], [122, 2, 1, "", "with_input_transformers"], [122, 2, 1, "", "with_raw_input_transformers"]], "sensai.vector_model.VectorModelBase": [[122, 2, 1, "", "get_name"], [122, 2, 1, "", "get_predicted_variable_names"], [122, 2, 1, "", "is_regression_model"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "set_name"], [122, 2, 1, "", "with_name"]], "sensai.vector_model.VectorRegressionModel": [[122, 2, 1, "", "get_model_output_variable_names"], [122, 2, 1, "", "get_output_transformer_chain"], [122, 2, 1, "", "get_target_transformer"], [122, 2, 1, "", "is_fitted"], [122, 2, 1, "", "is_regression_model"], [122, 2, 1, "", "predict"], [122, 2, 1, "", "with_output_transformers"], [122, 2, 1, "", "with_target_transformer"]], "sensai.vectoriser": [[123, 1, 1, "", "EmptyVectoriser"], [123, 1, 1, "", "ItemIdentifierProvider"], [123, 1, 1, "", "SequenceVectoriser"], [123, 1, 1, "", "Vectoriser"], [123, 1, 1, "", "VectoriserRegistry"]], "sensai.vectoriser.ItemIdentifierProvider": [[123, 2, 1, "", "get_identifier"]], "sensai.vectoriser.SequenceVectoriser": [[123, 1, 1, "", "FittingMode"], [123, 2, 1, "", "apply"], [123, 2, 1, "", "apply_multi"], [123, 2, 1, "", "apply_multi_with_padding"], [123, 2, 1, "", "fit"], [123, 2, 1, "", "get_vector_dim"], [123, 3, 1, "", "log"]], "sensai.vectoriser.SequenceVectoriser.FittingMode": [[123, 3, 1, "", "CONCAT"], [123, 3, 1, "", "NONE"], [123, 3, 1, "", "UNIQUE"]], "sensai.vectoriser.Vectoriser": [[123, 1, 1, "", "ResultType"], [123, 2, 1, "", "apply"], [123, 2, 1, "", "apply_multi"], [123, 2, 1, "", "fit"], [123, 2, 1, "", "get_name"], [123, 2, 1, "", "is_fitted"], [123, 3, 1, "", "log"], [123, 2, 1, "", "set_name"]], "sensai.vectoriser.Vectoriser.ResultType": [[123, 3, 1, "", "LIST"], [123, 3, 1, "", "NUMPY_ARRAY"], [123, 3, 1, "", "SCALAR"], [123, 2, 1, "", "from_value"]], "sensai.vectoriser.VectoriserRegistry": [[123, 2, 1, "", "get_available_vectorisers"], [123, 2, 1, "", "get_vectoriser"], [123, 2, 1, "", "get_vectorisers"], [123, 2, 1, "", "register_factory"]], "sensai.xgboost": [[124, 1, 1, "", "XGBGradientBoostedVectorClassificationModel"], [124, 1, 1, "", "XGBGradientBoostedVectorRegressionModel"], [124, 1, 1, "", "XGBRandomForestVectorClassificationModel"], [124, 1, 1, "", "XGBRandomForestVectorRegressionModel"], [124, 5, 1, "", "is_xgboost_version_at_least"]], "sensai.xgboost.XGBGradientBoostedVectorClassificationModel": [[124, 2, 1, "", "is_sample_weight_supported"]], "sensai.xgboost.XGBGradientBoostedVectorRegressionModel": [[124, 2, 1, "", "is_sample_weight_supported"]], "sensai.xgboost.XGBRandomForestVectorClassificationModel": [[124, 2, 1, "", "is_sample_weight_supported"]], "sensai.xgboost.XGBRandomForestVectorRegressionModel": [[124, 2, 1, "", "is_sample_weight_supported"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"model": [0, 2, 3, 21], "modular": 0, "data": [0, 2, 12], "pipelin": 0, "vectormodel": [0, 2], "The": 0, "class": 0, "hierarchi": 0, "datafram": 0, "base": 0, "interfac": 0, "implement": 0, "custom": [0, 3], "configur": 0, "exampl": 0, "dataset": [0, 11], "titan": 0, "surviv": 0, "raw": 0, "input": [0, 3], "transform": [0, 2], "featur": [0, 2], "gener": [0, 2], "simpl": [0, 2], "notebook": 1, "tutori": 1, "introduct": 2, "sensai": [2, 4], "supervis": 2, "learn": 2, "log": [2, 109], "train": 2, "evalu": [2, 29, 31], "low": 2, "level": 2, "infer": 2, "us": 2, "fulli": 2, "integr": 2, "util": [2, 106], "customis": 2, "set": 2, "plot": [2, 114], "cross": 2, "valid": 2, "compar": 2, "frame": 2, "neural": 3, "network": 3, "imag": 3, "classif": 3, "appli": 3, "predefin": 3, "creat": 3, "cnn": 3, "wrap": 3, "torch": [3, 71], "nn": 3, "modul": 3, "instanc": 3, "an": 3, "output": 3, "adapt": 3, "welcom": 4, "indic": 4, "tabl": 4, "catboost": 5, "clustering_bas": 6, "greedy_clust": 7, "cluster": 8, "sklearn_clust": 9, "columngen": 10, "io_data": 13, "dft": 14, "data_transform": 15, "sklearn_transform": 16, "value_transform": 17, "distance_metr": 18, "ensemble_bas": 19, "ensembl": 20, "crossval": 22, "eval_stats_bas": 23, "eval_stats_classif": 24, "eval_stats_clust": 25, "eval_stats_regress": 26, "eval_stat": 27, "eval_util": 28, "evaluator_clust": 30, "metric_comput": 32, "result_set": 33, "feature_import": 34, "feature_select": 35, "rfe": 36, "feature_gener": 37, "feature_generator_registri": 38, "featuregen": 39, "geo_clust": 40, "geo_coord": 41, "coordinate_clust": 42, "coordinate_clustering_ground_truth": 43, "coordin": 44, "geometri": 45, "graph": 46, "geopanda": 47, "geoanalyt": 48, "local_coord": 49, "map_til": 50, "hyperopt": 51, "api": 52, "refer": 52, "lightgbm": 53, "local_search": 54, "minizinc": 55, "multi_model": 56, "naive_bay": 57, "nearest_neighbor": 58, "normalis": 59, "pytorch_lightn": 60, "pl_model": 61, "sklearn": 62, "sklearn_bas": 63, "sklearn_classif": 64, "sklearn_regress": 65, "sklearn_quantil": 66, "tensor_model": 67, "tensorflow": 68, "tf_base": 69, "tf_mlp": 70, "torch_bas": 72, "torch_data": 73, "torch_enum": 74, "torch_eval_util": 75, "torch_model": 76, "lstnet": 77, "lstnet_model": 78, "lstnet_modul": 79, "mlp": 80, "mlp_model": 81, "mlp_modul": 82, "residualffn": 83, "residualffn_model": 84, "residualffn_modul": 85, "seq": 86, "seq_model": 87, "seq_modul": 88, "torch_modul": 89, "torch_opt": 90, "torchtext": 91, "azure_track": 92, "clearml_track": 93, "track": 94, "mlflow_track": 95, "tracking_bas": 96, "aggreg": 97, "cach": 98, "cache_azur": 99, "cache_mysql": 100, "datastruct": 101, "deprec": 102, "dtype": 103, "hash": 104, "helper": 105, "io": 107, "jscode": 108, "math": 110, "multiprocess": 111, "panda": 112, "pickl": 113, "profil": 115, "sequenc": 116, "string": 117, "test": 118, "time": 119, "type": 120, "version": 121, "vector_model": 122, "vectoris": 123, "xgboost": 124}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 56}})