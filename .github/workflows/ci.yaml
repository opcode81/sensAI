name: CI

on:
    push:
        branches: [develop, master]
    pull_request:
        branches: [develop]

jobs:
    # Define matrix build for multiple test scenarios
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                env_name: [py, py_latest_dependencies, py_backwardscompat]
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [[ "${{ matrix.env_name }}" == "py" ]]; then
                    pip install -v -r  requirements.txt -r requirements_torch.txt -r requirements_lightgbm.txt -r requirements_geoanalytics.txt -r requirements_xgboost.txt pytest pytest-cov pytest-xdist pytorch-lightning~=1.1.0;
                  elif [[ "${{ matrix.env_name }}" == "py_latest_dependencies" ]]; then
                    pip install pytest jupyter==1.0.0 nbconvert==6.5.0 clearml==0.17.1 pytorch-lightning>=1.1 ".[full]";
                  elif [[ "${{ matrix.env_name }}" == "py_backwardscompat" ]]; then
                    pip install pytest scikit-learn==1.0.2 pytorch-lightning>=1.1 ".[torch]";
                  fi

            - name: Run Tests
              run: |
                  if [[ "${{ matrix.env_name }}" == "py" ]]; then
                    coverage erase
                    pytest -n 4 --cov --cov-append --cov-report=term-missing tests;
                  elif [[ "${{ matrix.env_name }}" == "py_latest_dependencies" ]]; then
                    pytest
                    pytest notebooks;
                  elif [[ "${{ matrix.env_name }}" == "py_backwardscompat" ]]; then
                    pytest tests/backwardscompat;
                  fi

    # Documentation build job
    docs:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install Documentation Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install sphinx==5.0.2 sphinxcontrib-websupport==1.2.4 sphinx-toolbox==3.7.0 sphinx_rtd_theme nbsphinx ipython ipywidgets jupyter-book==0.15.1

            - name: Build Documentation
              run: sh build-docs.sh

    # Coverage report generation
    coverage:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install Coverage Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install coverage coverage-badge

            - name: Generate Coverage Report
              run: |
                  coverage html
                  coverage-badge -o badges/coverage.svg -f
                  coverage erase
